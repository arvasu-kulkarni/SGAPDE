sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - ux) / (0 * u)))+(x * ( ^3 x))+( ^3 (ux + x))+((( ^2 u) + (ux - 0)) * (ux d^2 x))
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 1
a_pde.visualize(): (x * u)+( ^2 u)+(ux d x)
evaluate_aic: -8.354853252224842
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 191, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 149, in evaluate_mse
    w, loss, mse, aic = Train(terms_values, ut.reshape(n * m, 1), 0, 1, aic_ratio)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 143, in Train
    w = STRidge(R, Ut, lam, STR_iters, tol, normalize=normalize)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 223, in STRidge
    if biginds != []: 
       ^^^^^^^^^^^^^
ValueError: operands could not be broadcast together with shapes (2,) (0,) 
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 191, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 149, in evaluate_mse
    w, loss, mse, aic = Train(terms_values, ut.reshape(n * m, 1), 0, 1, aic_ratio)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 143, in Train
    w = STRidge(R, Ut, lam, STR_iters, tol, normalize=normalize)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 223, in STRidge
    if biginds.size != 0: 
       ^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'size'
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - ux) / (0 * u)))+(x * ( ^3 x))+( ^3 (ux + x))+((( ^2 u) + (ux - 0)) * (ux d^2 x))
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 1
a_pde.visualize(): (x * u)+( ^2 u)+(ux d x)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 2
a_pde.visualize(): ((( ^2 0) - ( ^2 ux)) d x)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 3
a_pde.visualize(): (x / ux)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 4
a_pde.visualize(): ( ^2 (u d x))+( ^2 ux)+( ^2 ux)+( ^3 (x + ( ^3 x)))+(((x * u) d x) * x)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 5
a_pde.visualize(): (ux * ux)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 6
a_pde.visualize(): ( ^2 ux)+(((u / ux) d x) d x)+(u d^2 x)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 7
a_pde.visualize(): ((( ^3 u) / (u * ux)) / ((x / ux) + ( ^2 u)))+( ^3 ux)+(x * ((ux - x) - (u d^2 x)))
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 8
a_pde.visualize(): ( ^2 (ux - (u + ux)))
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 9
a_pde.visualize(): (( ^3 ux) d^2 x)+( ^3 ( ^3 u))
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 10
a_pde.visualize(): (ux / 0)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 11
a_pde.visualize(): ( ^3 (u / 0))+(((x - ux) d x) / (ux * (ux d^2 x)))+(( ^3 ux) d^2 x)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 12
a_pde.visualize(): ( ^2 u)+(ux d x)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 13
a_pde.visualize(): (((u + ux) d^2 x) * ( ^2 (u - ux)))+( ^2 (ux d^2 x))+( ^3 ux)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 14
a_pde.visualize(): (((u * ux) - x) / x)+((u + 0) d x)+(((x / u) / (u + ux)) * (( ^3 u) + 0))+(x / 0)+( ^2 u)
evaluate_aic: -8.422501816361311
Creating the ith pde, i= 15
a_pde.visualize(): (u d^2 x)+( ^3 u)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 16
a_pde.visualize(): ( ^3 ux)+( ^2 x)+(((u / 0) d^2 x) d x)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 17
a_pde.visualize(): ((u - x) * (u - (ux - 0)))+(((x / x) d^2 x) d x)+(ux / ( ^3 x))
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 18
a_pde.visualize(): (x / u)
evaluate_aic: -8.354853252224842
Creating the ith pde, i= 19
a_pde.visualize(): (((ux + 0) d x) d^2 x)+( ^3 (ux / x))+( ^2 ux)+(x / x)
evaluate_aic: -8.354853252224842
here
1 generation best_aic & best Eq: -8.655104786936327, ( ^3 ((u + ux) / (0 - u)))+( ^2 (ux + (x / u)))+( ^3 (ux + ux))+((( ^2 u) + (ux - 0)) * (ux - x))
best concise Eq: -0.0223((( ^2 u) + (ux - 0)) * (ux - x))
We are close to the answer, pay attention
1 generation repeat cross over 1 times and mutation 1 times
here
2 generation best_aic & best Eq: -8.998369228410406, ( ^3 ((u + ux) / (ux - u)))+( ^2 (x + (x / u)))+((( ^2 u) + (ux + 0)) * (u + x))
best concise Eq: 0.0377((( ^2 u) + (ux + 0)) * (u + x))
We are close to the answer, pay attention
2 generation repeat cross over 8 times and mutation 0 times
here
3 generation best_aic & best Eq: -10.164716806522645, (u d^2 x)+( ^2 (ux + (ux + x)))+((u + ux) d^2 x)+((( ^2 u) / (ux * 0)) * (x * ux))
best concise Eq: 
We are close to the answer, pay attention
3 generation repeat cross over 2 times and mutation 0 times
here
4 generation best_aic & best Eq: -10.164716806522645, (u d^2 x)+( ^2 (ux + (ux + x)))+((u + ux) d^2 x)+((( ^2 u) / (ux * 0)) * (x * ux))
best concise Eq: 
We are close to the answer, pay attention
4 generation repeat cross over 4 times and mutation 0 times
here
5 generation best_aic & best Eq: -10.164716806522645, (u d^2 x)+( ^2 (ux + (ux + x)))+((u + ux) d^2 x)+((( ^2 u) / (ux * 0)) * (x * ux))
best concise Eq: 
We are close to the answer, pay attention
5 generation repeat cross over 3 times and mutation 0 times
here
6 generation best_aic & best Eq: -10.164716806522645, (u d^2 x)+( ^2 (ux + (ux + x)))+((u + ux) d^2 x)+((( ^2 u) / (ux * 0)) * (x * ux))
best concise Eq: 
We are close to the answer, pay attention
6 generation repeat cross over 7 times and mutation 0 times
here
7 generation best_aic & best Eq: -10.164716806522645, (u d^2 x)+( ^2 (ux + (ux + x)))+((u + ux) d^2 x)+((( ^2 u) / (ux * 0)) * (x * ux))
best concise Eq: 
We are close to the answer, pay attention
7 generation repeat cross over 6 times and mutation 0 times
here
8 generation best_aic & best Eq: -10.164716806522645, (u d^2 x)+( ^2 (ux + (ux + x)))+((u + ux) d^2 x)+((( ^2 u) / (ux * 0)) * (x * ux))
best concise Eq: 
We are close to the answer, pay attention
8 generation repeat cross over 11 times and mutation 0 times
here
9 generation best_aic & best Eq: -10.164716806522645, (u d^2 x)+( ^2 (ux + (ux + x)))+((u + ux) d^2 x)+((( ^2 u) / (ux * 0)) * (x * ux))
best concise Eq: 
We are close to the answer, pay attention
9 generation repeat cross over 8 times and mutation 0 times
here
10 generation best_aic & best Eq: -10.164716806522645, (u d^2 x)+( ^2 (ux + (ux + x)))+((u + ux) d^2 x)+((( ^2 u) / (ux * 0)) * (x * ux))
best concise Eq: 
We are close to the answer, pay attention
10 generation repeat cross over 9 times and mutation 0 times
here
11 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
11 generation repeat cross over 10 times and mutation 1 times
here
12 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
12 generation repeat cross over 8 times and mutation 0 times
here
13 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
13 generation repeat cross over 6 times and mutation 0 times
here
14 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
14 generation repeat cross over 5 times and mutation 0 times
here
15 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
15 generation repeat cross over 10 times and mutation 0 times
here
16 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
16 generation repeat cross over 10 times and mutation 0 times
here
17 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
17 generation repeat cross over 9 times and mutation 0 times
here
18 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
18 generation repeat cross over 8 times and mutation 0 times
here
19 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
19 generation repeat cross over 11 times and mutation 0 times
here
20 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
20 generation repeat cross over 15 times and mutation 0 times
here
21 generation best_aic & best Eq: -25.0605959799408, (u d^2 x)+( ^2 (x * (ux + u)))+(ux * u)
best concise Eq: 0.1024(u d^2 x) + -1.0011(ux * u)
We are close to the answer, pay attention
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 89, in __init__
    self.inorder = tree2str_merge(model_tree)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 170, in tree2str_merge
    if a_tree[node.depth-1][node.parent_idx].status == 1:
       ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
TypeError: list indices must be integers or slices, not NoneType
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
u
u
x
u
u
x
u
u
0
u
u
^2
u
u
+
x
x
0
0
0
u
x
x
u
y
y
0
0
0
d
(u / u)
(u - u)
(u - u)
(0 * 0)
(0 * 0)
u
^3
(u / u)
u
u
^3
x
x
^2
0
0
0
u
( ^3 u)
x
x
(x * x)
(u d^2 x)
ux
y
y
u
0
0
^3
y
y
+
x
x
/
u
u
^2
(0 d 0)
( ^2 x)
( ^2 x)
ux
ux
ux
x
x
ux
(ux * ux)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 89, in __init__
    self.inorder = tree2str_merge(model_tree)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 171, in tree2str_merge
    if a_tree[node.depth-1][node.parent_idx].status == 1:
       ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
TypeError: list indices must be integers or slices, not NoneType
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
u
u
x
u
u
x
u
u
0
u
u
^2
u
u
+
x
x
0
0
0
u
x
x
u
y
y
0
0
0
d
(u / u)
(u - u)
(u - u)
(0 * 0)
(0 * 0)
u
^3
(u / u)
[[<tree.Node object at 0x00000228D46169C0>], [<tree.Node object at 0x00000228D46169C0>, <tree.Node object at 0x00000228D46169F0>], [<tree.Node object at 0x00000228D46169F0>, <tree.Node object at 0x00000228D4616A50>, <tree.Node object at 0x00000228D4616A50>, <tree.Node object at 0x00000228D4616AB0>, <tree.Node object at 0x00000228D4616AB0>, <tree.Node object at 0x00000228D4616B10>], [<tree.Node object at 0x00000228D4616B70>, <tree.Node object at 0x00000228D4616B70>, <tree.Node object at 0x00000228D4616BD0>, <tree.Node object at 0x00000228D4616C30>, <tree.Node object at 0x00000228D4616C30>, <tree.Node object at 0x00000228D4616C90>, <tree.Node object at 0x00000228D4616CF0>, <tree.Node object at 0x00000228D4616CF0>, <tree.Node object at 0x00000228D4616D50>, <tree.Node object at 0x00000228D4616DB0>, <tree.Node object at 0x00000228D4616DB0>, <tree.Node object at 0x00000228D4616E10>, <tree.Node object at 0x00000228D4616E70>, <tree.Node object at 0x00000228D4616E70>, <tree.Node object at 0x00000228D4616ED0>, <tree.Node object at 0x00000228D4616F30>, <tree.Node object at 0x00000228D4616F30>, <tree.Node object at 0x00000228D4616F90>, <tree.Node object at 0x00000228D4616FF0>, <tree.Node object at 0x00000228D4616FF0>, <tree.Node object at 0x00000228D4617050>, <tree.Node object at 0x00000228D46170B0>, <tree.Node object at 0x00000228D46170B0>, <tree.Node object at 0x00000228D4617110>, <tree.Node object at 0x00000228D4617170>, <tree.Node object at 0x00000228D4617170>, <tree.Node object at 0x00000228D46171D0>, <tree.Node object at 0x00000228D4617230>, <tree.Node object at 0x00000228D4617230>, <tree.Node object at 0x00000228D4617290>]]
u
u
^3
x
x
^2
0
0
0
u
( ^3 u)
x
x
(x * x)
(u d^2 x)
ux
y
y
u
[[<tree.Node object at 0x00000228D4616F90>], [<tree.Node object at 0x00000228D4616F90>, <tree.Node object at 0x00000228D4617050>, <tree.Node object at 0x00000228D4617110>, <tree.Node object at 0x00000228D4617110>, <tree.Node object at 0x00000228D46171D0>], [<tree.Node object at 0x00000228D46171D0>, <tree.Node object at 0x00000228D4617290>, <tree.Node object at 0x00000228D4638170>, <tree.Node object at 0x00000228D4638170>, <tree.Node object at 0x00000228D46381D0>], [<tree.Node object at 0x00000228D4638230>, <tree.Node object at 0x00000228D4638230>, <tree.Node object at 0x00000228D4638290>, <tree.Node object at 0x00000228D46382F0>, <tree.Node object at 0x00000228D46382F0>, <tree.Node object at 0x00000228D4638350>, <tree.Node object at 0x00000228D46383B0>, <tree.Node object at 0x00000228D46383B0>, <tree.Node object at 0x00000228D4638410>]]
0
0
^3
y
y
+
x
x
/
u
u
^2
(0 d 0)
( ^2 x)
( ^2 x)
ux
ux
ux
x
x
ux
(ux * ux)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 89, in __init__
    self.inorder = tree2str_merge(model_tree)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 172, in tree2str_merge
    if a_tree[node.depth-1][node.parent_idx].status == 1:
       ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
TypeError: list indices must be integers or slices, not NoneType
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...

Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 89, in __init__
    self.inorder = tree2str_merge(model_tree)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 171, in tree2str_merge
    print(node)
TypeError: __str__ returned non-string (type tuple)
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...

u 3 0 0
u 3 0 0
x 3 0 2
u 3 0 3
u 3 0 3
x 3 0 5
u 3 1 6
u 3 1 6
0 3 1 8
u 3 1 9
u 3 1 9
^2 3 1 11
u 3 2 12
u 3 2 12
+ 3 2 14
x 3 2 15
x 3 2 15
0 3 2 17
0 3 3 18
0 3 3 18
u 3 3 20
x 3 3 21
x 3 3 21
u 3 3 23
y 3 4 24
y 3 4 24
0 3 4 26
0 3 4 27
0 3 4 27
d 3 4 29

(u / u) 1 0 1
(u - u) 2 0 1
(u - u) 2 0 1
(0 * 0) 2 1 3
(0 * 0) 2 1 3
u 2 1 5

^3 0 None 0
(u / u) 1 0 1

u 3 1 0
u 3 1 0
^3 3 1 2
x 3 4 3
x 3 4 3
^2 3 4 5
0 3 4 6
0 3 4 6
0 3 4 8

u 1 0 4
( ^3 u) 2 0 1
x 2 0 2
x 2 0 2
(x * x) 2 0 4

(u d^2 x) 0 None 0
ux 1 0 1
y 1 0 2
y 1 0 2
u 1 0 4

0 3 0 0
0 3 0 0
^3 3 0 2
y 3 0 3
y 3 0 3
+ 3 0 5
x 3 1 6
x 3 1 6
/ 3 1 8
u 3 2 9
u 3 2 9
^2 3 2 11

(0 d 0) 1 0 3
( ^2 x) 2 0 1
( ^2 x) 2 0 1
ux 2 0 3
ux 2 0 3
ux 2 3 5
x 2 3 6
x 2 3 6
ux 2 3 8

(ux * ux) 0 None 0
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 89, in __init__
    self.inorder = tree2str_merge(model_tree)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 173, in tree2str_merge
    if a_tree[node.depth-1][node.parent_idx].status == 1:
       ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
TypeError: list indices must be integers or slices, not NoneType
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...

u 3 0 0
u 3 0 0
* 3 0 2
x 3 0 3
x 3 0 3
^3 3 0 5
y 3 1 6
y 3 1 6
d^2 3 1 8
x 3 1 9
x 3 1 9
x 3 1 11
u 3 2 12
u 3 2 12
0 3 2 14
x 3 2 15
x 3 2 15
^3 3 2 17
u 3 3 18
u 3 3 18
+ 3 3 20
x 3 3 21
x 3 3 21
0 3 3 23
0 3 4 24
0 3 4 24
u 3 4 26
x 3 4 27
x 3 4 27
0 3 4 29

(u / u) 1 0 1
(y - y) 2 0 1
(y - y) 2 0 1
(u * u) 2 1 3
(u * u) 2 1 3
y 2 1 5

^3 0 None 0
(u / u) 1 0 1

u 3 1 0
u 3 1 0
^3 3 1 2
x 3 2 3
x 3 2 3
^2 3 2 5
0 3 8 6
0 3 8 6
y 3 8 8
y 3 8 9
y 3 8 9
/ 3 8 11
x 3 9 12
x 3 9 12
y 3 9 14
x 3 9 15
x 3 9 15
^2 3 9 17

y 1 0 3
( ^3 u) 2 0 1
( ^3 u) 2 0 1
u 2 0 3
u 2 0 3
x 2 1 5
y 2 1 6
y 2 1 6
(0 d 0) 2 1 8
(0 d 0) 2 1 8
u 2 2 10
y 2 2 11
y 2 2 11
0 2 2 13

(y * u) 0 None 0
(x d y) 1 0 1
(x d y) 1 0 1
y 1 0 3

0 3 0 0
0 3 0 0
x 3 0 2
y 3 0 3
y 3 0 3
x 3 0 5
x 3 3 6
x 3 3 6
^3 3 3 8

(0 d 0) 1 0 1
u 2 0 1
u 2 0 1
( ^2 x) 2 1 3
y 2 1 4
y 2 1 4
y 2 1 6

( ^2 u) 0 None 0
(0 d 0) 1 0 1

u 3 1 0
u 3 1 0
* 3 1 2
y 3 1 3
y 3 1 3
^3 3 1 5

x 1 0 1
(u * u) 2 0 1

( ^3 x) 0 None 0
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 89, in __init__
    self.inorder = tree2str_merge(model_tree)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 173, in tree2str_merge
    if a_tree[node.depth-1][node.parent_idx].status == 1:
       ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
TypeError: list indices must be integers or slices, not NoneType
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0
u 3 0 0
* 3 0 2
x 3 0 3
x 3 0 3
^3 3 0 5
y 3 1 6
y 3 1 6
d^2 3 1 8
x 3 1 9
x 3 1 9
x 3 1 11
u 3 2 12
u 3 2 12
0 3 2 14
x 3 2 15
x 3 2 15
^3 3 2 17
u 3 3 18
u 3 3 18
+ 3 3 20
x 3 3 21
x 3 3 21
0 3 3 23
0 3 4 24
0 3 4 24
u 3 4 26
x 3 4 27
x 3 4 27
0 3 4 29

(u / u) 1 0 1
(y - y) 2 0 1
(y - y) 2 0 1
(u * u) 2 1 3
(u * u) 2 1 3
y 2 1 5

^3 0 None 0
(u / u) 1 0 1
new call to func

u 3 1 0
u 3 1 0
^3 3 1 2
x 3 2 3
x 3 2 3
^2 3 2 5
0 3 8 6
0 3 8 6
y 3 8 8
y 3 8 9
y 3 8 9
/ 3 8 11
x 3 9 12
x 3 9 12
y 3 9 14
x 3 9 15
x 3 9 15
^2 3 9 17

y 1 0 3
( ^3 u) 2 0 1
( ^3 u) 2 0 1
u 2 0 3
u 2 0 3
x 2 1 5
y 2 1 6
y 2 1 6
(0 d 0) 2 1 8
(0 d 0) 2 1 8
u 2 2 10
y 2 2 11
y 2 2 11
0 2 2 13

(y * u) 0 None 0
(x d y) 1 0 1
(x d y) 1 0 1
y 1 0 3
new call to func

0 3 0 0
0 3 0 0
x 3 0 2
y 3 0 3
y 3 0 3
x 3 0 5
x 3 3 6
x 3 3 6
^3 3 3 8

(0 d 0) 1 0 1
u 2 0 1
u 2 0 1
( ^2 x) 2 1 3
y 2 1 4
y 2 1 4
y 2 1 6

( ^2 u) 0 None 0
(0 d 0) 1 0 1
new call to func

u 3 1 0
u 3 1 0
* 3 1 2
y 3 1 3
y 3 1 3
^3 3 1 5

x 1 0 1
(u * u) 2 0 1

( ^3 x) 0 None 0
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 89, in __init__
    self.inorder = tree2str_merge(model_tree)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 174, in tree2str_merge
    if a_tree[node.depth-1][node.parent_idx].status == 1:
       ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
TypeError: list indices must be integers or slices, not NoneType
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0
u 3 0 0
* 3 0 2
x 3 0 3
x 3 0 3
^3 3 0 5
y 3 1 6
y 3 1 6
d^2 3 1 8
x 3 1 9
x 3 1 9
x 3 1 11
u 3 2 12
u 3 2 12
0 3 2 14
x 3 2 15
x 3 2 15
^3 3 2 17
u 3 3 18
u 3 3 18
+ 3 3 20
x 3 3 21
x 3 3 21
0 3 3 23
0 3 4 24
0 3 4 24
u 3 4 26
x 3 4 27
x 3 4 27
0 3 4 29

/ 1 0 1
(y - y) 2 0 1
(y - y) 2 0 1
(u * u) 2 1 3
(u * u) 2 1 3
y 2 1 5

^3 0 None 0
(y / 1 0 1
new call to func

u 3 1 0
u 3 1 0
^3 3 1 2
x 3 2 3
x 3 2 3
^2 3 2 5
0 3 8 6
0 3 8 6
y 3 8 8
y 3 8 9
y 3 8 9
/ 3 8 11
x 3 9 12
x 3 9 12
y 3 9 14
x 3 9 15
x 3 9 15
^2 3 9 17

y 1 0 3
( ^3 u) 2 0 1
( ^3 u) 2 0 1
u 2 0 3
u 2 0 3
x 2 1 5
y 2 1 6
y 2 1 6
(0 d 0) 2 1 8
(0 d 0) 2 1 8
u 2 2 10
y 2 2 11
y 2 2 11
0 2 2 13

* 0 None 0
(x d y) 1 0 1
(x d y) 1 0 1
y 1 0 3
new call to func

0 3 0 0
0 3 0 0
x 3 0 2
y 3 0 3
y 3 0 3
x 3 0 5
x 3 3 6
x 3 3 6
^3 3 3 8

d 1 0 1
u 2 0 1
u 2 0 1
( ^2 x) 2 1 3
y 2 1 4
y 2 1 4
y 2 1 6

^2 0 None 0
(y d y) 1 0 1
new call to func

u 3 1 0
u 3 1 0
* 3 1 2
y 3 1 3
y 3 1 3
^3 3 1 5

x 1 0 1
(u * u) 2 0 1

^3 0 None 0
x 1 0 1
new call to func

y 3 0 0
y 3 0 0
^2 3 0 2
0 3 0 3
0 3 0 3
y 3 0 5

+ 1 0 1
0 2 0 1
0 2 0 1
0 2 1 3
0 2 1 3
x 2 1 5

^3 0 None 0
(0 + 0) 1 0 1
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 115, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'numpy.ndarray' object is not callable
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0
u 3 0 0
* 3 0 2
x 3 0 3
x 3 0 3
^3 3 0 5
y 3 1 6
y 3 1 6
d^2 3 1 8
x 3 1 9
x 3 1 9
x 3 1 11
u 3 2 12
u 3 2 12
0 3 2 14
x 3 2 15
x 3 2 15
^3 3 2 17
u 3 3 18
u 3 3 18
+ 3 3 20
x 3 3 21
x 3 3 21
0 3 3 23
0 3 4 24
0 3 4 24
u 3 4 26
x 3 4 27
x 3 4 27
0 3 4 29

/ 1 0 1
(y - y) 2 0 1
(y - y) 2 0 1
(u * u) 2 1 3
(u * u) 2 1 3
y 2 1 5

^3 0 None 0
(y / 1 0 1
new call to func

u 3 1 0
u 3 1 0
^3 3 1 2
x 3 2 3
x 3 2 3
^2 3 2 5
0 3 8 6
0 3 8 6
y 3 8 8
y 3 8 9
y 3 8 9
/ 3 8 11
x 3 9 12
x 3 9 12
y 3 9 14
x 3 9 15
x 3 9 15
^2 3 9 17

y 1 0 3
( ^3 u) 2 0 1
( ^3 u) 2 0 1
u 2 0 3
u 2 0 3
x 2 1 5
y 2 1 6
y 2 1 6
(0 d 0) 2 1 8
(0 d 0) 2 1 8
u 2 2 10
y 2 2 11
y 2 2 11
0 2 2 13

* 0 None 0
(x d y) 1 0 1
(x d y) 1 0 1
y 1 0 3
new call to func

0 3 0 0
0 3 0 0
x 3 0 2
y 3 0 3
y 3 0 3
x 3 0 5
x 3 3 6
x 3 3 6
^3 3 3 8

d 1 0 1
u 2 0 1
u 2 0 1
( ^2 x) 2 1 3
y 2 1 4
y 2 1 4
y 2 1 6

^2 0 None 0
(y d y) 1 0 1
new call to func

u 3 1 0
u 3 1 0
* 3 1 2
y 3 1 3
y 3 1 3
^3 3 1 5

x 1 0 1
(u * u) 2 0 1

^3 0 None 0
x 1 0 1
new call to func

y 3 0 0
y 3 0 0
^2 3 0 2
0 3 0 3
0 3 0 3
y 3 0 5

+ 1 0 1
0 2 0 1
0 2 0 1
0 2 1 3
0 2 1 3
x 2 1 5

^3 0 None 0
(0 + 0) 1 0 1
Before error - 
/ 1 0 1
Before error - 
- 2 0 1
Before error - 
- 2 0 1
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 117, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'numpy.ndarray' object is not callable
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0
u 3 0 0
* 3 0 2
x 3 0 3
x 3 0 3
^3 3 0 5
y 3 1 6
y 3 1 6
d^2 3 1 8
x 3 1 9
x 3 1 9
x 3 1 11
u 3 2 12
u 3 2 12
0 3 2 14
x 3 2 15
x 3 2 15
^3 3 2 17
u 3 3 18
u 3 3 18
+ 3 3 20
x 3 3 21
x 3 3 21
0 3 3 23
0 3 4 24
0 3 4 24
u 3 4 26
x 3 4 27
x 3 4 27
0 3 4 29

/ 1 0 1
(y - y) 2 0 1
(y - y) 2 0 1
(u * u) 2 1 3
(u * u) 2 1 3
y 2 1 5

^3 0 None 0
(y / 1 0 1
new call to func

u 3 1 0
u 3 1 0
^3 3 1 2
x 3 2 3
x 3 2 3
^2 3 2 5
0 3 8 6
0 3 8 6
y 3 8 8
y 3 8 9
y 3 8 9
/ 3 8 11
x 3 9 12
x 3 9 12
y 3 9 14
x 3 9 15
x 3 9 15
^2 3 9 17

y 1 0 3
( ^3 u) 2 0 1
( ^3 u) 2 0 1
u 2 0 3
u 2 0 3
x 2 1 5
y 2 1 6
y 2 1 6
(0 d 0) 2 1 8
(0 d 0) 2 1 8
u 2 2 10
y 2 2 11
y 2 2 11
0 2 2 13

* 0 None 0
(x d y) 1 0 1
(x d y) 1 0 1
y 1 0 3
new call to func

0 3 0 0
0 3 0 0
x 3 0 2
y 3 0 3
y 3 0 3
x 3 0 5
x 3 3 6
x 3 3 6
^3 3 3 8

d 1 0 1
u 2 0 1
u 2 0 1
( ^2 x) 2 1 3
y 2 1 4
y 2 1 4
y 2 1 6

^2 0 None 0
(y d y) 1 0 1
new call to func

u 3 1 0
u 3 1 0
* 3 1 2
y 3 1 3
y 3 1 3
^3 3 1 5

x 1 0 1
(u * u) 2 0 1

^3 0 None 0
x 1 0 1
new call to func

y 3 0 0
y 3 0 0
^2 3 0 2
0 3 0 3
0 3 0 3
y 3 0 5

+ 1 0 1
0 2 0 1
0 2 0 1
0 2 1 3
0 2 1 3
x 2 1 5

^3 0 None 0
(0 + 0) 1 0 1
Before error - 
/ 1 0 1 <function divide at 0x0000029EA4748400>
Before error - 
- 2 0 1 <ufunc 'subtract'>
Before error - 
- 2 0 1 [[[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 ...

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]]
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 117, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'numpy.ndarray' object is not callable
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0
u 3 0 0
* 3 0 2
x 3 0 3
x 3 0 3
^3 3 0 5
y 3 1 6
y 3 1 6
d^2 3 1 8
x 3 1 9
x 3 1 9
x 3 1 11
u 3 2 12
u 3 2 12
0 3 2 14
x 3 2 15
x 3 2 15
^3 3 2 17
u 3 3 18
u 3 3 18
+ 3 3 20
x 3 3 21
x 3 3 21
0 3 3 23
0 3 4 24
0 3 4 24
u 3 4 26
x 3 4 27
x 3 4 27
0 3 4 29

/ 1 0 1
(y - y) 2 0 1
(y - y) 2 0 1
(u * u) 2 1 3
(u * u) 2 1 3
y 2 1 5

^3 0 None 0
(y / 1 0 1
new call to func

u 3 1 0
u 3 1 0
^3 3 1 2
x 3 2 3
x 3 2 3
^2 3 2 5
0 3 8 6
0 3 8 6
y 3 8 8
y 3 8 9
y 3 8 9
/ 3 8 11
x 3 9 12
x 3 9 12
y 3 9 14
x 3 9 15
x 3 9 15
^2 3 9 17

y 1 0 3
( ^3 u) 2 0 1
( ^3 u) 2 0 1
u 2 0 3
u 2 0 3
x 2 1 5
y 2 1 6
y 2 1 6
(0 d 0) 2 1 8
(0 d 0) 2 1 8
u 2 2 10
y 2 2 11
y 2 2 11
0 2 2 13

* 0 None 0
(x d y) 1 0 1
(x d y) 1 0 1
y 1 0 3
new call to func

0 3 0 0
0 3 0 0
x 3 0 2
y 3 0 3
y 3 0 3
x 3 0 5
x 3 3 6
x 3 3 6
^3 3 3 8

d 1 0 1
u 2 0 1
u 2 0 1
( ^2 x) 2 1 3
y 2 1 4
y 2 1 4
y 2 1 6

^2 0 None 0
(y d y) 1 0 1
new call to func

u 3 1 0
u 3 1 0
* 3 1 2
y 3 1 3
y 3 1 3
^3 3 1 5

x 1 0 1
(u * u) 2 0 1

^3 0 None 0
x 1 0 1
new call to func

y 3 0 0
y 3 0 0
^2 3 0 2
0 3 0 3
0 3 0 3
y 3 0 5

+ 1 0 1
0 2 0 1
0 2 0 1
0 2 1 3
0 2 1 3
x 2 1 5

^3 0 None 0
(0 + 0) 1 0 1
new tree
Before error - 
/ 1 0 1 <function divide at 0x0000021D8DD98400>
Before error - 
- 2 0 1 <ufunc 'subtract'>
Before error - 
- 2 0 1 [[[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 ...

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]]
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 118, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'numpy.ndarray' object is not callable
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 0 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
* 3 0 2 ['*' 2 <ufunc 'multiply'>]
x 3 0 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 0 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 0 5 ['^3' 1 <function cubic at 0x00000275D81EEF20>]
y 3 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
d^2 3 1 8 ['d^2' 2 <function Diff2 at 0x000002758DDAD260>]
x 3 1 9 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 1 9 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 1 11 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
u 3 2 12 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 2 12 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
0 3 2 14 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 3 2 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 2 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 2 17 ['^3' 1 <function cubic at 0x00000275D81EEF20>]
u 3 3 18 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 3 18 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
+ 3 3 20 ['+' 2 <ufunc 'add'>]
x 3 3 21 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 21 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 3 3 23 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 4 24 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 4 24 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
u 3 4 26 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
x 3 4 27 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 4 27 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 3 4 29 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]

/ 1 0 1 ['/' 2 <function divide at 0x000002758DDAC360>]
(y - y) 2 0 1 ['-' 2 <ufunc 'subtract'>]
(y - y) 2 0 1 ['-' 2 <ufunc 'subtract'>]
(u * u) 2 1 3 ['*' 2 <ufunc 'multiply'>]
(u * u) 2 1 3 ['*' 2 <ufunc 'multiply'>]
y 2 1 5 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^3 0 None 0 ['^3' 1 <function cubic at 0x00000275D81EEF20>]
(y / 1 0 1 ['/' 2 <function divide at 0x000002758DDAC360>]
new call to func

u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
^3 3 1 2 ['^3' 1 <function cubic at 0x00000275D81EEF20>]
x 3 2 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 2 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 2 5 ['^2' 1 <ufunc 'square'>]
0 3 8 6 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 8 6 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
y 3 8 8 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 8 9 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 8 9 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
/ 3 8 11 ['/' 2 <function divide at 0x000002758DDAC360>]
x 3 9 12 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 12 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 9 14 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 9 17 ['^2' 1 <ufunc 'square'>]

y 1 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
( ^3 u) 2 0 1 ['^3' 1 <function cubic at 0x00000275D81EEF20>]
( ^3 u) 2 0 1 ['^3' 1 <function cubic at 0x00000275D81EEF20>]
u 2 0 3 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 2 0 3 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
x 2 1 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
(0 d 0) 2 1 8 ['d' 2 <function Diff at 0x000002758DDAD080>]
(0 d 0) 2 1 8 ['d' 2 <function Diff at 0x000002758DDAD080>]
u 2 2 10 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
y 2 2 11 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 2 11 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 2 2 13 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]

* 0 None 0 ['*' 2 <ufunc 'multiply'>]
(x d y) 1 0 1 ['d' 2 <function Diff at 0x000002758DDAD080>]
(x d y) 1 0 1 ['d' 2 <function Diff at 0x000002758DDAD080>]
y 1 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
new call to func

0 3 0 0 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 0 0 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 3 0 2 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 0 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 6 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 6 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 3 8 ['^3' 1 <function cubic at 0x00000275D81EEF20>]

d 1 0 1 ['d' 2 <function Diff at 0x000002758DDAD080>]
u 2 0 1 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 2 0 1 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
( ^2 x) 2 1 3 ['^2' 1 <ufunc 'square'>]
y 2 1 4 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 4 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^2 0 None 0 ['^2' 1 <ufunc 'square'>]
(y d y) 1 0 1 ['d' 2 <function Diff at 0x000002758DDAD080>]
new call to func

u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
* 3 1 2 ['*' 2 <ufunc 'multiply'>]
y 3 1 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 1 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 1 5 ['^3' 1 <function cubic at 0x00000275D81EEF20>]

x 1 0 1 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
(u * u) 2 0 1 ['*' 2 <ufunc 'multiply'>]

^3 0 None 0 ['^3' 1 <function cubic at 0x00000275D81EEF20>]
x 1 0 1 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
new call to func

y 3 0 0 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 0 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 0 2 ['^2' 1 <ufunc 'square'>]
0 3 0 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 0 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
y 3 0 5 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

+ 1 0 1 ['+' 2 <ufunc 'add'>]
0 2 0 1 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 0 1 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 1 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 1 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 2 1 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^3 0 None 0 ['^3' 1 <function cubic at 0x00000275D81EEF20>]
(0 + 0) 1 0 1 ['+' 2 <ufunc 'add'>]
new tree
Before error - 
/ 1 0 1 ['/' 2 <function divide at 0x000002758DDAC360>] <function divide at 0x000002758DDAC360>
Before error - 
- 2 0 1 ['-' 2 <ufunc 'subtract'>] <ufunc 'subtract'>
Before error - 
- 2 0 1 ['-' 2 <ufunc 'subtract'>] [[[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 ...

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]]
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 118, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'numpy.ndarray' object is not callable
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 0 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
* 3 0 2 ['*' 2 <ufunc 'multiply'>]
x 3 0 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 0 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 0 5 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]
y 3 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
d^2 3 1 8 ['d^2' 2 <function Diff2 at 0x0000021A8DF19440>]
x 3 1 9 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 1 9 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 1 11 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
u 3 2 12 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 2 12 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
0 3 2 14 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 3 2 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 2 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 2 17 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]
u 3 3 18 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 3 18 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
+ 3 3 20 ['+' 2 <ufunc 'add'>]
x 3 3 21 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 21 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 3 3 23 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 4 24 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 4 24 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
u 3 4 26 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
x 3 4 27 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 4 27 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 3 4 29 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]

/ 1 0 1 ['/' 2 <function divide at 0x0000021A8DF18540>]
(y - y) 2 0 1 ['-' 2 <ufunc 'subtract'>]
(y - y) 2 0 1 ['-' 2 <ufunc 'subtract'>]
(u * u) 2 1 3 ['*' 2 <ufunc 'multiply'>]
(u * u) 2 1 3 ['*' 2 <ufunc 'multiply'>]
y 2 1 5 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^3 0 None 0 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]
(y / 1 0 1 ['/' 2 <function divide at 0x0000021A8DF18540>]
new call to func

u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
^3 3 1 2 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]
x 3 2 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 2 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 2 5 ['^2' 1 <ufunc 'square'>]
0 3 8 6 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 8 6 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
y 3 8 8 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 8 9 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 8 9 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
/ 3 8 11 ['/' 2 <function divide at 0x0000021A8DF18540>]
x 3 9 12 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 12 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 9 14 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 9 17 ['^2' 1 <ufunc 'square'>]

y 1 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
( ^3 u) 2 0 1 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]
( ^3 u) 2 0 1 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]
u 2 0 3 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 2 0 3 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
x 2 1 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
(0 d 0) 2 1 8 ['d' 2 <function Diff at 0x0000021A8DF19260>]
(0 d 0) 2 1 8 ['d' 2 <function Diff at 0x0000021A8DF19260>]
u 2 2 10 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
y 2 2 11 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 2 11 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 2 2 13 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]

* 0 None 0 ['*' 2 <ufunc 'multiply'>]
(x d y) 1 0 1 ['d' 2 <function Diff at 0x0000021A8DF19260>]
(x d y) 1 0 1 ['d' 2 <function Diff at 0x0000021A8DF19260>]
y 1 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
new call to func

0 3 0 0 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 0 0 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 3 0 2 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 0 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 6 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 6 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 3 8 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]

d 1 0 1 ['d' 2 <function Diff at 0x0000021A8DF19260>]
u 2 0 1 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 2 0 1 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
( ^2 x) 2 1 3 ['^2' 1 <ufunc 'square'>]
y 2 1 4 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 4 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^2 0 None 0 ['^2' 1 <ufunc 'square'>]
(y d y) 1 0 1 ['d' 2 <function Diff at 0x0000021A8DF19260>]
new call to func

u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
* 3 1 2 ['*' 2 <ufunc 'multiply'>]
y 3 1 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 1 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 1 5 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]

x 1 0 1 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
(u * u) 2 0 1 ['*' 2 <ufunc 'multiply'>]

^3 0 None 0 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]
x 1 0 1 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
new call to func

y 3 0 0 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 0 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 0 2 ['^2' 1 <ufunc 'square'>]
0 3 0 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 0 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
y 3 0 5 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

+ 1 0 1 ['+' 2 <ufunc 'add'>]
0 2 0 1 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 0 1 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 1 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 1 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 2 1 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^3 0 None 0 ['^3' 1 <function cubic at 0x0000021AFBDFF1A0>]
(0 + 0) 1 0 1 ['+' 2 <ufunc 'add'>]
new tree
OUTPUT OF ONE TREE
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 75, in evaluate_mse
    for j in range(tree_list[i]):
             ^^^^^^^^^^^^^^^^^^^
TypeError: 'list' object cannot be interpreted as an integer
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 0 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
* 3 0 2 ['*' 2 <ufunc 'multiply'>]
x 3 0 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 0 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 0 5 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
y 3 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
d^2 3 1 8 ['d^2' 2 <function Diff2 at 0x0000020A1CEF9440>]
x 3 1 9 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 1 9 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 1 11 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
u 3 2 12 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 2 12 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
0 3 2 14 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 3 2 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 2 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 2 17 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
u 3 3 18 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 3 18 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
+ 3 3 20 ['+' 2 <ufunc 'add'>]
x 3 3 21 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 21 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 3 3 23 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 4 24 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 4 24 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
u 3 4 26 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
x 3 4 27 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 4 27 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 3 4 29 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]

/ 1 0 1 ['/' 2 <function divide at 0x0000020A1CEF8540>]
(y - y) 2 0 1 ['-' 2 <ufunc 'subtract'>]
(y - y) 2 0 1 ['-' 2 <ufunc 'subtract'>]
(u * u) 2 1 3 ['*' 2 <ufunc 'multiply'>]
(u * u) 2 1 3 ['*' 2 <ufunc 'multiply'>]
y 2 1 5 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^3 0 None 0 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
(y / 1 0 1 ['/' 2 <function divide at 0x0000020A1CEF8540>]
new call to func

u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
^3 3 1 2 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
x 3 2 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 2 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 2 5 ['^2' 1 <ufunc 'square'>]
0 3 8 6 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 8 6 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
y 3 8 8 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 8 9 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 8 9 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
/ 3 8 11 ['/' 2 <function divide at 0x0000020A1CEF8540>]
x 3 9 12 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 12 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 9 14 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 9 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 9 17 ['^2' 1 <ufunc 'square'>]

y 1 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
( ^3 u) 2 0 1 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
( ^3 u) 2 0 1 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
u 2 0 3 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 2 0 3 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
x 2 1 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
(0 d 0) 2 1 8 ['d' 2 <function Diff at 0x0000020A1CEF9260>]
(0 d 0) 2 1 8 ['d' 2 <function Diff at 0x0000020A1CEF9260>]
u 2 2 10 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
y 2 2 11 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 2 11 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 2 2 13 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]

* 0 None 0 ['*' 2 <ufunc 'multiply'>]
(x d y) 1 0 1 ['d' 2 <function Diff at 0x0000020A1CEF9260>]
(x d y) 1 0 1 ['d' 2 <function Diff at 0x0000020A1CEF9260>]
y 1 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
new call to func

0 3 0 0 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 0 0 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 3 0 2 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 0 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 6 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 6 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 3 8 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]

d 1 0 1 ['d' 2 <function Diff at 0x0000020A1CEF9260>]
u 2 0 1 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 2 0 1 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
( ^2 x) 2 1 3 ['^2' 1 <ufunc 'square'>]
y 2 1 4 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 4 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 2 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^2 0 None 0 ['^2' 1 <ufunc 'square'>]
(y d y) 1 0 1 ['d' 2 <function Diff at 0x0000020A1CEF9260>]
new call to func

u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 1 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
* 3 1 2 ['*' 2 <ufunc 'multiply'>]
y 3 1 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 1 3 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 1 5 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]

x 1 0 1 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
(u * u) 2 0 1 ['*' 2 <ufunc 'multiply'>]

^3 0 None 0 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
x 1 0 1 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
new call to func

y 3 0 0 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 0 0 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^2 3 0 2 ['^2' 1 <ufunc 'square'>]
0 3 0 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 0 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
y 3 0 5 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

+ 1 0 1 ['+' 2 <ufunc 'add'>]
0 2 0 1 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 0 1 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 1 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 2 1 3 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 2 1 5 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]

^3 0 None 0 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
(0 + 0) 1 0 1 ['+' 2 <ufunc 'add'>]
new tree
OUTPUT OF ONE TREE
^3 0 None 0 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
^3 0 None 0 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
/ 1 0 1 ['/' 2 <function divide at 0x0000020A1CEF8540>]
/ 1 0 1 ['/' 2 <function divide at 0x0000020A1CEF8540>]
- 2 0 1 ['-' 2 <ufunc 'subtract'>]
- 2 0 1 ['-' 2 <ufunc 'subtract'>]
* 2 1 3 ['*' 2 <ufunc 'multiply'>]
* 2 1 3 ['*' 2 <ufunc 'multiply'>]
y 2 1 5 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
u 3 0 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 0 0 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
* 3 0 2 ['*' 2 <ufunc 'multiply'>]
x 3 0 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 0 3 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 0 5 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
y 3 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
y 3 1 6 ['y' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
d^2 3 1 8 ['d^2' 2 <function Diff2 at 0x0000020A1CEF9440>]
x 3 1 9 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 1 9 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 1 11 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
u 3 2 12 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 2 12 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
0 3 2 14 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
x 3 2 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 2 15 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
^3 3 2 17 ['^3' 1 <function cubic at 0x0000020A0B83EFC0>]
u 3 3 18 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
u 3 3 18 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
+ 3 3 20 ['+' 2 <ufunc 'add'>]
x 3 3 21 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 3 21 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 3 3 23 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 4 24 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
0 3 4 24 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
u 3 4 26 ['u' 0 array([[[-0.01032698, -0.01097064, -0.01137737, ..., -0.25047842,
                -0.25015855, -0.24983911],
               [ 0.11613935,  0.11445817,  0.11274402, ...,  0.41261812,
                 0.41293441,  0.41325048],
               [ 0.12344658,  0.12311704,  0.12275119, ...,  0.75894437,
                 0.75906746,  0.75919049],
               ...,
               [-0.03875211, -0.0407506 , -0.04206926, ..., -0.52976736,
                -0.53019686, -0.53062571],
               [-0.02050152, -0.01898621, -0.01784144, ..., -0.75522768,
                -0.75537309, -0.75551838],
               [ 0.06450918,  0.06093197,  0.05744396, ..., -0.67389851,
                -0.67387454, -0.67385098]],

              [[-0.057973  , -0.05270258, -0.04795942, ..., -0.71077793,
                -0.71064902, -0.71051999],
               [-0.0379301 , -0.03573177, -0.03359592, ..., -0.23649056,
                -0.23620834, -0.23592572],
               [-0.03179544, -0.02971396, -0.02766309, ...,  0.50425453,
                 0.50440084,  0.50454733],
               ...,
               [-0.07718833, -0.06699606, -0.05799776, ...,  0.01350854,
                 0.01305577,  0.01260368],
               [ 0.07198514,  0.0673524 ,  0.06335881, ..., -0.61938097,
                -0.61953792, -0.61969452],
               [ 0.06170015,  0.05736677,  0.05333998, ..., -0.81047719,
                -0.81047721, -0.81047717]],

              [[ 0.10063334,  0.09482821,  0.08927491, ..., -0.83039793,
                -0.83039178, -0.8303855 ],
               [ 0.0627804 ,  0.05742626,  0.05247596, ..., -0.64682602,
                -0.64676362, -0.64670096],
               [-0.07663379, -0.07231912, -0.06819944, ...,  0.02706681,
                 0.02714072,  0.02721494],
               ...,
               [ 0.14269313,  0.13737131,  0.13285287, ...,  0.48636286,
                 0.48633504,  0.48630739],
               [ 0.07123888,  0.07383797,  0.07583374, ..., -0.23949763,
                -0.23955886, -0.23961977],
               [-0.08430974, -0.07707262, -0.07003554, ..., -0.72221821,
                -0.72225024, -0.72228217]],

              ...,

              [[-0.01182695, -0.01026285, -0.00872809, ...,  0.82550394,
                 0.82537033,  0.82523608],
               [ 0.05128065,  0.05145917,  0.05176763, ...,  0.90358799,
                 0.90364388,  0.90369948],
               [ 0.10894012,  0.10754699,  0.10623628, ...,  0.86378312,
                 0.86391725,  0.86405125],
               ...,
               [ 0.04688335,  0.04445158,  0.04256245, ..., -0.74667156,
                -0.74707485, -0.74747685],
               [ 0.02573636,  0.02661847,  0.0274601 , ..., -0.43998622,
                -0.44094539, -0.44190162],
               [ 0.11606325,  0.11664452,  0.11703828, ...,  0.42999697,
                 0.42913068,  0.42826309]],

              [[ 0.02316848,  0.02253164,  0.02203677, ...,  0.78618944,
                 0.78614195,  0.78609373],
               [ 0.08969441,  0.09066986,  0.09141577, ...,  0.89662365,
                 0.89668512,  0.89674633],
               [ 0.08101044,  0.0803053 ,  0.07961393, ...,  0.85721291,
                 0.85731829,  0.85742359],
               ...,
               [-0.03768324, -0.03420773, -0.0312246 , ..., -0.79387033,
                -0.79413122, -0.7943916 ],
               [ 0.04329765,  0.04118826,  0.03931449, ..., -0.52017602,
                -0.52076933, -0.52136162],
               [ 0.13685396,  0.13282249,  0.12894534, ...,  0.31391057,
                 0.31333079,  0.31274932]],

              [[-0.09314072, -0.08859837, -0.08438282, ...,  0.4590623 ,
                 0.45920545,  0.45934753],
               [ 0.12909746,  0.125803  ,  0.12282347, ...,  0.78191454,
                 0.78205044,  0.782186  ],
               [ 0.09891102,  0.09937947,  0.09983313, ...,  0.84154032,
                 0.84163504,  0.84172965],
               ...,
               [ 0.04319098,  0.03966752,  0.03623568, ..., -0.77127776,
                -0.77150705, -0.77173611],
               [-0.07494836, -0.07177177, -0.0687709 , ..., -0.69304291,
                -0.69327667, -0.69351049],
               [-0.0504716 , -0.04853055, -0.04663261, ..., -0.21808695,
                -0.21827218, -0.21845901]]])                            ]
x 3 4 27 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
x 3 4 27 ['x' 0 array([[ 0,  0,  0, ...,  0,  0,  0],
              [ 1,  1,  1, ...,  1,  1,  1],
              [ 2,  2,  2, ...,  2,  2,  2],
              ...,
              [97, 97, 97, ..., 97, 97, 97],
              [98, 98, 98, ..., 98, 98, 98],
              [99, 99, 99, ..., 99, 99, 99]])]
0 3 4 29 ['0' 0 array([[[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              ...,

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]],

              [[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]]])]
Before error - 
/ 1 0 1 ['/' 2 <function divide at 0x0000020A1CEF8540>] <function divide at 0x0000020A1CEF8540>
Before error - 
- 2 0 1 ['-' 2 <ufunc 'subtract'>] <ufunc 'subtract'>
Before error - 
- 2 0 1 ['-' 2 <ufunc 'subtract'>] [[[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 ...

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]]
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 122, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'numpy.ndarray' object is not callable
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0
u 3 0 0
* 3 0 2
x 3 0 3
x 3 0 3
^3 3 0 5
y 3 1 6
y 3 1 6
d^2 3 1 8
x 3 1 9
x 3 1 9
x 3 1 11
u 3 2 12
u 3 2 12
0 3 2 14
x 3 2 15
x 3 2 15
^3 3 2 17
u 3 3 18
u 3 3 18
+ 3 3 20
x 3 3 21
x 3 3 21
0 3 3 23
0 3 4 24
0 3 4 24
u 3 4 26
x 3 4 27
x 3 4 27
0 3 4 29

/ 1 0 1
(y - y) 2 0 1
(y - y) 2 0 1
(u * u) 2 1 3
(u * u) 2 1 3
y 2 1 5

^3 0 None 0
(y / 1 0 1
new call to func

u 3 1 0
u 3 1 0
^3 3 1 2
x 3 2 3
x 3 2 3
^2 3 2 5
0 3 8 6
0 3 8 6
y 3 8 8
y 3 8 9
y 3 8 9
/ 3 8 11
x 3 9 12
x 3 9 12
y 3 9 14
x 3 9 15
x 3 9 15
^2 3 9 17

y 1 0 3
( ^3 u) 2 0 1
( ^3 u) 2 0 1
u 2 0 3
u 2 0 3
x 2 1 5
y 2 1 6
y 2 1 6
(0 d 0) 2 1 8
(0 d 0) 2 1 8
u 2 2 10
y 2 2 11
y 2 2 11
0 2 2 13

* 0 None 0
(x d y) 1 0 1
(x d y) 1 0 1
y 1 0 3
new call to func

0 3 0 0
0 3 0 0
x 3 0 2
y 3 0 3
y 3 0 3
x 3 0 5
x 3 3 6
x 3 3 6
^3 3 3 8

d 1 0 1
u 2 0 1
u 2 0 1
( ^2 x) 2 1 3
y 2 1 4
y 2 1 4
y 2 1 6

^2 0 None 0
(y d y) 1 0 1
new call to func

u 3 1 0
u 3 1 0
* 3 1 2
y 3 1 3
y 3 1 3
^3 3 1 5

x 1 0 1
(u * u) 2 0 1

^3 0 None 0
x 1 0 1
new call to func

y 3 0 0
y 3 0 0
^2 3 0 2
0 3 0 3
0 3 0 3
y 3 0 5

+ 1 0 1
0 2 0 1
0 2 0 1
0 2 1 3
0 2 1 3
x 2 1 5

^3 0 None 0
(0 + 0) 1 0 1
new tree
OUTPUT OF ONE TREE
^3 0 None 0
^3 0 None 0
/ 1 0 1
/ 1 0 1
- 2 0 1
- 2 0 1
* 2 1 3
* 2 1 3
y 2 1 5
u 3 0 0
u 3 0 0
* 3 0 2
x 3 0 3
x 3 0 3
^3 3 0 5
y 3 1 6
y 3 1 6
d^2 3 1 8
x 3 1 9
x 3 1 9
x 3 1 11
u 3 2 12
u 3 2 12
0 3 2 14
x 3 2 15
x 3 2 15
^3 3 2 17
u 3 3 18
u 3 3 18
+ 3 3 20
x 3 3 21
x 3 3 21
0 3 3 23
0 3 4 24
0 3 4 24
u 3 4 26
x 3 4 27
x 3 4 27
0 3 4 29
Before error - 
/ 1 0 1 <function divide at 0x000001E3C98D84A0>
Before error - 
- 2 0 1 <ufunc 'subtract'>
Before error - 
- 2 0 1 [[[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 ...

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]]
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 122, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'numpy.ndarray' object is not callable
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
* 3 0 2 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
x 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 3 0 5 <class 'function'> <class 'function'>
y 3 1 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 1 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
d^2 3 1 8 <class 'function'> <class 'function'>
x 3 1 9 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 1 9 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 1 11 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 2 12 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 2 12 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 2 14 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 2 15 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 2 15 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 3 2 17 <class 'function'> <class 'function'>
u 3 3 18 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 3 18 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
+ 3 3 20 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
x 3 3 21 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 3 21 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 3 23 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 4 24 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 4 24 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 4 26 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 4 27 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 4 27 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 4 29 <class 'numpy.ndarray'> <class 'numpy.ndarray'>

/ 1 0 1 <class 'function'> <class 'function'>
(y - y) 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
(y - y) 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
(u * u) 2 1 3 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
(u * u) 2 1 3 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
y 2 1 5 <class 'numpy.ndarray'> <class 'numpy.ndarray'>

^3 0 None 0 <class 'function'> <class 'function'>
(y / 1 0 1 <class 'function'> <class 'function'>
new call to func

u 3 1 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 1 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 3 1 2 <class 'function'> <class 'function'>
x 3 2 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 2 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^2 3 2 5 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
0 3 8 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 8 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 8 8 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 8 9 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 8 9 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
/ 3 8 11 <class 'function'> <class 'function'>
x 3 9 12 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 9 12 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 9 14 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 9 15 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 9 15 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^2 3 9 17 <class 'numpy.ufunc'> <class 'numpy.ufunc'>

y 1 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
( ^3 u) 2 0 1 <class 'function'> <class 'function'>
( ^3 u) 2 0 1 <class 'function'> <class 'function'>
u 2 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 2 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 2 1 5 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 2 1 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 2 1 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
(0 d 0) 2 1 8 <class 'function'> <class 'function'>
(0 d 0) 2 1 8 <class 'function'> <class 'function'>
u 2 2 10 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 2 2 11 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 2 2 11 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 2 2 13 <class 'numpy.ndarray'> <class 'numpy.ndarray'>

* 0 None 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
(x d y) 1 0 1 <class 'function'> <class 'function'>
(x d y) 1 0 1 <class 'function'> <class 'function'>
y 1 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
new call to func

0 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 0 2 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 0 5 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 3 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 3 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 3 3 8 <class 'function'> <class 'function'>

d 1 0 1 <class 'function'> <class 'function'>
u 2 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 2 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
( ^2 x) 2 1 3 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
y 2 1 4 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 2 1 4 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 2 1 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>

^2 0 None 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
(y d y) 1 0 1 <class 'function'> <class 'function'>
new call to func

u 3 1 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 1 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
* 3 1 2 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
y 3 1 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 1 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 3 1 5 <class 'function'> <class 'function'>

x 1 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
(u * u) 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>

^3 0 None 0 <class 'function'> <class 'function'>
x 1 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
new call to func

y 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^2 3 0 2 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
0 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 0 5 <class 'numpy.ndarray'> <class 'numpy.ndarray'>

+ 1 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
0 2 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 2 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 2 1 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 2 1 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 2 1 5 <class 'numpy.ndarray'> <class 'numpy.ndarray'>

^3 0 None 0 <class 'function'> <class 'function'>
(0 + 0) 1 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
new tree
OUTPUT OF ONE TREE
^3 0 None 0 <class 'function'> <class 'function'>
^3 0 None 0 <class 'function'> <class 'function'>
/ 1 0 1 <class 'function'> <class 'function'>
/ 1 0 1 <class 'function'> <class 'function'>
- 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
- 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
* 2 1 3 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
* 2 1 3 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
y 2 1 5 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
* 3 0 2 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
x 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 3 0 5 <class 'function'> <class 'function'>
y 3 1 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 1 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
d^2 3 1 8 <class 'function'> <class 'function'>
x 3 1 9 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 1 9 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 1 11 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 2 12 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 2 12 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 2 14 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 2 15 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 2 15 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 3 2 17 <class 'function'> <class 'function'>
u 3 3 18 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 3 18 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
+ 3 3 20 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
x 3 3 21 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 3 21 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 3 23 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 4 24 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 4 24 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 4 26 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 4 27 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 4 27 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 4 29 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Before error - 
/ 1 0 1 <class 'function'> <class 'function'> <function divide at 0x000002558DD984A0>
Before error - 
- 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'subtract'>
Before error - 
- 2 0 1 <class 'numpy.ndarray'> <class 'numpy.ufunc'> [[[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 ...

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]

 [[0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  ...
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]
  [0. 0. 0. ... 0. 0. 0.]]]
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 122, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'numpy.ndarray' object is not callable
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func

u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 0 2 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 0 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 1 4 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^2 3 1 5 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
u 3 1 6 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
x 3 1 7 <class 'numpy.ndarray'> <class 'numpy.ndarray'>

- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
(y * u) 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>

/ 1 0 0 <class 'function'> <class 'function'>
new call to func



u 1 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 86, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 165, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 165, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 165, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 160, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new call to func
new call to func
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 86, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 165, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 165, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 165, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 160, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 86, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 160, in dfs
    print(len(tree), depth)
              ^^^^
NameError: name 'tree' is not defined. Did you mean: 'a_tree'?
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
4 0
4 1
4 2
4 3
4 3
4 2
4 3
4 3
new call to func
4 0
4 1
new call to func
4 0
4 1
4 1
4 2
4 3
4 3
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 86, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 166, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 166, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 166, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 161, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
4 0
4 1
4 2
4 3
4 3
4 2
4 3
4 3
new call to func
4 0
4 1
new call to func
4 0
4 1
4 1
4 2
4 3
4 3
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 86, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 167, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 167, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 167, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 161, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
4 0
/
4 1
-
4 2
u
4 3
u
4 3
*
4 2
u
4 3
x
4 3
new call to func
4 0
u
4 1
new call to func
4 0
x
4 1
^3
4 1
/
4 2
u
4 3
d^2
4 3
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 86, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 167, in dfs
    print(a_tree[depth+1][node.child_st + ix].name)
          ~~~~~~^^^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
4 0
/
4 1
-
4 2
u
4 3
u
4 3
*
4 2
u
4 3
x
4 3
new call to func
4 0
u
4 1
new call to func
4 0
x
4 1
^3
4 1
/
4 2
u
4 3
d^2
4 3
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 86, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 167, in dfs
    print(a_tree[depth+1][node.child_st + ix].name)
          ~~~~~~^^^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
4 0
^3
4 1
new call to func
4 0
/
4 1
/
4 1
^3
4 2
/
4 3
/
4 3
d^2
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 86, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 168, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 161, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
node / added at depth 1 with parent ^3
node - added at depth 2 with parent /
node * added at depth 2 with parent /
node ^2 added at depth 3 with parent *
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
4 0
^3
4 1
new call to func
node ^3 added at depth 1 with parent /
node / added at depth 2 with parent ^3
node d^2 added at depth 3 with parent /
node ^3 added at depth 3 with parent /
4 0
/
4 1
/
4 1
^3
4 2
/
4 3
/
4 3
d^2
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 87, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 162, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3
node / added at depth 1 with parent ^3
node - added at depth 2 with parent /
node * added at depth 2 with parent /
node ^2 added at depth 3 with parent *
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is ^3
4 0
^3
4 1
new call to func
new tree, root is /
node ^3 added at depth 1 with parent /
node / added at depth 2 with parent ^3
node d^2 added at depth 3 with parent /
node ^3 added at depth 3 with parent /
4 0
/
4 1
/
4 1
^3
4 2
/
4 3
/
4 3
d^2
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 87, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 162, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
node ^2 id 6 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is ^3 id 0
4 0
^3
4 1
new call to func
new tree, root is / id 0
node ^3 id 2 added at depth 1 with parent / id 0
node / id 1 added at depth 2 with parent ^3 id 1
node d^2 id 2 added at depth 3 with parent / id 0
node ^3 id 4 added at depth 3 with parent / id 0
4 0
/
4 1
/
4 1
^3
4 2
/
4 3
/
4 3
d^2
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 87, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 169, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 162, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
node ^2 id 6 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is ^3 id 0
max depth is 4
4 0
^3
4 1
new call to func
new tree, root is / id 0
max depth is 4
node ^3 id 2 added at depth 1 with parent / id 0
node / id 1 added at depth 2 with parent ^3 id 1
node d^2 id 2 added at depth 3 with parent / id 0
node ^3 id 4 added at depth 3 with parent / id 0
4 0
/
4 1
/
4 1
^3
4 2
/
4 3
/
4 3
d^2
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 88, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 170, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 170, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 170, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 163, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
here VAR
here VAR
node ^2 id 6 added at depth 3 with parent * id 1
here VAR
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is ^3 id 0
max depth is 4
4 0
^3
4 1
new call to func
new tree, root is / id 0
max depth is 4
node ^3 id 2 added at depth 1 with parent / id 0
node / id 1 added at depth 2 with parent ^3 id 1
here VAR
node d^2 id 2 added at depth 3 with parent / id 0
here VAR
node ^3 id 4 added at depth 3 with parent / id 0
4 0
/
4 1
/
4 1
^3
4 2
/
4 3
/
4 3
d^2
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 89, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 171, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 171, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 171, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 164, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
node u id 2 added at depth 3 with parent - id 0
here VAR
node x id 4 added at depth 3 with parent - id 0
here VAR
node ^2 id 6 added at depth 3 with parent * id 1
here VAR
node x id 8 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is ^3 id 0
max depth is 4
node u id 1 added at depth 1 with parent ^3 id 0
4 0
^3
4 1
new call to func
new tree, root is / id 0
max depth is 4
node x id 1 added at depth 1 with parent / id 0
node ^3 id 2 added at depth 1 with parent / id 0
node / id 1 added at depth 2 with parent ^3 id 1
here VAR
node d^2 id 2 added at depth 3 with parent / id 0
here VAR
node ^3 id 4 added at depth 3 with parent / id 0
4 0
/
4 1
/
4 1
^3
4 2
/
4 3
/
4 3
d^2
4 4
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 40, in __init__
    a_pde = PDE(depth, width, p_var)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 18, in __init__
    one_tree = Tree(depth, p_var)
               ^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 90, in __init__
    dfs(ret, self.tree, depth=0, idx=0)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 172, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 172, in dfs
      File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 172, in dfs
      [Previous line repeated 1 more time]
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 165, in dfs
    node = a_tree[depth][idx]
           ~~~~~~^^^^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
node u id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
here VAR
node y id 3 added at depth 3 with parent * id 1
here VAR
node u id 4 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is * id 0
max depth is 4
node x id 1 added at depth 1 with parent * id 0
node ^3 id 2 added at depth 1 with parent * id 0
node x id 1 added at depth 2 with parent ^3 id 1
4 0
*
4 1
*
4 1
^3
4 2
new call to func
new tree, root is ^3 id 0
max depth is 4
node + id 1 added at depth 1 with parent ^3 id 0
node 0 id 1 added at depth 2 with parent + id 0
node x id 2 added at depth 2 with parent + id 0
4 0
^3
4 1
+
4 2
+
4 2
new call to func
new tree, root is * id 0
max depth is 4
node + id 1 added at depth 1 with parent * id 0
node d^2 id 2 added at depth 1 with parent * id 0
node ^2 id 1 added at depth 2 with parent + id 0
node - id 2 added at depth 2 with parent + id 0
node 0 id 3 added at depth 2 with parent d^2 id 1
node x id 4 added at depth 2 with parent d^2 id 1
here VAR
node 0 id 1 added at depth 3 with parent ^2 id 0
here VAR
node y id 2 added at depth 3 with parent - id 1
here VAR
node u id 3 added at depth 3 with parent - id 1
4 0
*
4 1
+
4 2
^2
4 3
+
4 2
-
4 3
-
4 3
*
4 1
d^2
4 2
d^2
4 2
new call to func
new tree, root is / id 0
max depth is 4
node y id 1 added at depth 1 with parent / id 0
node y id 2 added at depth 1 with parent / id 0
4 0
/
4 1
/
4 1
new call to func
new tree
OUTPUT OF ONE TREE
^3 0 None 0 <class 'function'> <class 'function'>
/ 1 0 0 <class 'function'> <class 'function'>
- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
* 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 1 2 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 1 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Before error - 
- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'subtract'>
Before error - 
* 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'multiply'>
Before error - 
/ 1 0 0 <class 'function'> <class 'function'> <function divide at 0x000002920DD9C540>
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 134, in evaluate_mse
    terms_values[:, ix:ix+1] = tree_list[0][0].cache.reshape(-1, 1) # Record that term grouped together
    ~~~~~~~~~~~~^^^^^^^^^^^^
ValueError: could not broadcast input array from shape (20000000,1) into shape (10000,1)
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
node u id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
here VAR
node y id 3 added at depth 3 with parent * id 1
here VAR
node u id 4 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is * id 0
max depth is 4
node x id 1 added at depth 1 with parent * id 0
node ^3 id 2 added at depth 1 with parent * id 0
node x id 1 added at depth 2 with parent ^3 id 1
4 0
*
4 1
*
4 1
^3
4 2
new call to func
new tree, root is ^3 id 0
max depth is 4
node + id 1 added at depth 1 with parent ^3 id 0
node 0 id 1 added at depth 2 with parent + id 0
node x id 2 added at depth 2 with parent + id 0
4 0
^3
4 1
+
4 2
+
4 2
new call to func
new tree, root is * id 0
max depth is 4
node + id 1 added at depth 1 with parent * id 0
node d^2 id 2 added at depth 1 with parent * id 0
node ^2 id 1 added at depth 2 with parent + id 0
node - id 2 added at depth 2 with parent + id 0
node 0 id 3 added at depth 2 with parent d^2 id 1
node x id 4 added at depth 2 with parent d^2 id 1
here VAR
node 0 id 1 added at depth 3 with parent ^2 id 0
here VAR
node y id 2 added at depth 3 with parent - id 1
here VAR
node u id 3 added at depth 3 with parent - id 1
4 0
*
4 1
+
4 2
^2
4 3
+
4 2
-
4 3
-
4 3
*
4 1
d^2
4 2
d^2
4 2
new call to func
new tree, root is / id 0
max depth is 4
node y id 1 added at depth 1 with parent / id 0
node y id 2 added at depth 1 with parent / id 0
4 0
/
4 1
/
4 1
new call to func
new tree
OUTPUT OF ONE TREE
^3 0 None 0 <class 'function'> <class 'function'>
/ 1 0 0 <class 'function'> <class 'function'>
- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
* 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 1 2 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 1 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Before error - 
- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'subtract'>
Before error - 
* 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'multiply'>
Before error - 
/ 1 0 0 <class 'function'> <class 'function'> <function divide at 0x000001EB1941C5E0>
new tree
OUTPUT OF ONE TREE
* 0 None 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
x 1 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 1 0 1 <class 'function'> <class 'function'>
x 2 1 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Before error - 
* 0 None 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'multiply'>
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 134, in evaluate_mse
    terms_values[:, ix:ix+1] = tree_list[0][0].cache.reshape(-1, 1) # Record that term grouped together
    ~~~~~~~~~~~~^^^^^^^^^^^^
ValueError: could not broadcast input array from shape (10000,1) into shape (20000000,1)
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
node u id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
here VAR
node y id 3 added at depth 3 with parent * id 1
here VAR
node u id 4 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is * id 0
max depth is 4
node x id 1 added at depth 1 with parent * id 0
node ^3 id 2 added at depth 1 with parent * id 0
node x id 1 added at depth 2 with parent ^3 id 1
4 0
*
4 1
*
4 1
^3
4 2
new call to func
new tree, root is ^3 id 0
max depth is 4
node + id 1 added at depth 1 with parent ^3 id 0
node 0 id 1 added at depth 2 with parent + id 0
node x id 2 added at depth 2 with parent + id 0
4 0
^3
4 1
+
4 2
+
4 2
new call to func
new tree, root is * id 0
max depth is 4
node + id 1 added at depth 1 with parent * id 0
node d^2 id 2 added at depth 1 with parent * id 0
node ^2 id 1 added at depth 2 with parent + id 0
node - id 2 added at depth 2 with parent + id 0
node 0 id 3 added at depth 2 with parent d^2 id 1
node x id 4 added at depth 2 with parent d^2 id 1
here VAR
node 0 id 1 added at depth 3 with parent ^2 id 0
here VAR
node y id 2 added at depth 3 with parent - id 1
here VAR
node u id 3 added at depth 3 with parent - id 1
4 0
*
4 1
+
4 2
^2
4 3
+
4 2
-
4 3
-
4 3
*
4 1
d^2
4 2
d^2
4 2
new call to func
new tree, root is / id 0
max depth is 4
node y id 1 added at depth 1 with parent / id 0
node y id 2 added at depth 1 with parent / id 0
4 0
/
4 1
/
4 1
new call to func
(20000000, 5)
new tree
OUTPUT OF ONE TREE
^3 0 None 0 <class 'function'> <class 'function'>
/ 1 0 0 <class 'function'> <class 'function'>
- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
* 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 1 2 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 1 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Before error - 
- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'subtract'>
Before error - 
* 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'multiply'>
Before error - 
/ 1 0 0 <class 'function'> <class 'function'> <function divide at 0x000002065A3EC5E0>
new tree
OUTPUT OF ONE TREE
* 0 None 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
x 1 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 1 0 1 <class 'function'> <class 'function'>
x 2 1 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Before error - 
* 0 None 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'multiply'>
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 135, in evaluate_mse
    terms_values[:, ix:ix+1] = tree_list[0][0].cache.reshape(-1, 1) # Record that term grouped together
    ~~~~~~~~~~~~^^^^^^^^^^^^
ValueError: could not broadcast input array from shape (10000,1) into shape (20000000,1)
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
node u id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
here VAR
node y id 3 added at depth 3 with parent * id 1
here VAR
node u id 4 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is * id 0
max depth is 4
node x id 1 added at depth 1 with parent * id 0
node ^3 id 2 added at depth 1 with parent * id 0
node x id 1 added at depth 2 with parent ^3 id 1
4 0
*
4 1
*
4 1
^3
4 2
new call to func
new tree, root is ^3 id 0
max depth is 4
node + id 1 added at depth 1 with parent ^3 id 0
node 0 id 1 added at depth 2 with parent + id 0
node x id 2 added at depth 2 with parent + id 0
4 0
^3
4 1
+
4 2
+
4 2
new call to func
new tree, root is * id 0
max depth is 4
node + id 1 added at depth 1 with parent * id 0
node d^2 id 2 added at depth 1 with parent * id 0
node ^2 id 1 added at depth 2 with parent + id 0
node - id 2 added at depth 2 with parent + id 0
node 0 id 3 added at depth 2 with parent d^2 id 1
node x id 4 added at depth 2 with parent d^2 id 1
here VAR
node 0 id 1 added at depth 3 with parent ^2 id 0
here VAR
node y id 2 added at depth 3 with parent - id 1
here VAR
node u id 3 added at depth 3 with parent - id 1
4 0
*
4 1
+
4 2
^2
4 3
+
4 2
-
4 3
-
4 3
*
4 1
d^2
4 2
d^2
4 2
new call to func
new tree, root is / id 0
max depth is 4
node y id 1 added at depth 1 with parent / id 0
node y id 2 added at depth 1 with parent / id 0
4 0
/
4 1
/
4 1
new call to func
(20000000, 5)
new tree
OUTPUT OF ONE TREE
^3 0 None 0 <class 'function'> <class 'function'>
/ 1 0 0 <class 'function'> <class 'function'>
- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
* 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
u 3 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
0 3 0 1 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
y 3 1 2 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
u 3 1 3 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Before error - 
- 2 0 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'subtract'>
Before error - 
* 2 0 1 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'multiply'>
Before error - 
/ 1 0 0 <class 'function'> <class 'function'> <function divide at 0x000001EE4470C5E0>
(100, 100, 2000)
new tree
OUTPUT OF ONE TREE
* 0 None 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'>
x 1 0 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
^3 1 0 1 <class 'function'> <class 'function'>
x 2 1 0 <class 'numpy.ndarray'> <class 'numpy.ndarray'>
Before error - 
* 0 None 0 <class 'numpy.ufunc'> <class 'numpy.ufunc'> <ufunc 'multiply'>
(100, 100)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 136, in evaluate_mse
    terms_values[:, ix:ix+1] = tree_list[0][0].cache.reshape(-1, 1) # Record that term grouped together
    ~~~~~~~~~~~~^^^^^^^^^^^^
ValueError: could not broadcast input array from shape (10000,1) into shape (20000000,1)
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
node u id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
here VAR
node y id 3 added at depth 3 with parent * id 1
here VAR
node u id 4 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is * id 0
max depth is 4
node x id 1 added at depth 1 with parent * id 0
node ^3 id 2 added at depth 1 with parent * id 0
node x id 1 added at depth 2 with parent ^3 id 1
4 0
*
4 1
*
4 1
^3
4 2
new call to func
new tree, root is ^3 id 0
max depth is 4
node + id 1 added at depth 1 with parent ^3 id 0
node 0 id 1 added at depth 2 with parent + id 0
node x id 2 added at depth 2 with parent + id 0
4 0
^3
4 1
+
4 2
+
4 2
new call to func
new tree, root is * id 0
max depth is 4
node + id 1 added at depth 1 with parent * id 0
node d^2 id 2 added at depth 1 with parent * id 0
node ^2 id 1 added at depth 2 with parent + id 0
node - id 2 added at depth 2 with parent + id 0
node 0 id 3 added at depth 2 with parent d^2 id 1
node x id 4 added at depth 2 with parent d^2 id 1
here VAR
node 0 id 1 added at depth 3 with parent ^2 id 0
here VAR
node y id 2 added at depth 3 with parent - id 1
here VAR
node u id 3 added at depth 3 with parent - id 1
4 0
*
4 1
+
4 2
^2
4 3
+
4 2
-
4 3
-
4 3
*
4 1
d^2
4 2
d^2
4 2
new call to func
new tree, root is / id 0
max depth is 4
node y id 1 added at depth 1 with parent / id 0
node y id 2 added at depth 1 with parent / id 0
4 0
/
4 1
/
4 1
new call to func
(20000000, 5)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 131, in evaluate_mse
    terms_values[:, ix:ix+1] = tree_list[0][0].cache.reshape(-1, 1) # Record that term grouped together
    ~~~~~~~~~~~~^^^^^^^^^^^^
ValueError: could not broadcast input array from shape (10000,1) into shape (20000000,1)
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
node u id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
here VAR
node u id 3 added at depth 3 with parent * id 1
here VAR
node u id 4 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is * id 0
max depth is 4
node 0 id 1 added at depth 1 with parent * id 0
node ^3 id 2 added at depth 1 with parent * id 0
node 0 id 1 added at depth 2 with parent ^3 id 1
4 0
*
4 1
*
4 1
^3
4 2
new call to func
new tree, root is ^3 id 0
max depth is 4
node + id 1 added at depth 1 with parent ^3 id 0
node 0 id 1 added at depth 2 with parent + id 0
node 0 id 2 added at depth 2 with parent + id 0
4 0
^3
4 1
+
4 2
+
4 2
new call to func
new tree, root is * id 0
max depth is 4
node + id 1 added at depth 1 with parent * id 0
node d^2 id 2 added at depth 1 with parent * id 0
node ^2 id 1 added at depth 2 with parent + id 0
node - id 2 added at depth 2 with parent + id 0
node 0 id 3 added at depth 2 with parent d^2 id 1
node x id 4 added at depth 2 with parent d^2 id 1
here VAR
node 0 id 1 added at depth 3 with parent ^2 id 0
here VAR
node u id 2 added at depth 3 with parent - id 1
here VAR
node u id 3 added at depth 3 with parent - id 1
4 0
*
4 1
+
4 2
^2
4 3
+
4 2
-
4 3
-
4 3
*
4 1
d^2
4 2
d^2
4 2
new call to func
new tree, root is / id 0
max depth is 4
node u id 1 added at depth 1 with parent / id 0
node u id 2 added at depth 1 with parent / id 0
4 0
/
4 1
/
4 1
new call to func
(20000000, 5)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 192, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 41, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 155, in evaluate_mse
    terms_values = np.hstack((default_terms, terms_values))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\shape_base.py", line 357, in hstack
    return _nx.concatenate(arrs, 0, dtype=dtype, casting=casting)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: all the input arrays must have same number of dimensions, but the array at index 0 has 1 dimension(s) and the array at index 1 has 2 dimension(s)
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node - id 1 added at depth 2 with parent / id 0
node * id 2 added at depth 2 with parent / id 0
here VAR
node u id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
here VAR
node u id 3 added at depth 3 with parent * id 1
here VAR
node u id 4 added at depth 3 with parent * id 1
4 0
^3
4 1
/
4 2
-
4 3
-
4 3
/
4 2
*
4 3
*
4 3
new call to func
new tree, root is * id 0
max depth is 4
node 0 id 1 added at depth 1 with parent * id 0
node ^3 id 2 added at depth 1 with parent * id 0
node 0 id 1 added at depth 2 with parent ^3 id 1
4 0
*
4 1
*
4 1
^3
4 2
new call to func
new tree, root is ^3 id 0
max depth is 4
node + id 1 added at depth 1 with parent ^3 id 0
node 0 id 1 added at depth 2 with parent + id 0
node 0 id 2 added at depth 2 with parent + id 0
4 0
^3
4 1
+
4 2
+
4 2
new call to func
new tree, root is * id 0
max depth is 4
node + id 1 added at depth 1 with parent * id 0
node d^2 id 2 added at depth 1 with parent * id 0
node ^2 id 1 added at depth 2 with parent + id 0
node - id 2 added at depth 2 with parent + id 0
node 0 id 3 added at depth 2 with parent d^2 id 1
node x id 4 added at depth 2 with parent d^2 id 1
here VAR
node 0 id 1 added at depth 3 with parent ^2 id 0
here VAR
node u id 2 added at depth 3 with parent - id 1
here VAR
node u id 3 added at depth 3 with parent - id 1
4 0
*
4 1
+
4 2
^2
4 3
+
4 2
-
4 3
-
4 3
*
4 1
d^2
4 2
d^2
4 2
new call to func
new tree, root is / id 0
max depth is 4
node u id 1 added at depth 1 with parent / id 0
node u id 2 added at depth 1 with parent / id 0
4 0
/
4 1
/
4 1
new call to func
(20000000, 5)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - 0) / (u * u)))+(u / u)
evaluate_aic: 26.48846688933985
new tree, root is * id 0
max depth is 4
node 0 id 1 added at depth 1 with parent * id 0
node d id 2 added at depth 1 with parent * id 0
node u id 1 added at depth 2 with parent d id 1
node y id 2 added at depth 2 with parent d id 1
4 0
*
4 1
*
4 1
d
4 2
d
4 2
new call to func
(20000000, 1)
new tree
cache shape at root - (100, 100, 2000)
inf
new tree, root is d^2 id 0
max depth is 4
node - id 1 added at depth 1 with parent d^2 id 0
node y id 2 added at depth 1 with parent d^2 id 0
node 0 id 1 added at depth 2 with parent - id 0
node ^3 id 2 added at depth 2 with parent - id 0
here VAR
node 0 id 1 added at depth 3 with parent ^3 id 1
4 0
d^2
4 1
-
4 2
-
4 2
^3
4 3
d^2
4 1
new call to func
new tree, root is d^2 id 0
max depth is 4
node u id 1 added at depth 1 with parent d^2 id 0
node y id 2 added at depth 1 with parent d^2 id 0
4 0
d^2
4 1
d^2
4 1
new call to func
new tree, root is ^3 id 0
max depth is 4
node u id 1 added at depth 1 with parent ^3 id 0
4 0
^3
4 1
new call to func
(20000000, 3)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 1
a_pde.visualize(): (u d^2 y)+( ^3 u)
evaluate_aic: 26.488470970590363
new tree, root is / id 0
max depth is 4
node d id 1 added at depth 1 with parent / id 0
node d id 2 added at depth 1 with parent / id 0
node u id 1 added at depth 2 with parent d id 0
node x id 2 added at depth 2 with parent d id 0
node 0 id 3 added at depth 2 with parent d id 1
node x id 4 added at depth 2 with parent d id 1
4 0
/
4 1
d
4 2
d
4 2
/
4 1
d
4 2
d
4 2
new call to func
new tree, root is / id 0
max depth is 4
node ^3 id 1 added at depth 1 with parent / id 0
node 0 id 2 added at depth 1 with parent / id 0
node 0 id 1 added at depth 2 with parent ^3 id 0
4 0
/
4 1
^3
4 2
/
4 1
new call to func
new tree, root is d id 0
max depth is 4
node ^3 id 1 added at depth 1 with parent d id 0
node y id 2 added at depth 1 with parent d id 0
node 0 id 1 added at depth 2 with parent ^3 id 0
4 0
d
4 1
^3
4 2
d
4 1
new call to func
new tree, root is d^2 id 0
max depth is 4
node + id 1 added at depth 1 with parent d^2 id 0
node y id 2 added at depth 1 with parent d^2 id 0
node * id 1 added at depth 2 with parent + id 0
node ^3 id 2 added at depth 2 with parent + id 0
here VAR
node 0 id 1 added at depth 3 with parent * id 0
here VAR
node 0 id 2 added at depth 3 with parent * id 0
here VAR
node 0 id 3 added at depth 3 with parent ^3 id 1
4 0
d^2
4 1
+
4 2
*
4 3
*
4 3
+
4 2
^3
4 3
d^2
4 1
new call to func
new tree, root is * id 0
max depth is 4
node 0 id 1 added at depth 1 with parent * id 0
node 0 id 2 added at depth 1 with parent * id 0
4 0
*
4 1
*
4 1
new call to func
(20000000, 5)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 2
a_pde.visualize(): ((u d x) / (0 d x))
evaluate_aic: 24.479167072984506
new tree, root is d^2 id 0
max depth is 4
node ^2 id 1 added at depth 1 with parent d^2 id 0
node y id 2 added at depth 1 with parent d^2 id 0
node / id 1 added at depth 2 with parent ^2 id 0
here VAR
node u id 1 added at depth 3 with parent / id 0
here VAR
node u id 2 added at depth 3 with parent / id 0
4 0
d^2
4 1
^2
4 2
/
4 3
/
4 3
d^2
4 1
new call to func
new tree, root is / id 0
max depth is 4
node * id 1 added at depth 1 with parent / id 0
node - id 2 added at depth 1 with parent / id 0
node d id 1 added at depth 2 with parent * id 0
node / id 2 added at depth 2 with parent * id 0
node u id 3 added at depth 2 with parent - id 1
node u id 4 added at depth 2 with parent - id 1
here VAR
node u id 1 added at depth 3 with parent d id 0
node x id 2 added at depth 3 with parent d id 0
here VAR
node u id 3 added at depth 3 with parent / id 1
here VAR
node 0 id 4 added at depth 3 with parent / id 1
4 0
/
4 1
*
4 2
d
4 3
d
4 3
*
4 2
/
4 3
/
4 3
/
4 1
-
4 2
-
4 2
new call to func
new tree, root is d^2 id 0
max depth is 4
node d id 1 added at depth 1 with parent d^2 id 0
node x id 2 added at depth 1 with parent d^2 id 0
node u id 1 added at depth 2 with parent d id 0
node y id 2 added at depth 2 with parent d id 0
4 0
d^2
4 1
d
4 2
d
4 2
d^2
4 1
new call to func
new tree, root is d^2 id 0
max depth is 4
node u id 1 added at depth 1 with parent d^2 id 0
node y id 2 added at depth 1 with parent d^2 id 0
4 0
d^2
4 1
d^2
4 1
new call to func
(20000000, 4)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 3
a_pde.visualize(): (((u d x) * (u / 0)) / (u - u))+((u d y) d^2 x)+(u d^2 y)
evaluate_aic: 24.48846068093901
new tree, root is * id 0
max depth is 4
node ^3 id 1 added at depth 1 with parent * id 0
node * id 2 added at depth 1 with parent * id 0
node / id 1 added at depth 2 with parent ^3 id 0
node ^2 id 2 added at depth 2 with parent * id 1
node 0 id 3 added at depth 2 with parent * id 1
here VAR
node 0 id 1 added at depth 3 with parent / id 0
here VAR
node 0 id 2 added at depth 3 with parent / id 0
here VAR
node u id 3 added at depth 3 with parent ^2 id 1
4 0
*
4 1
^3
4 2
/
4 3
/
4 3
*
4 1
*
4 2
^2
4 3
*
4 2
new call to func
(20000000, 1)
new tree
cache shape at root - (100, 100, 2000)
inf
new tree, root is ^3 id 0
max depth is 4
node + id 1 added at depth 1 with parent ^3 id 0
node d^2 id 1 added at depth 2 with parent + id 0
node + id 2 added at depth 2 with parent + id 0
here VAR
node u id 1 added at depth 3 with parent d^2 id 0
node y id 2 added at depth 3 with parent d^2 id 0
here VAR
node u id 3 added at depth 3 with parent + id 1
here VAR
node 0 id 4 added at depth 3 with parent + id 1
4 0
^3
4 1
+
4 2
d^2
4 3
d^2
4 3
+
4 2
+
4 3
+
4 3
new call to func
new tree, root is ^3 id 0
max depth is 4
node u id 1 added at depth 1 with parent ^3 id 0
4 0
^3
4 1
new call to func
(20000000, 2)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 4
a_pde.visualize(): ( ^3 ((u d^2 y) + (u + 0)))+( ^3 u)
evaluate_aic: 26.488470486909026
new tree, root is ^2 id 0
max depth is 4
node - id 1 added at depth 1 with parent ^2 id 0
node 0 id 1 added at depth 2 with parent - id 0
node + id 2 added at depth 2 with parent - id 0
here VAR
node u id 1 added at depth 3 with parent + id 1
here VAR
node 0 id 2 added at depth 3 with parent + id 1
4 0
^2
4 1
-
4 2
-
4 2
+
4 3
+
4 3
new call to func
(20000000, 1)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 5
a_pde.visualize(): ( ^2 (0 - (u + 0)))
evaluate_aic: 24.48847230206283
new tree, root is d^2 id 0
max depth is 4
node ^3 id 1 added at depth 1 with parent d^2 id 0
node y id 2 added at depth 1 with parent d^2 id 0
node 0 id 1 added at depth 2 with parent ^3 id 0
4 0
d^2
4 1
^3
4 2
d^2
4 1
new call to func
new tree, root is d id 0
max depth is 4
node ^2 id 1 added at depth 1 with parent d id 0
node x id 2 added at depth 1 with parent d id 0
node + id 1 added at depth 2 with parent ^2 id 0
here VAR
node 0 id 1 added at depth 3 with parent + id 0
here VAR
node u id 2 added at depth 3 with parent + id 0
4 0
d
4 1
^2
4 2
+
4 3
+
4 3
d
4 1
new call to func
(20000000, 2)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 6
a_pde.visualize(): (( ^2 (0 + u)) d x)
evaluate_aic: 24.488446827176425
new tree, root is d^2 id 0
max depth is 4
node 0 id 1 added at depth 1 with parent d^2 id 0
node x id 2 added at depth 1 with parent d^2 id 0
4 0
d^2
4 1
d^2
4 1
new call to func
new tree, root is ^3 id 0
max depth is 4
node / id 1 added at depth 1 with parent ^3 id 0
node u id 1 added at depth 2 with parent / id 0
node u id 2 added at depth 2 with parent / id 0
4 0
^3
4 1
/
4 2
/
4 2
new call to func
new tree, root is / id 0
max depth is 4
node d id 1 added at depth 1 with parent / id 0
node * id 2 added at depth 1 with parent / id 0
node - id 1 added at depth 2 with parent d id 0
node y id 2 added at depth 2 with parent d id 0
node ^2 id 3 added at depth 2 with parent * id 1
node d^2 id 4 added at depth 2 with parent * id 1
here VAR
node 0 id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
here VAR
node 0 id 3 added at depth 3 with parent ^2 id 2
here VAR
node 0 id 4 added at depth 3 with parent d^2 id 3
node y id 5 added at depth 3 with parent d^2 id 3
4 0
/
4 1
d
4 2
-
4 3
-
4 3
d
4 2
/
4 1
*
4 2
^2
4 3
*
4 2
d^2
4 3
d^2
4 3
new call to func
new tree, root is d id 0
max depth is 4
node u id 1 added at depth 1 with parent d id 0
node x id 2 added at depth 1 with parent d id 0
4 0
d
4 1
d
4 1
new call to func
(20000000, 4)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 7
a_pde.visualize(): ( ^3 (u / u))+(u d x)
evaluate_aic: 26.47916203119936
new tree, root is ^2 id 0
max depth is 4
node 0 id 1 added at depth 1 with parent ^2 id 0
4 0
^2
4 1
new call to func
new tree, root is d^2 id 0
max depth is 4
node 0 id 1 added at depth 1 with parent d^2 id 0
node y id 2 added at depth 1 with parent d^2 id 0
4 0
d^2
4 1
d^2
4 1
new call to func
new tree, root is ^3 id 0
max depth is 4
node d id 1 added at depth 1 with parent ^3 id 0
node u id 1 added at depth 2 with parent d id 0
node y id 2 added at depth 2 with parent d id 0
4 0
^3
4 1
d
4 2
d
4 2
new call to func
(20000000, 3)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 (u d y))
evaluate_aic: 24.488472245965387
new tree, root is ^2 id 0
max depth is 4
node u id 1 added at depth 1 with parent ^2 id 0
4 0
^2
4 1
new call to func
(20000000, 1)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 9
a_pde.visualize(): ( ^2 u)
evaluate_aic: 24.48847230206283
new tree, root is * id 0
max depth is 4
node - id 1 added at depth 1 with parent * id 0
node u id 2 added at depth 1 with parent * id 0
node u id 1 added at depth 2 with parent - id 0
node 0 id 2 added at depth 2 with parent - id 0
4 0
*
4 1
-
4 2
-
4 2
*
4 1
new call to func
(20000000, 1)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 10
a_pde.visualize(): ((u - 0) * u)
evaluate_aic: 24.48847230206283
new tree, root is ^2 id 0
max depth is 4
node ^2 id 1 added at depth 1 with parent ^2 id 0
node - id 1 added at depth 2 with parent ^2 id 0
here VAR
node u id 1 added at depth 3 with parent - id 0
here VAR
node 0 id 2 added at depth 3 with parent - id 0
4 0
^2
4 1
^2
4 2
-
4 3
-
4 3
new call to func
new tree, root is ^3 id 0
max depth is 4
node u id 1 added at depth 1 with parent ^3 id 0
4 0
^3
4 1
new call to func
new tree, root is ^3 id 0
max depth is 4
node u id 1 added at depth 1 with parent ^3 id 0
4 0
^3
4 1
new call to func
new tree, root is ^3 id 0
max depth is 4
node 0 id 1 added at depth 1 with parent ^3 id 0
4 0
^3
4 1
new call to func
(20000000, 4)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 ( ^2 (u - 0)))+( ^3 u)+( ^3 u)
evaluate_aic: 28.48847032607803
new tree, root is ^3 id 0
max depth is 4
node 0 id 1 added at depth 1 with parent ^3 id 0
4 0
^3
4 1
new call to func
new tree, root is d id 0
max depth is 4
node u id 1 added at depth 1 with parent d id 0
node x id 2 added at depth 1 with parent d id 0
4 0
d
4 1
d
4 1
new call to func
new tree, root is / id 0
max depth is 4
node - id 1 added at depth 1 with parent / id 0
node 0 id 2 added at depth 1 with parent / id 0
node * id 1 added at depth 2 with parent - id 0
node 0 id 2 added at depth 2 with parent - id 0
here VAR
node u id 1 added at depth 3 with parent * id 0
here VAR
node 0 id 2 added at depth 3 with parent * id 0
4 0
/
4 1
-
4 2
*
4 3
*
4 3
-
4 2
/
4 1
new call to func
new tree, root is d id 0
max depth is 4
node + id 1 added at depth 1 with parent d id 0
node x id 2 added at depth 1 with parent d id 0
node * id 1 added at depth 2 with parent + id 0
node u id 2 added at depth 2 with parent + id 0
here VAR
node u id 1 added at depth 3 with parent * id 0
here VAR
node 0 id 2 added at depth 3 with parent * id 0
4 0
d
4 1
+
4 2
*
4 3
*
4 3
+
4 2
d
4 1
new call to func
(20000000, 4)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
new tree
cache shape at root - (100, 100, 2000)
Creating the ith pde, i= 12
a_pde.visualize(): (u d x)+(((u * 0) + u) d x)
evaluate_aic: 26.479167072984506
new tree, root is / id 0
max depth is 4
node 0 id 1 added at depth 1 with parent / id 0
node u id 2 added at depth 1 with parent / id 0
4 0
/
4 1
/
4 1
new call to func
new tree, root is * id 0
max depth is 4
node ^3 id 1 added at depth 1 with parent * id 0
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - 0) / (u * u)))+(u / u)
evaluate_aic: 26.48846688933985
inf
Creating the ith pde, i= 1
a_pde.visualize(): (u d^2 y)+( ^3 u)
evaluate_aic: 26.488470970590363
Creating the ith pde, i= 2
a_pde.visualize(): ((u d x) / (0 d x))
evaluate_aic: 24.479167072984506
Creating the ith pde, i= 3
a_pde.visualize(): (((u d x) * (u / 0)) / (u - u))+((u d y) d^2 x)+(u d^2 y)
evaluate_aic: 24.48846068093901
inf
Creating the ith pde, i= 4
a_pde.visualize(): ( ^3 ((u d^2 y) + (u + 0)))+( ^3 u)
evaluate_aic: 26.488470486909026
Creating the ith pde, i= 5
a_pde.visualize(): ( ^2 (0 - (u + 0)))
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 6
a_pde.visualize(): (( ^2 (0 + u)) d x)
evaluate_aic: 24.488446827176425
Creating the ith pde, i= 7
a_pde.visualize(): ( ^3 (u / u))+(u d x)
evaluate_aic: 26.47916203119936
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 (u d y))
evaluate_aic: 24.488472245965387
Creating the ith pde, i= 9
a_pde.visualize(): ( ^2 u)
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 10
a_pde.visualize(): ((u - 0) * u)
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 ( ^2 (u - 0)))+( ^3 u)+( ^3 u)
evaluate_aic: 28.48847032607803
Creating the ith pde, i= 12
a_pde.visualize(): (u d x)+(((u * 0) + u) d x)
evaluate_aic: 26.479167072984506
Creating the ith pde, i= 13
a_pde.visualize(): (( ^3 u) * u)+(u * ((u d y) * u))+(u d^2 y)
evaluate_aic: 26.4884716677127
inf
Creating the ith pde, i= 14
a_pde.visualize(): (u / 0)
evaluate_aic: 24.488472340674495
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^3 u))+( ^3 ((u d y) / 0))+( ^2 u)+((u - 0) * (u - (0 - u)))
evaluate_aic: 30.488471860320903
Creating the ith pde, i= 16
a_pde.visualize(): (u d x)
evaluate_aic: 24.479167072984506
Creating the ith pde, i= 17
a_pde.visualize(): (( ^3 u) d y)
evaluate_aic: 24.488472365629743
inf
Creating the ith pde, i= 18
a_pde.visualize(): (u d^2 y)+( ^2 u)
evaluate_aic: 26.48847229774309
Creating the ith pde, i= 19
a_pde.visualize(): ( ^2 u)+(u / ((0 * u) - u))
evaluate_aic: 26.48846433119325
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
1 generation best_aic & best Eq: 24.479167072984506, ((u d x) / (0 d x))
best concise Eq: 
1 generation repeat cross over 7 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 193, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 69, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 151, in change
    a_err, a_w = evaluate_mse(new_eqs[i])
                 ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 112, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, tmp, what_is_denominator)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 63, in Diff
    uxt = np.gradient(u, axis=2)/dxt
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\lib\function_base.py", line 1153, in gradient
    axes = _nx.normalize_axis_tuple(axis, N)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\numeric.py", line 1380, in normalize_axis_tuple
    axis = tuple([normalize_axis_index(ax, ndim, argname) for ax in axis])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - 0) / (u * u)))+(u / u)
evaluate_aic: 26.48846688933985
inf
Creating the ith pde, i= 1
a_pde.visualize(): (u d^2 y)+( ^3 u)
evaluate_aic: 26.488470970590363
Creating the ith pde, i= 2
a_pde.visualize(): ((u d x) / (0 d x))
evaluate_aic: 24.479167072984506
Creating the ith pde, i= 3
a_pde.visualize(): (((u d x) * (u / 0)) / (u - u))+((u d y) d^2 x)+(u d^2 y)
evaluate_aic: 24.48846068093901
inf
Creating the ith pde, i= 4
a_pde.visualize(): ( ^3 ((u d^2 y) + (u + 0)))+( ^3 u)
evaluate_aic: 26.488470486909026
Creating the ith pde, i= 5
a_pde.visualize(): ( ^2 (0 - (u + 0)))
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 6
a_pde.visualize(): (( ^2 (0 + u)) d x)
evaluate_aic: 24.488446827176425
Creating the ith pde, i= 7
a_pde.visualize(): ( ^3 (u / u))+(u d x)
evaluate_aic: 26.47916203119936
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 (u d y))
evaluate_aic: 24.488472245965387
Creating the ith pde, i= 9
a_pde.visualize(): ( ^2 u)
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 10
a_pde.visualize(): ((u - 0) * u)
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 ( ^2 (u - 0)))+( ^3 u)+( ^3 u)
evaluate_aic: 28.48847032607803
Creating the ith pde, i= 12
a_pde.visualize(): (u d x)+(((u * 0) + u) d x)
evaluate_aic: 26.479167072984506
Creating the ith pde, i= 13
a_pde.visualize(): (( ^3 u) * u)+(u * ((u d y) * u))+(u d^2 y)
evaluate_aic: 26.4884716677127
inf
Creating the ith pde, i= 14
a_pde.visualize(): (u / 0)
evaluate_aic: 24.488472340674495
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^3 u))+( ^3 ((u d y) / 0))+( ^2 u)+((u - 0) * (u - (0 - u)))
evaluate_aic: 30.488471860320903
Creating the ith pde, i= 16
a_pde.visualize(): (u d x)
evaluate_aic: 24.479167072984506
Creating the ith pde, i= 17
a_pde.visualize(): (( ^3 u) d y)
evaluate_aic: 24.488472365629743
inf
Creating the ith pde, i= 18
a_pde.visualize(): (u d^2 y)+( ^2 u)
evaluate_aic: 26.48847229774309
Creating the ith pde, i= 19
a_pde.visualize(): ( ^2 u)+(u / ((0 * u) - u))
evaluate_aic: 26.48846433119325
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
1 generation best_aic & best Eq: 24.479167072984506, ((u d x) / (0 d x))
best concise Eq: 
1 generation repeat cross over 7 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
Error in shape, child cache shape is (100, 2000)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 113, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, tmp, what_is_denominator)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 63, in Diff
    uxt = np.gradient(u, axis=2)/dxt
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\lib\function_base.py", line 1153, in gradient
    axes = _nx.normalize_axis_tuple(axis, N)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\numeric.py", line 1380, in normalize_axis_tuple
    axis = tuple([normalize_axis_index(ax, ndim, argname) for ax in axis])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 193, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 69, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 151, in change
    a_err, a_w = evaluate_mse(new_eqs[i])
                 ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 116, in evaluate_mse
    raise Exception
Exception
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - 0) / (u * u)))+(u / u)
evaluate_aic: 26.48846688933985
inf
Creating the ith pde, i= 1
a_pde.visualize(): (u d^2 y)+( ^3 u)
evaluate_aic: 26.488470970590363
Creating the ith pde, i= 2
a_pde.visualize(): ((u d x) / (0 d x))
evaluate_aic: 24.479167072984506
Creating the ith pde, i= 3
a_pde.visualize(): (((u d x) * (u / 0)) / (u - u))+((u d y) d^2 x)+(u d^2 y)
evaluate_aic: 24.48846068093901
inf
Creating the ith pde, i= 4
a_pde.visualize(): ( ^3 ((u d^2 y) + (u + 0)))+( ^3 u)
evaluate_aic: 26.488470486909026
Creating the ith pde, i= 5
a_pde.visualize(): ( ^2 (0 - (u + 0)))
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 6
a_pde.visualize(): (( ^2 (0 + u)) d x)
evaluate_aic: 24.488446827176425
Creating the ith pde, i= 7
a_pde.visualize(): ( ^3 (u / u))+(u d x)
evaluate_aic: 26.47916203119936
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 (u d y))
evaluate_aic: 24.488472245965387
Creating the ith pde, i= 9
a_pde.visualize(): ( ^2 u)
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 10
a_pde.visualize(): ((u - 0) * u)
evaluate_aic: 24.48847230206283
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 ( ^2 (u - 0)))+( ^3 u)+( ^3 u)
evaluate_aic: 28.48847032607803
Creating the ith pde, i= 12
a_pde.visualize(): (u d x)+(((u * 0) + u) d x)
evaluate_aic: 26.479167072984506
Creating the ith pde, i= 13
a_pde.visualize(): (( ^3 u) * u)+(u * ((u d y) * u))+(u d^2 y)
evaluate_aic: 26.4884716677127
inf
Creating the ith pde, i= 14
a_pde.visualize(): (u / 0)
evaluate_aic: 24.488472340674495
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^3 u))+( ^3 ((u d y) / 0))+( ^2 u)+((u - 0) * (u - (0 - u)))
evaluate_aic: 30.488471860320903
Creating the ith pde, i= 16
a_pde.visualize(): (u d x)
evaluate_aic: 24.479167072984506
Creating the ith pde, i= 17
a_pde.visualize(): (( ^3 u) d y)
evaluate_aic: 24.488472365629743
inf
Creating the ith pde, i= 18
a_pde.visualize(): (u d^2 y)+( ^2 u)
evaluate_aic: 26.48847229774309
Creating the ith pde, i= 19
a_pde.visualize(): ( ^2 u)+(u / ((0 * u) - u))
evaluate_aic: 26.48846433119325
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
1 generation best_aic & best Eq: 24.479167072984506, ((u d x) / (0 d x))
best concise Eq: 
1 generation repeat cross over 7 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
Error in shape, child cache shape is (100, 2000)
/
* -
d / u u
y y u u
tree is 
None
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 117, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, tmp, what_is_denominator)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 63, in Diff
    uxt = np.gradient(u, axis=2)/dxt
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\lib\function_base.py", line 1153, in gradient
    axes = _nx.normalize_axis_tuple(axis, N)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\numeric.py", line 1380, in normalize_axis_tuple
    axis = tuple([normalize_axis_index(ax, ndim, argname) for ax in axis])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 193, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 69, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 151, in change
    a_err, a_w = evaluate_mse(new_eqs[i])
                 ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 121, in evaluate_mse
    raise Exception
Exception
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - 0) / (u * u)))+(u / u)
evaluate_aic: 17.713280484589617
inf
Creating the ith pde, i= 1
a_pde.visualize(): (u d^2 y)+( ^3 u)
evaluate_aic: 15.713303121974349
Creating the ith pde, i= 2
a_pde.visualize(): ((u d x) / (0 d x))
evaluate_aic: 15.712291617214932
Creating the ith pde, i= 3
a_pde.visualize(): (((u d x) * (u / 0)) / (u - u))+((u d y) d^2 x)+(u d^2 y)
evaluate_aic: 15.713294816826517
inf
Creating the ith pde, i= 4
a_pde.visualize(): ( ^3 ((u d^2 y) + (u + 0)))+( ^3 u)
evaluate_aic: 17.713286695062187
Creating the ith pde, i= 5
a_pde.visualize(): ( ^2 (0 - (u + 0)))
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 6
a_pde.visualize(): (( ^2 (0 + u)) d x)
evaluate_aic: 15.713204792972284
Creating the ith pde, i= 7
a_pde.visualize(): ( ^3 (u / u))+(u d x)
evaluate_aic: 17.71225853523772
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 (u d y))
evaluate_aic: 15.713315770934319
Creating the ith pde, i= 9
a_pde.visualize(): ( ^2 u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 10
a_pde.visualize(): ((u - 0) * u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 ( ^2 (u - 0)))+( ^3 u)+( ^3 u)
evaluate_aic: 15.713300741550094
Creating the ith pde, i= 12
a_pde.visualize(): (u d x)+(((u * 0) + u) d x)
evaluate_aic: 17.71229161721493
Creating the ith pde, i= 13
a_pde.visualize(): (( ^3 u) * u)+(u * ((u d y) * u))+(u d^2 y)
evaluate_aic: 19.713280347292915
inf
Creating the ith pde, i= 14
a_pde.visualize(): (u / 0)
evaluate_aic: 15.713305491763887
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^3 u))+( ^3 ((u d y) / 0))+( ^2 u)+((u - 0) * (u - (0 - u)))
evaluate_aic: 19.713296451135506
Creating the ith pde, i= 16
a_pde.visualize(): (u d x)
evaluate_aic: 15.712291617214932
Creating the ith pde, i= 17
a_pde.visualize(): (( ^3 u) d y)
evaluate_aic: 15.713293090416766
inf
Creating the ith pde, i= 18
a_pde.visualize(): (u d^2 y)+( ^2 u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 19
a_pde.visualize(): ( ^2 u)+(u / ((0 * u) - u))
evaluate_aic: 17.71328131408776
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
Error in shape, child cache shape is (100, 100)
tree is 
((x d y) d^2 x)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 117, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, tmp, what_is_denominator)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 63, in Diff
    uxt = np.gradient(u, axis=2)/dxt
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\lib\function_base.py", line 1153, in gradient
    axes = _nx.normalize_axis_tuple(axis, N)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\numeric.py", line 1380, in normalize_axis_tuple
    axis = tuple([normalize_axis_index(ax, ndim, argname) for ax in axis])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 2 is out of bounds for array of dimension 2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 193, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 69, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 151, in change
    a_err, a_w = evaluate_mse(new_eqs[i])
                 ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 121, in evaluate_mse
    raise Exception
Exception
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - 0) / (u * u)))+(u / u)
evaluate_aic: 17.713280484589617
inf
Creating the ith pde, i= 1
a_pde.visualize(): (u d^2 y)+( ^3 u)
evaluate_aic: 15.713303121974349
Creating the ith pde, i= 2
a_pde.visualize(): ((u d x) / (0 d x))
evaluate_aic: 15.712291617214932
Creating the ith pde, i= 3
a_pde.visualize(): (((u d x) * (u / 0)) / (u - u))+((u d y) d^2 x)+(u d^2 y)
evaluate_aic: 15.713294816826517
inf
Creating the ith pde, i= 4
a_pde.visualize(): ( ^3 ((u d^2 y) + (u + 0)))+( ^3 u)
evaluate_aic: 17.713286695062187
Creating the ith pde, i= 5
a_pde.visualize(): ( ^2 (0 - (u + 0)))
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 6
a_pde.visualize(): (( ^2 (0 + u)) d x)
evaluate_aic: 15.713204792972284
Creating the ith pde, i= 7
a_pde.visualize(): ( ^3 (u / u))+(u d x)
evaluate_aic: 17.71225853523772
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 (u d y))
evaluate_aic: 15.713315770934319
Creating the ith pde, i= 9
a_pde.visualize(): ( ^2 u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 10
a_pde.visualize(): ((u - 0) * u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 ( ^2 (u - 0)))+( ^3 u)+( ^3 u)
evaluate_aic: 15.713300741550094
Creating the ith pde, i= 12
a_pde.visualize(): (u d x)+(((u * 0) + u) d x)
evaluate_aic: 17.71229161721493
Creating the ith pde, i= 13
a_pde.visualize(): (( ^3 u) * u)+(u * ((u d y) * u))+(u d^2 y)
evaluate_aic: 19.713280347292915
inf
Creating the ith pde, i= 14
a_pde.visualize(): (u / 0)
evaluate_aic: 15.713305491763887
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^3 u))+( ^3 ((u d y) / 0))+( ^2 u)+((u - 0) * (u - (0 - u)))
evaluate_aic: 19.713296451135506
Creating the ith pde, i= 16
a_pde.visualize(): (u d x)
evaluate_aic: 15.712291617214932
Creating the ith pde, i= 17
a_pde.visualize(): (( ^3 u) d y)
evaluate_aic: 15.713293090416766
inf
Creating the ith pde, i= 18
a_pde.visualize(): (u d^2 y)+( ^2 u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 19
a_pde.visualize(): ( ^2 u)+(u / ((0 * u) - u))
evaluate_aic: 17.71328131408776
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
Error in shape, child cache shape is (100,)
tree is 
(((y d x) * (u / 0)) / (0 - u))
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 117, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, tmp, what_is_denominator)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 60, in Diff
    uxt = np.gradient(u, axis=1)/dxt
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\lib\function_base.py", line 1153, in gradient
    axes = _nx.normalize_axis_tuple(axis, N)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\numeric.py", line 1380, in normalize_axis_tuple
    axis = tuple([normalize_axis_index(ax, ndim, argname) for ax in axis])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 1 is out of bounds for array of dimension 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 193, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 69, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 151, in change
    a_err, a_w = evaluate_mse(new_eqs[i])
                 ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 121, in evaluate_mse
    raise Exception
Exception
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - 0) / (u * u)))+(u / u)
evaluate_aic: 17.713280484589617
inf
Creating the ith pde, i= 1
a_pde.visualize(): (u d^2 y)+( ^3 u)
evaluate_aic: 15.713303121974349
Creating the ith pde, i= 2
a_pde.visualize(): ((u d x) / (0 d x))
evaluate_aic: 15.712291617214932
Creating the ith pde, i= 3
a_pde.visualize(): (((u d x) * (u / 0)) / (u - u))+((u d y) d^2 x)+(u d^2 y)
evaluate_aic: 15.713294816826517
inf
Creating the ith pde, i= 4
a_pde.visualize(): ( ^3 ((u d^2 y) + (u + 0)))+( ^3 u)
evaluate_aic: 17.713286695062187
Creating the ith pde, i= 5
a_pde.visualize(): ( ^2 (0 - (u + 0)))
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 6
a_pde.visualize(): (( ^2 (0 + u)) d x)
evaluate_aic: 15.713204792972284
Creating the ith pde, i= 7
a_pde.visualize(): ( ^3 (u / u))+(u d x)
evaluate_aic: 17.71225853523772
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 (u d y))
evaluate_aic: 15.713315770934319
Creating the ith pde, i= 9
a_pde.visualize(): ( ^2 u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 10
a_pde.visualize(): ((u - 0) * u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 ( ^2 (u - 0)))+( ^3 u)+( ^3 u)
evaluate_aic: 15.713300741550094
Creating the ith pde, i= 12
a_pde.visualize(): (u d x)+(((u * 0) + u) d x)
evaluate_aic: 17.71229161721493
Creating the ith pde, i= 13
a_pde.visualize(): (( ^3 u) * u)+(u * ((u d y) * u))+(u d^2 y)
evaluate_aic: 19.713280347292915
inf
Creating the ith pde, i= 14
a_pde.visualize(): (u / 0)
evaluate_aic: 15.713305491763887
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^3 u))+( ^3 ((u d y) / 0))+( ^2 u)+((u - 0) * (u - (0 - u)))
evaluate_aic: 19.713296451135506
Creating the ith pde, i= 16
a_pde.visualize(): (u d x)
evaluate_aic: 15.712291617214932
Creating the ith pde, i= 17
a_pde.visualize(): (( ^3 u) d y)
evaluate_aic: 15.713293090416766
inf
Creating the ith pde, i= 18
a_pde.visualize(): (u d^2 y)+( ^2 u)
evaluate_aic: 15.71329796226418
Creating the ith pde, i= 19
a_pde.visualize(): ( ^2 u)+(u / ((0 * u) - u))
evaluate_aic: 17.71328131408776
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
1 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
1 generation repeat cross over 4 times and mutation 2 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
2 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
2 generation repeat cross over 18 times and mutation 2 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
3 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
3 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
4 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
4 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
5 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
5 generation repeat cross over 20 times and mutation 0 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
6 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
6 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
7 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
7 generation repeat cross over 20 times and mutation 2 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
8 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
8 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
9 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
9 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
10 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
10 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
11 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
11 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
12 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
12 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
13 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
13 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
14 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
14 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
15 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
15 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
16 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
16 generation repeat cross over 20 times and mutation 0 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
17 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
17 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
18 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
18 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
19 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
19 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
20 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
20 generation repeat cross over 20 times and mutation 2 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
21 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
21 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
22 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
22 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
23 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
23 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
24 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
24 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
25 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
25 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
26 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
26 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
27 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
27 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
28 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
28 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
29 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
29 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
30 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
30 generation repeat cross over 20 times and mutation 1 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
31 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
31 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
32 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
32 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
33 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
33 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
34 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
34 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
35 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
35 generation repeat cross over 20 times and mutation 9 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
36 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
36 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
37 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
37 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
38 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
38 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
39 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
39 generation repeat cross over 20 times and mutation 8 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
40 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
40 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
41 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
41 generation repeat cross over 20 times and mutation 7 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
42 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
42 generation repeat cross over 20 times and mutation 9 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
43 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
43 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
44 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
44 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
45 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
45 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
46 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
46 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
47 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
47 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
48 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
48 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
49 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
49 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
50 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
50 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
51 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
51 generation repeat cross over 20 times and mutation 7 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
52 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
52 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
53 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
53 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
54 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
54 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
55 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
55 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
56 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
56 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
57 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
57 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
58 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
58 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
59 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
59 generation repeat cross over 20 times and mutation 7 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
60 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
60 generation repeat cross over 20 times and mutation 9 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
61 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
61 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
62 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
62 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
63 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
63 generation repeat cross over 20 times and mutation 7 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
64 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
64 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
65 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
65 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
66 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
66 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
67 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
67 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
68 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
68 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
69 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
69 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
70 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
70 generation repeat cross over 20 times and mutation 8 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
71 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
71 generation repeat cross over 20 times and mutation 7 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
72 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
72 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
73 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
73 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
74 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
74 generation repeat cross over 20 times and mutation 1 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
75 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
75 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
76 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
76 generation repeat cross over 20 times and mutation 2 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
77 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
77 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
78 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
78 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
79 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
79 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
80 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
80 generation repeat cross over 20 times and mutation 7 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
81 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
81 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
82 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
82 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
83 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
83 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
84 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
84 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
85 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
85 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
86 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
86 generation repeat cross over 20 times and mutation 3 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
87 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
87 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
88 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
88 generation repeat cross over 20 times and mutation 8 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
89 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
89 generation repeat cross over 20 times and mutation 2 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
90 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
90 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
91 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
91 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
92 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
92 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
93 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
93 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
94 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
94 generation repeat cross over 20 times and mutation 6 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
95 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
95 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
96 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
96 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
97 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
97 generation repeat cross over 20 times and mutation 1 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
98 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
98 generation repeat cross over 20 times and mutation 4 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
99 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
99 generation repeat cross over 20 times and mutation 5 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
100 generation best_aic & best Eq: 15.712291617214932, ((u d x) / (0 d x))
best concise Eq: 
100 generation repeat cross over 20 times and mutation 5 times
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^2 u)+((( ^2 u) * (u d^2 y)) * u)+( ^3 u)+( ^2 u)
evaluate_aic: 24.74323624799479
Creating the ith pde, i= 1
a_pde.visualize(): ( ^3 ( ^3 (u / u)))+(u d^2 y)+((u d y) / ((u d x) + u))
evaluate_aic: 22.743237018638983
Creating the ith pde, i= 2
a_pde.visualize(): (u d^2 x)+((( ^3 u) - u) d y)
evaluate_aic: 20.74324744274257
Creating the ith pde, i= 3
a_pde.visualize(): (((u d x) / ( ^2 u)) / u)+( ^2 u)+( ^2 ( ^2 u))
evaluate_aic: 18.743246684541624
Creating the ith pde, i= 4
a_pde.visualize(): (u d^2 y)+( ^3 ((u / u) - u))+( ^3 u)+(((u * u) * (u + u)) d x)
evaluate_aic: 24.74317317574105
Creating the ith pde, i= 5
a_pde.visualize(): (u * ( ^3 u))
evaluate_aic: 18.743246698780176
Creating the ith pde, i= 6
a_pde.visualize(): (((u d x) * (u / u)) / (u - (u + u)))+(u * u)+(u / ( ^2 u))
evaluate_aic: 20.74324487884088
Creating the ith pde, i= 7
a_pde.visualize(): ((( ^3 u) / (u * u)) / ((u / u) + ( ^2 u)))+(((u + u) + ( ^2 u)) / u)
evaluate_aic: 20.74323725675318
Creating the ith pde, i= 8
a_pde.visualize(): (u d x)+(u / u)+( ^3 u)
evaluate_aic: 22.742505990942846
Creating the ith pde, i= 9
a_pde.visualize(): ((u / u) * u)+((u d^2 x) / (u / u))+( ^3 u)+(u * ( ^3 ( ^2 u)))+( ^2 u)
evaluate_aic: 24.743230321847136
Creating the ith pde, i= 10
a_pde.visualize(): (u / ( ^3 u))+(u d^2 y)+((u d^2 y) d y)+(u d x)
evaluate_aic: 22.742519661159374
Creating the ith pde, i= 11
a_pde.visualize(): (u d y)
evaluate_aic: 18.7432482391161
Creating the ith pde, i= 12
a_pde.visualize(): (((u + u) d^2 y) * ( ^2 u))+(((u / u) / (u / u)) * ((u d^2 y) d y))+((u d y) d^2 y)+( ^2 (u d^2 y))+( ^3 u)
evaluate_aic: 26.743242019665917
Creating the ith pde, i= 13
a_pde.visualize(): (u d x)+( ^2 u)+(( ^2 (u * u)) d y)+((u d x) * ((u * u) - u))
evaluate_aic: 24.742410405215036
Creating the ith pde, i= 14
a_pde.visualize(): ( ^2 (u / (u / u)))
evaluate_aic: 18.743247669827717
Creating the ith pde, i= 15
a_pde.visualize(): (u / u)
evaluate_aic: 18.743237857410513
Creating the ith pde, i= 16
a_pde.visualize(): (( ^3 u) d x)+( ^2 ((u d x) * u))+(( ^3 u) / u)
evaluate_aic: 22.743164671255634
Creating the ith pde, i= 17
a_pde.visualize(): (u * ((u d^2 x) d x))
evaluate_aic: 18.743206157246423
Creating the ith pde, i= 18
a_pde.visualize(): (((u * u) / u) d y)+( ^3 u)+( ^2 u)+( ^3 ( ^2 u))+((u + u) * u)
evaluate_aic: 20.74324254714812
Creating the ith pde, i= 19
a_pde.visualize(): ( ^2 u)+(( ^3 ( ^3 u)) * u)
evaluate_aic: 20.743246977673866
here
mutating!!
mutating!!
mutating!!
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 193, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 69, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 143, in change
    new_eqs[i].mutate(p_mute)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 25, in mutate
    self.elements[i].mutate(p_mute)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\tree.py", line 144, in mutate
    assert iter < 100, "too many iterations for VARS"
           ^^^^^^^^^^
AssertionError: too many iterations for VARS
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - uy) / (u * u)))+( ^2 uy)+(ux * ux)+( ^2 ux)+((( ^2 uy) + (u - uy)) * (u d^2 y))
evaluate_aic: -0.019086795228141273
Creating the ith pde, i= 1
a_pde.visualize(): (uy d^2 x)+(ux * (u d y))+(u d^2 y)+(ux d y)
evaluate_aic: -0.3473400103051798
Creating the ith pde, i= 2
a_pde.visualize(): (uy d^2 y)+( ^3 uy)+( ^2 ( ^2 u))+((ux d y) / u)
evaluate_aic: -0.03149447156884455
Creating the ith pde, i= 3
a_pde.visualize(): ((( ^2 u) / uy) d x)
evaluate_aic: -0.01908675464577292
Creating the ith pde, i= 4
a_pde.visualize(): (((ux - uy) * uy) * (uy + uy))+(((u * uy) / (u - u)) / ((uy d x) / (uy / uy)))+((u d y) d^2 x)
evaluate_aic: -0.01909619419938502
Creating the ith pde, i= 5
a_pde.visualize(): ((( ^3 u) / (u * ux)) / ((u / uy) + ( ^2 ux)))+(u d x)+(uy * ((ux d^2 x) d y))
evaluate_aic: -0.01908798264619982
Creating the ith pde, i= 6
a_pde.visualize(): ( ^2 (ux - u))
evaluate_aic: -0.02645150420702258
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 (uy + uy)) d x)
evaluate_aic: -0.019115459007519542
Creating the ith pde, i= 8
a_pde.visualize(): ((u d^2 x) / ((u / uy) / (ux d y)))+( ^3 (ux d y))+(uy d x)+(( ^3 (ux d^2 y)) d^2 y)+(uy d x)
evaluate_aic: 3.1804365749611447
Creating the ith pde, i= 9
a_pde.visualize(): ( ^3 u)+(((u + u) d^2 y) * ( ^2 u))
evaluate_aic: 1.2458626664529504
Creating the ith pde, i= 10
a_pde.visualize(): ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: -0.35346945174931754
Creating the ith pde, i= 11
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+((( ^3 u) / uy) * (u + u))+(uy d x)
evaluate_aic: 1.2514082116379617
Creating the ith pde, i= 12
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 6.034109362266328
Creating the ith pde, i= 13
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((( ^3 ux) d^2 x) d^2 y)
evaluate_aic: -0.019233579942285584
Creating the ith pde, i= 14
a_pde.visualize(): (((uy - u) + (u - u)) * u)
evaluate_aic: -0.03349398198788767
Creating the ith pde, i= 15
a_pde.visualize(): ( ^3 u)+( ^2 uy)+(((ux d^2 y) d^2 y) d y)
evaluate_aic: 2.843399378770253
Creating the ith pde, i= 16
a_pde.visualize(): (uy d x)+(ux / u)+(ux / u)+((( ^3 uy) * uy) * ( ^2 u))
evaluate_aic: 4.780455314297658
Creating the ith pde, i= 17
a_pde.visualize(): (u d^2 x)+(u d^2 y)
evaluate_aic: 1.0916712787442564
Creating the ith pde, i= 18
a_pde.visualize(): (ux d^2 x)
evaluate_aic: -0.019086729025086013
Creating the ith pde, i= 19
a_pde.visualize(): (u d^2 y)+( ^2 u)+(ux * ux)+( ^3 ( ^2 ux))
evaluate_aic: 4.449816357122811
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 193, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 69, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 151, in change
    a_err, a_w = evaluate_mse(new_eqs[i])
                 ^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 128, in evaluate_mse
    tree_list[-i][j].cache = tree_list[-i][j].cache(child1.cache, child2.cache)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\configure.py", line 54, in divide
    down += eta
numpy.core._exceptions._UFuncOutputCastingError: Cannot cast ufunc 'add' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - uy) / (u * u)))+( ^2 uy)+(ux * ux)+( ^2 ux)+((( ^2 uy) + (u - uy)) * (u d^2 y))
evaluate_aic: -0.019086795228141273
Creating the ith pde, i= 1
a_pde.visualize(): (uy d^2 x)+(ux * (u d y))+(u d^2 y)+(ux d y)
evaluate_aic: -0.3473400103051798
Creating the ith pde, i= 2
a_pde.visualize(): (uy d^2 y)+( ^3 uy)+( ^2 ( ^2 u))+((ux d y) / u)
evaluate_aic: -0.03149447156884455
Creating the ith pde, i= 3
a_pde.visualize(): ((( ^2 u) / uy) d x)
evaluate_aic: -0.01908675464577292
Creating the ith pde, i= 4
a_pde.visualize(): (((ux - uy) * uy) * (uy + uy))+(((u * uy) / (u - u)) / ((uy d x) / (uy / uy)))+((u d y) d^2 x)
evaluate_aic: -0.01909619419938502
Creating the ith pde, i= 5
a_pde.visualize(): ((( ^3 u) / (u * ux)) / ((u / uy) + ( ^2 ux)))+(u d x)+(uy * ((ux d^2 x) d y))
evaluate_aic: -0.01908798264619982
Creating the ith pde, i= 6
a_pde.visualize(): ( ^2 (ux - u))
evaluate_aic: -0.02645150420702258
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 (uy + uy)) d x)
evaluate_aic: -0.019115459007519542
Creating the ith pde, i= 8
a_pde.visualize(): ((u d^2 x) / ((u / uy) / (ux d y)))+( ^3 (ux d y))+(uy d x)+(( ^3 (ux d^2 y)) d^2 y)+(uy d x)
evaluate_aic: 3.1804365749611447
Creating the ith pde, i= 9
a_pde.visualize(): ( ^3 u)+(((u + u) d^2 y) * ( ^2 u))
evaluate_aic: 1.2458626664529504
Creating the ith pde, i= 10
a_pde.visualize(): ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: -0.35346945174931754
Creating the ith pde, i= 11
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+((( ^3 u) / uy) * (u + u))+(uy d x)
evaluate_aic: 1.2514082116379617
Creating the ith pde, i= 12
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 6.034109362266328
Creating the ith pde, i= 13
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((( ^3 ux) d^2 x) d^2 y)
evaluate_aic: -0.019233579942285584
Creating the ith pde, i= 14
a_pde.visualize(): (((uy - u) + (u - u)) * u)
evaluate_aic: -0.03349398198788767
Creating the ith pde, i= 15
a_pde.visualize(): ( ^3 u)+( ^2 uy)+(((ux d^2 y) d^2 y) d y)
evaluate_aic: 2.843399378770253
Creating the ith pde, i= 16
a_pde.visualize(): (uy d x)+(ux / u)+(ux / u)+((( ^3 uy) * uy) * ( ^2 u))
evaluate_aic: 4.780455314297658
Creating the ith pde, i= 17
a_pde.visualize(): (u d^2 x)+(u d^2 y)
evaluate_aic: 1.0916712787442564
Creating the ith pde, i= 18
a_pde.visualize(): (ux d^2 x)
evaluate_aic: -0.019086729025086013
Creating the ith pde, i= 19
a_pde.visualize(): (u d^2 y)+( ^2 u)+(ux * ux)+( ^3 ( ^2 ux))
evaluate_aic: 4.449816357122811
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
1 generation best_aic & best Eq: -0.36398464024885624, ( ^3 ( ^3 (uy d^2 y)))+((uy d x) / ( ^2 (u / uy)))+(u d^2 x)
best concise Eq: -5.1907(u d^2 x)
We are close to the answer, pay attention
1 generation repeat cross over 0 times and mutation 0 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
2 generation best_aic & best Eq: -0.36398464024885624, ( ^3 ( ^3 (uy d^2 y)))+((uy d x) / ( ^2 (u / uy)))+(u d^2 x)
best concise Eq: -5.1907(u d^2 x)
We are close to the answer, pay attention
2 generation repeat cross over 4 times and mutation 0 times
here
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
mutating!!
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 193, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 69, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 157, in change
    new_eqs, new_mse = copy.deepcopy(self.eqs), copy.deepcopy(self.mses)
                       ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 196, in _deepcopy_list
    append(deepcopy(a, memo))
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 196, in _deepcopy_list
    append(deepcopy(a, memo))
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 196, in _deepcopy_list
    append(deepcopy(a, memo))
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 196, in _deepcopy_list
    append(deepcopy(a, memo))
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 143, in deepcopy
    y = copier(memo)
        ^^^^^^^^^^^^
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 38.1 MiB for an array with shape (100, 100, 500) and data type float64
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - uy) / (u * u)))+( ^2 uy)+(ux * ux)+( ^2 ux)+((( ^2 uy) + (u - uy)) * (u d^2 y))
evaluate_aic: 0.3375335605625034
Creating the ith pde, i= 1
a_pde.visualize(): (uy d^2 x)+(ux * (u d y))+(u d^2 y)+(ux d y)
evaluate_aic: 0.3273712642580944
Creating the ith pde, i= 2
a_pde.visualize(): (uy d^2 y)+( ^3 uy)+( ^2 ( ^2 u))+((ux d y) / u)
evaluate_aic: 0.3258496363237
Creating the ith pde, i= 3
a_pde.visualize(): ((( ^2 u) / uy) d x)
evaluate_aic: 0.3375335794644543
Creating the ith pde, i= 4
a_pde.visualize(): (((ux - uy) * uy) * (uy + uy))+(((u * uy) / (u - u)) / ((uy d x) / (uy / uy)))+((u d y) d^2 x)
evaluate_aic: 0.3375322371848979
Creating the ith pde, i= 5
a_pde.visualize(): ((( ^3 u) / (u * ux)) / ((u / uy) + ( ^2 ux)))+(u d x)+(uy * ((ux d^2 x) d y))
evaluate_aic: 0.3375317815764387
Creating the ith pde, i= 6
a_pde.visualize(): ( ^2 (ux - u))
evaluate_aic: 0.3346213540275904
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 (uy + uy)) d x)
evaluate_aic: 0.33753064721688086
Creating the ith pde, i= 8
a_pde.visualize(): ((u d^2 x) / ((u / uy) / (ux d y)))+( ^3 (ux d y))+(uy d x)+(( ^3 (ux d^2 y)) d^2 y)+(uy d x)
evaluate_aic: 0.337374097529737
Creating the ith pde, i= 9
a_pde.visualize(): ( ^3 u)+(((u + u) d^2 y) * ( ^2 u))
evaluate_aic: 1.8847696988537022
Creating the ith pde, i= 10
a_pde.visualize(): ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 0.2851729719281897
Creating the ith pde, i= 11
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+((( ^3 u) / uy) * (u + u))+(uy d x)
evaluate_aic: 0.3273712642580944
Creating the ith pde, i= 12
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 3.4759840913253974
Creating the ith pde, i= 13
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((( ^3 ux) d^2 x) d^2 y)
evaluate_aic: 0.33750986745114675
Creating the ith pde, i= 14
a_pde.visualize(): (((uy - u) + (u - u)) * u)
evaluate_aic: 0.33163901610428326
Creating the ith pde, i= 15
a_pde.visualize(): ( ^3 u)+( ^2 uy)+(((ux d^2 y) d^2 y) d y)
evaluate_aic: 1.8839925030724163
Creating the ith pde, i= 16
a_pde.visualize(): (uy d x)+(ux / u)+(ux / u)+((( ^3 uy) * uy) * ( ^2 u))
evaluate_aic: 5.137133020203628
Creating the ith pde, i= 17
a_pde.visualize(): (u d^2 x)+(u d^2 y)
evaluate_aic: 1.9209189779075286
Creating the ith pde, i= 18
a_pde.visualize(): (ux d^2 x)
evaluate_aic: 0.3375335248686362
Creating the ith pde, i= 19
a_pde.visualize(): (u d^2 y)+( ^2 u)+(ux * ux)+( ^3 ( ^2 ux))
evaluate_aic: 5.124250461093565
here
begin crossover
cross_over took 143.14 seconds
self.num is 20
0
1
mutate took 0.52 seconds
evaluate_mse took 9.76 seconds
2
mutate took 0.34 seconds
evaluate_mse took 11.17 seconds
3
mutate took 0.18 seconds
evaluate_mse took 7.94 seconds
4
mutate took 0.19 seconds
evaluate_mse took 5.89 seconds
5
mutate took 0.17 seconds
evaluate_mse took 4.04 seconds
6
mutate took 0.37 seconds
evaluate_mse took 7.81 seconds
7
mutate took 0.19 seconds
evaluate_mse took 6.01 seconds
8
mutate took 0.33 seconds
evaluate_mse took 9.76 seconds
9
mutate took 0.30 seconds
evaluate_mse took 7.54 seconds
10
mutate took 0.15 seconds
evaluate_mse took 7.44 seconds
11
mutate took 0.34 seconds
evaluate_mse took 8.23 seconds
12
mutate took 0.12 seconds
evaluate_mse took 3.17 seconds
13
mutate took 0.34 seconds
evaluate_mse took 8.67 seconds
14
mutate took 0.10 seconds
evaluate_mse took 2.49 seconds
15
mutate took 0.07 seconds
evaluate_mse took 1.75 seconds
16
mutate took 0.26 seconds
evaluate_mse took 6.15 seconds
17
mutate took 0.25 seconds
evaluate_mse took 5.75 seconds
18
mutate took 0.29 seconds
evaluate_mse took 10.51 seconds
19
mutate took 0.26 seconds
evaluate_mse took 11.18 seconds
here in mutations after all complete
change (mutation) took 153.73 seconds
the_best took 0.01 seconds
1 generation best_aic & best Eq: 0.2851729719281897, ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
best concise Eq: 92.1018( ^3 u)
1 generation repeat cross over 1 times and mutation 0 times
here
begin crossover
cross_over took 154.19 seconds
self.num is 20
0
1
mutate took 3.55 seconds
evaluate_mse took 10.94 seconds
2
mutate took 1.41 seconds
evaluate_mse took 11.39 seconds
3
mutate took 0.60 seconds
evaluate_mse took 11.26 seconds
4
mutate took 0.43 seconds
evaluate_mse took 10.80 seconds
5
mutate took 0.59 seconds
evaluate_mse took 13.37 seconds
6
mutate took 0.60 seconds
evaluate_mse took 11.57 seconds
7
mutate took 0.46 seconds
evaluate_mse took 10.18 seconds
8
mutate took 0.37 seconds
evaluate_mse took 11.11 seconds
9
mutate took 0.55 seconds
evaluate_mse took 11.04 seconds
10
mutate took 0.34 seconds
evaluate_mse took 10.20 seconds
11
mutate took 0.43 seconds
evaluate_mse took 10.27 seconds
12
mutate took 0.51 seconds
evaluate_mse took 13.61 seconds
13
mutate took 0.56 seconds
evaluate_mse took 12.41 seconds
14
mutate took 0.63 seconds
evaluate_mse took 9.86 seconds
15
mutate took 0.60 seconds
evaluate_mse took 11.04 seconds
16
mutate took 0.62 seconds
evaluate_mse took 10.52 seconds
17
mutate took 0.36 seconds
evaluate_mse took 4.17 seconds
18
mutate took 0.29 seconds
evaluate_mse took 5.04 seconds
19
mutate took 0.23 seconds
evaluate_mse took 5.87 seconds
here in mutations after all complete
change (mutation) took 316.56 seconds
the_best took 0.01 seconds
2 generation best_aic & best Eq: 0.2851729719281897, ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
best concise Eq: 92.1018( ^3 u)
2 generation repeat cross over 5 times and mutation 0 times
here
begin crossover
cross_over took 255.48 seconds
self.num is 20
0
1
mutate took 2.38 seconds
evaluate_mse took 8.94 seconds
2
mutate took 0.86 seconds
evaluate_mse took 6.79 seconds
3
mutate took 0.78 seconds
evaluate_mse took 7.50 seconds
4
mutate took 0.33 seconds
evaluate_mse took 7.37 seconds
5
mutate took 0.28 seconds
evaluate_mse took 7.38 seconds
6
mutate took 0.25 seconds
evaluate_mse took 8.35 seconds
7
mutate took 0.25 seconds
evaluate_mse took 8.11 seconds
8
mutate took 0.25 seconds
evaluate_mse took 7.89 seconds
9
mutate took 0.22 seconds
evaluate_mse took 7.52 seconds
10
mutate took 0.31 seconds
evaluate_mse took 8.56 seconds
11
mutate took 0.37 seconds
evaluate_mse took 7.46 seconds
12
mutate took 0.30 seconds
evaluate_mse took 7.39 seconds
13
mutate took 0.24 seconds
evaluate_mse took 7.71 seconds
14
mutate took 0.44 seconds
evaluate_mse took 6.80 seconds
15
mutate took 0.38 seconds
evaluate_mse took 8.47 seconds
16
mutate took 0.30 seconds
evaluate_mse took 8.13 seconds
17
mutate took 0.28 seconds
evaluate_mse took 6.31 seconds
18
mutate took 0.28 seconds
evaluate_mse took 7.38 seconds
19
mutate took 0.33 seconds
evaluate_mse took 5.54 seconds
here in mutations after all complete
change (mutation) took 338.78 seconds
the_best took 0.04 seconds
3 generation best_aic & best Eq: 0.2851729719281897, ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
best concise Eq: 92.1018( ^3 u)
3 generation repeat cross over 6 times and mutation 0 times
here
begin crossover
cross_over took 314.56 seconds
self.num is 20
0
1
mutate took 4.80 seconds
evaluate_mse took 10.33 seconds
2
mutate took 0.90 seconds
evaluate_mse took 7.88 seconds
3
mutate took 0.69 seconds
evaluate_mse took 7.71 seconds
4
mutate took 0.22 seconds
evaluate_mse took 7.12 seconds
5
mutate took 0.26 seconds
evaluate_mse took 7.30 seconds
6
mutate took 0.27 seconds
evaluate_mse took 8.69 seconds
7
mutate took 0.32 seconds
evaluate_mse took 7.56 seconds
8
mutate took 0.26 seconds
evaluate_mse took 8.93 seconds
9
mutate took 0.38 seconds
evaluate_mse took 8.20 seconds
10
mutate took 0.34 seconds
evaluate_mse took 8.60 seconds
11
mutate took 0.47 seconds
evaluate_mse took 8.09 seconds
12
mutate took 0.24 seconds
evaluate_mse took 7.82 seconds
13
mutate took 0.21 seconds
evaluate_mse took 7.09 seconds
14
mutate took 0.32 seconds
evaluate_mse took 8.93 seconds
15
mutate took 0.34 seconds
evaluate_mse took 8.51 seconds
16
mutate took 0.30 seconds
evaluate_mse took 6.06 seconds
17
mutate took 0.44 seconds
evaluate_mse took 7.85 seconds
18
mutate took 0.33 seconds
evaluate_mse took 7.98 seconds
19
mutate took 0.30 seconds
evaluate_mse took 8.88 seconds
here in mutations after all complete
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 214, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 73, in run
    self.change(self.p_mute, self.p_rep)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 178, in change
    new_eqs, new_mse = copy.deepcopy(self.eqs), copy.deepcopy(self.mses)
                       ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 196, in _deepcopy_list
    append(deepcopy(a, memo))
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 196, in _deepcopy_list
    append(deepcopy(a, memo))
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 196, in _deepcopy_list
    append(deepcopy(a, memo))
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 196, in _deepcopy_list
    append(deepcopy(a, memo))
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\copy.py", line 143, in deepcopy
    y = copier(memo)
        ^^^^^^^^^^^^
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 22.9 MiB for an array with shape (100, 100, 300) and data type float64
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.61 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - uy) / (u * u)))+( ^2 uy)+(ux * ux)+( ^2 ux)+((( ^2 uy) + (u - uy)) * (u d^2 y))
evaluate_aic: 2.340124435573917
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.13 seconds
Creating the ith pde, i= 1
a_pde.visualize(): (uy d^2 x)+(ux * (u d y))+(u d^2 y)+(ux d y)
evaluate_aic: 3.810910925218941
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.95 seconds
Creating the ith pde, i= 2
a_pde.visualize(): (uy d^2 y)+( ^3 uy)+( ^2 ( ^2 u))+((ux d y) / u)
evaluate_aic: 2.3041794923662327
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.49 seconds
Creating the ith pde, i= 3
a_pde.visualize(): ((( ^2 u) / uy) d x)
evaluate_aic: 2.3401245256615417
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
Creating the ith pde, i= 4
a_pde.visualize(): (((ux - uy) * uy) * (uy + uy))+(((u * uy) / (u - u)) / ((uy d x) / (uy / uy)))+((u d y) d^2 x)
evaluate_aic: 2.340115137012309
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
Creating the ith pde, i= 5
a_pde.visualize(): ((( ^3 u) / (u * ux)) / ((u / uy) + ( ^2 ux)))+(u d x)+(uy * ((ux d^2 x) d y))
evaluate_aic: 2.3401237584601233
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.50 seconds
Creating the ith pde, i= 6
a_pde.visualize(): ( ^2 (ux - u))
evaluate_aic: 2.3208211886347128
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 (uy + uy)) d x)
evaluate_aic: 2.340054613014963
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 2.41 seconds
Creating the ith pde, i= 8
a_pde.visualize(): ((u d^2 x) / ((u / uy) / (ux d y)))+( ^3 (ux d y))+(uy d x)+(( ^3 (ux d^2 y)) d^2 y)+(uy d x)
evaluate_aic: 3.9395601567852876
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.12 seconds
Creating the ith pde, i= 9
a_pde.visualize(): ( ^3 u)+(((u + u) d^2 y) * ( ^2 u))
evaluate_aic: 3.854326964814328
evaluate_mse took 0.23 seconds
deleting took 0.00 seconds
Train took 2.35 seconds
Creating the ith pde, i= 10
a_pde.visualize(): ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 2.268246583631459
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.63 seconds
Creating the ith pde, i= 11
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+((( ^3 u) / uy) * (u + u))+(uy d x)
evaluate_aic: 3.810910925218941
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.76 seconds
Creating the ith pde, i= 12
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 5.428496382448589
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 1.45 seconds
Creating the ith pde, i= 13
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((( ^3 ux) d^2 x) d^2 y)
evaluate_aic: 2.3400315644199043
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
Creating the ith pde, i= 14
a_pde.visualize(): (((uy - u) + (u - u)) * u)
evaluate_aic: 2.3110284837961617
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.63 seconds
Creating the ith pde, i= 15
a_pde.visualize(): ( ^3 u)+( ^2 uy)+(((ux d^2 y) d^2 y) d y)
evaluate_aic: 5.464009805488578
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.84 seconds
Creating the ith pde, i= 16
a_pde.visualize(): (uy d x)+(ux / u)+(ux / u)+((( ^3 uy) * uy) * ( ^2 u))
evaluate_aic: 2.3317308068125864
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
Creating the ith pde, i= 17
a_pde.visualize(): (u d^2 x)+(u d^2 y)
evaluate_aic: 3.7779250601351912
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.50 seconds
Creating the ith pde, i= 18
a_pde.visualize(): (ux d^2 x)
evaluate_aic: 2.340124406445905
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.99 seconds
Creating the ith pde, i= 19
a_pde.visualize(): (u d^2 y)+( ^2 u)+(ux * ux)+( ^3 ( ^2 ux))
evaluate_aic: 7.00898090679335
here
begin crossover
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.38 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.58 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.36 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.73 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.51 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 2.64 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 1.56 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.75 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.34 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.58 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.49 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.57 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 1.51 seconds
cross_over took 29.60 seconds
self.num is 20
0
1
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.02 seconds
Train took 1.99 seconds
evaluate_mse took 2.15 seconds
2
mutate took 0.09 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.62 seconds
evaluate_mse took 2.78 seconds
3
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.04 seconds
evaluate_mse took 2.17 seconds
4
mutate took 0.06 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 1.82 seconds
evaluate_mse took 2.02 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.23 seconds
evaluate_mse took 2.42 seconds
6
mutate took 0.05 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.66 seconds
evaluate_mse took 0.75 seconds
7
mutate took 0.06 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.69 seconds
evaluate_mse took 1.90 seconds
8
mutate took 0.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.53 seconds
evaluate_mse took 1.66 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.64 seconds
10
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.17 seconds
11
mutate took 0.07 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 1.62 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.09 seconds
13
mutate took 0.09 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.48 seconds
evaluate_mse took 1.57 seconds
14
mutate took 0.08 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 2.00 seconds
evaluate_mse took 2.19 seconds
15
mutate took 0.00 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
evaluate_mse took 0.64 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
evaluate_mse took 1.59 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.43 seconds
evaluate_mse took 1.61 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.51 seconds
evaluate_mse took 0.56 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.52 seconds
evaluate_mse took 1.63 seconds
here in mutations after all complete
change (mutation) took 32.05 seconds
the_best took 0.00 seconds
1 generation best_aic & best Eq: 2.2395776816866118, ( ^2 (uy + ux))+(((u - ux) d^2 x) d^2 y)
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
best concise Eq: -15.4543(((u - ux) d^2 x) d^2 y)
1 generation repeat cross over 0 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 2.23 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.14 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.46 seconds
evaluate_mse took 0.23 seconds
deleting took 0.00 seconds
Train took 2.19 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.29 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.49 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.44 seconds
evaluate_mse took 0.23 seconds
deleting took 0.00 seconds
Train took 2.64 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 2.71 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.84 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.78 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.08 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 2.48 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.43 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.48 seconds
cross_over took 38.35 seconds
self.num is 20
0
1
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.17 seconds
2
mutate took 0.02 seconds
3
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
4
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.72 seconds
evaluate_mse took 1.86 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.96 seconds
evaluate_mse took 2.16 seconds
6
mutate took 0.08 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.77 seconds
evaluate_mse took 1.91 seconds
7
mutate took 0.05 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.87 seconds
evaluate_mse took 2.02 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.01 seconds
deleting took 0.01 seconds
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
9
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.55 seconds
evaluate_mse took 0.67 seconds
10
mutate took 0.08 seconds
evaluate_mse took 0.22 seconds
deleting took 0.02 seconds
Train took 2.28 seconds
evaluate_mse took 2.54 seconds
11
mutate took 0.06 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.71 seconds
evaluate_mse took 2.89 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.20 seconds
deleting took 0.02 seconds
Train took 1.73 seconds
evaluate_mse took 1.96 seconds
13
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.82 seconds
evaluate_mse took 1.95 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 1.29 seconds
evaluate_mse took 1.46 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 1.81 seconds
evaluate_mse took 2.00 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 1.25 seconds
evaluate_mse took 1.49 seconds
17
mutate took 0.07 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 1.44 seconds
evaluate_mse took 1.63 seconds
18
mutate took 0.02 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.45 seconds
evaluate_mse took 0.53 seconds
here in mutations after all complete
change (mutation) took 30.59 seconds
the_best took 0.00 seconds
2 generation best_aic & best Eq: 2.232018709516111, (uy d^2 y)+((uy + y) / ( ^2 (u - uy)))+((ux d^2 x) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.22 seconds
best concise Eq: -13.0448((ux d^2 x) d x)
2 generation repeat cross over 1 times and mutation 2 times
here
begin crossover
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.22 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.96 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.22 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.84 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.46 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.41 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.39 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.77 seconds
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 1.81 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.67 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 1.96 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.49 seconds
cross_over took 26.37 seconds
self.num is 20
0
1
mutate took 0.21 seconds
evaluate_mse took 0.30 seconds
deleting took 0.03 seconds
Train took 2.65 seconds
evaluate_mse took 3.05 seconds
2
mutate took 0.13 seconds
evaluate_mse took 0.31 seconds
deleting took 0.00 seconds
Train took 2.84 seconds
evaluate_mse took 3.27 seconds
3
mutate took 0.07 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.74 seconds
evaluate_mse took 2.03 seconds
4
mutate took 0.17 seconds
evaluate_mse took 0.23 seconds
deleting took 0.00 seconds
Train took 1.83 seconds
evaluate_mse took 2.14 seconds
5
mutate took 0.21 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.75 seconds
evaluate_mse took 2.99 seconds
6
mutate took 0.17 seconds
evaluate_mse took 0.02 seconds
deleting took 0.01 seconds
Train took 1.62 seconds
evaluate_mse took 1.71 seconds
7
mutate took 0.10 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
evaluate_mse took 1.53 seconds
8
mutate took 0.20 seconds
evaluate_mse took 0.39 seconds
deleting took 0.02 seconds
Train took 1.41 seconds
evaluate_mse took 1.93 seconds
9
mutate took 0.09 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 0.88 seconds
evaluate_mse took 1.05 seconds
10
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.40 seconds
evaluate_mse took 2.54 seconds
11
mutate took 0.06 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.30 seconds
evaluate_mse took 1.48 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.80 seconds
evaluate_mse took 1.88 seconds
13
mutate took 0.05 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
evaluate_mse took 1.52 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 2.10 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.95 seconds
evaluate_mse took 2.10 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
evaluate_mse took 0.58 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.48 seconds
evaluate_mse took 2.68 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.45 seconds
evaluate_mse took 2.65 seconds
here in mutations after all complete
change (mutation) took 56.41 seconds
the_best took 0.01 seconds
3 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
3 generation repeat cross over 3 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.80 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.29 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
evaluate_mse took 0.07 seconds
deleting took 0.01 seconds
Train took 1.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.23 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.18 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.26 seconds
cross_over took 15.60 seconds
self.num is 20
0
1
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 1.04 seconds
2
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.03 seconds
3
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.00 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.02 seconds
5
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
evaluate_mse took 0.94 seconds
6
mutate took 0.05 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.90 seconds
evaluate_mse took 0.98 seconds
7
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.09 seconds
8
mutate took 0.05 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.85 seconds
evaluate_mse took 1.02 seconds
9
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.18 seconds
evaluate_mse took 1.28 seconds
10
mutate took 0.03 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.27 seconds
evaluate_mse took 1.41 seconds
11
mutate took 0.04 seconds
evaluate_mse took 0.15 seconds
deleting took 0.02 seconds
Train took 0.93 seconds
evaluate_mse took 1.12 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.40 seconds
evaluate_mse took 1.53 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.50 seconds
evaluate_mse took 0.57 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
Train took 0.91 seconds
evaluate_mse took 1.12 seconds
15
mutate took 0.08 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.34 seconds
evaluate_mse took 1.46 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.07 seconds
deleting took 0.01 seconds
Train took 0.49 seconds
evaluate_mse took 0.60 seconds
17
mutate took 0.07 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.39 seconds
evaluate_mse took 1.51 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
evaluate_mse took 0.90 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.03 seconds
Train took 0.90 seconds
evaluate_mse took 1.13 seconds
here in mutations after all complete
change (mutation) took 35.55 seconds
the_best took 0.01 seconds
4 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
4 generation repeat cross over 10 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.48 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.82 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
cross_over took 15.53 seconds
self.num is 20
0
1
mutate took 0.04 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.57 seconds
evaluate_mse took 0.72 seconds
2
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.16 seconds
3
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.90 seconds
evaluate_mse took 0.98 seconds
4
mutate took 0.05 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.62 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.02 seconds
Train took 0.49 seconds
evaluate_mse took 0.57 seconds
6
mutate took 0.02 seconds
7
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 1.00 seconds
8
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 0.93 seconds
9
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 1.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.49 seconds
evaluate_mse took 0.59 seconds
11
mutate took 0.04 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.49 seconds
evaluate_mse took 0.62 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.16 seconds
evaluate_mse took 1.35 seconds
13
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.36 seconds
evaluate_mse took 1.48 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 1.26 seconds
evaluate_mse took 1.40 seconds
15
mutate took 0.04 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.07 seconds
16
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.90 seconds
evaluate_mse took 1.05 seconds
17
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.36 seconds
evaluate_mse took 1.42 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.82 seconds
evaluate_mse took 0.91 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.56 seconds
here in mutations after all complete
change (mutation) took 36.15 seconds
the_best took 0.00 seconds
5 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
5 generation repeat cross over 8 times and mutation 1 times
here
begin crossover
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.48 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
cross_over took 15.59 seconds
self.num is 20
0
1
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.25 seconds
evaluate_mse took 1.30 seconds
2
mutate took 0.10 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.24 seconds
3
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.09 seconds
4
mutate took 0.04 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.15 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.50 seconds
evaluate_mse took 0.64 seconds
6
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 0.98 seconds
7
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
evaluate_mse took 0.97 seconds
8
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.52 seconds
9
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.11 seconds
10
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
evaluate_mse took 0.66 seconds
11
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.84 seconds
evaluate_mse took 0.94 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.83 seconds
evaluate_mse took 0.94 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.84 seconds
evaluate_mse took 0.93 seconds
14
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.82 seconds
evaluate_mse took 0.90 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 1.05 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
evaluate_mse took 0.95 seconds
17
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.48 seconds
evaluate_mse took 0.63 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 0.96 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.55 seconds
evaluate_mse took 0.70 seconds
here in mutations after all complete
change (mutation) took 42.78 seconds
the_best took 0.01 seconds
6 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
6 generation repeat cross over 11 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
cross_over took 13.54 seconds
self.num is 20
0
1
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.18 seconds
evaluate_mse took 1.31 seconds
2
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.14 seconds
evaluate_mse took 1.35 seconds
3
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.57 seconds
evaluate_mse took 0.73 seconds
4
mutate took 0.87 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.11 seconds
5
mutate took 0.05 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.51 seconds
evaluate_mse took 0.69 seconds
6
mutate took 0.04 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.11 seconds
7
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 1.09 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.05 seconds
9
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.02 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.83 seconds
evaluate_mse took 0.90 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 0.00 seconds
evaluate_mse took 0.17 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.00 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 0.98 seconds
14
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.10 seconds
15
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 1.04 seconds
16
mutate took 0.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.10 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.99 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
evaluate_mse took 0.92 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.03 seconds
here in mutations after all complete
change (mutation) took 48.45 seconds
the_best took 0.00 seconds
7 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
7 generation repeat cross over 14 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
cross_over took 15.15 seconds
self.num is 20
0
1
mutate took 0.06 seconds
evaluate_mse took 0.87 seconds
deleting took 0.00 seconds
Train took 2.64 seconds
evaluate_mse took 3.54 seconds
2
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 1.12 seconds
3
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.50 seconds
evaluate_mse took 0.63 seconds
4
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 1.02 seconds
5
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.85 seconds
evaluate_mse took 0.99 seconds
6
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 1.02 seconds
7
mutate took 0.07 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
evaluate_mse took 0.98 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.01 seconds
9
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 1.00 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.99 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.59 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.90 seconds
evaluate_mse took 0.96 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 1.08 seconds
14
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.12 seconds
15
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.01 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.01 seconds
17
mutate took 0.05 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 0.98 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.03 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.99 seconds
here in mutations after all complete
change (mutation) took 50.83 seconds
the_best took 0.01 seconds
8 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
8 generation repeat cross over 17 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.84 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
cross_over took 15.41 seconds
self.num is 20
0
1
mutate took 0.27 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.22 seconds
evaluate_mse took 1.95 seconds
2
mutate took 0.11 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.59 seconds
evaluate_mse took 0.72 seconds
3
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.23 seconds
4
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.12 seconds
5
mutate took 0.05 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 1.05 seconds
6
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
evaluate_mse took 0.97 seconds
7
mutate took 0.04 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.90 seconds
evaluate_mse took 0.97 seconds
8
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.05 seconds
9
mutate took 0.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 0.91 seconds
evaluate_mse took 1.02 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.10 seconds
11
mutate took 0.06 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 1.00 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.90 seconds
evaluate_mse took 0.96 seconds
13
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.49 seconds
evaluate_mse took 0.65 seconds
14
mutate took 0.06 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.50 seconds
evaluate_mse took 0.63 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
evaluate_mse took 0.91 seconds
16
mutate took 0.07 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.15 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.09 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.99 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.09 seconds
here in mutations after all complete
change (mutation) took 53.51 seconds
the_best took 0.01 seconds
9 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
9 generation repeat cross over 17 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
cross_over took 26.87 seconds
self.num is 20
0
1
mutate took 0.57 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.91 seconds
2
mutate took 0.13 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.14 seconds
evaluate_mse took 1.24 seconds
3
mutate took 0.22 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.25 seconds
4
mutate took 0.15 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.18 seconds
evaluate_mse took 1.30 seconds
5
mutate took 0.14 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.58 seconds
evaluate_mse took 0.74 seconds
6
mutate took 0.21 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.12 seconds
7
mutate took 0.10 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.07 seconds
8
mutate took 0.08 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 0.63 seconds
evaluate_mse took 0.82 seconds
9
mutate took 0.06 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.56 seconds
evaluate_mse took 0.69 seconds
10
mutate took 0.08 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.61 seconds
evaluate_mse took 0.76 seconds
11
mutate took 0.08 seconds
evaluate_mse took 0.16 seconds
deleting took 0.01 seconds
Train took 0.62 seconds
evaluate_mse took 0.82 seconds
12
mutate took 0.08 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.21 seconds
13
mutate took 0.08 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.08 seconds
14
mutate took 0.07 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.13 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.10 seconds
16
mutate took 0.09 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.17 seconds
17
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.12 seconds
evaluate_mse took 1.27 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.12 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.19 seconds
deleting took 0.01 seconds
Train took 0.00 seconds
evaluate_mse took 0.23 seconds
here in mutations after all complete
change (mutation) took 48.02 seconds
the_best took 0.01 seconds
10 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
10 generation repeat cross over 15 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
cross_over took 26.92 seconds
self.num is 20
0
1
mutate took 1.26 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.36 seconds
2
mutate took 0.16 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.57 seconds
evaluate_mse took 0.70 seconds
3
mutate took 0.20 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.57 seconds
evaluate_mse took 0.70 seconds
4
mutate took 0.14 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
5
mutate took 0.20 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.17 seconds
6
mutate took 0.16 seconds
evaluate_mse took 0.07 seconds
deleting took 0.01 seconds
Train took 0.59 seconds
evaluate_mse took 0.68 seconds
7
mutate took 0.16 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.18 seconds
8
mutate took 0.14 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.13 seconds
9
mutate took 0.07 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 1.01 seconds
10
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 1.03 seconds
11
mutate took 0.08 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.08 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.06 seconds
13
mutate took 0.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.11 seconds
14
mutate took 0.09 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.50 seconds
evaluate_mse took 0.66 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.55 seconds
evaluate_mse took 0.72 seconds
16
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.13 seconds
17
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.54 seconds
evaluate_mse took 0.68 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 1.04 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.09 seconds
here in mutations after all complete
change (mutation) took 84.58 seconds
the_best took 0.00 seconds
11 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
11 generation repeat cross over 17 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.06 seconds
deleting took 0.03 seconds
Train took 1.02 seconds
cross_over took 45.76 seconds
self.num is 20
0
1
mutate took 0.34 seconds
evaluate_mse took 0.16 seconds
deleting took 0.02 seconds
Train took 0.78 seconds
evaluate_mse took 1.41 seconds
2
mutate took 0.17 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.17 seconds
3
mutate took 0.17 seconds
evaluate_mse took 0.08 seconds
deleting took 0.01 seconds
Train took 0.52 seconds
evaluate_mse took 0.62 seconds
4
mutate took 0.07 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.61 seconds
5
mutate took 0.14 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.11 seconds
6
mutate took 0.16 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.63 seconds
evaluate_mse took 0.79 seconds
7
mutate took 0.15 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.17 seconds
8
mutate took 0.22 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.12 seconds
9
mutate took 0.14 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.21 seconds
10
mutate took 0.17 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.20 seconds
11
mutate took 0.17 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.13 seconds
12
mutate took 0.08 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.10 seconds
13
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.05 seconds
14
mutate took 0.08 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.98 seconds
15
mutate took 0.07 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.09 seconds
16
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.04 seconds
17
mutate took 0.07 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.01 seconds
Train took 0.55 seconds
evaluate_mse took 0.65 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.69 seconds
here in mutations after all complete
change (mutation) took 80.46 seconds
the_best took 0.03 seconds
12 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
12 generation repeat cross over 19 times and mutation 1 times
here
begin crossover
evaluate_mse took 0.04 seconds
deleting took 0.01 seconds
Train took 1.00 seconds
cross_over took 42.88 seconds
self.num is 20
0
1
mutate took 1.00 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.13 seconds
evaluate_mse took 1.61 seconds
2
mutate took 0.19 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.12 seconds
evaluate_mse took 1.21 seconds
3
mutate took 0.21 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.18 seconds
4
mutate took 0.18 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.14 seconds
5
mutate took 0.12 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.51 seconds
evaluate_mse took 0.64 seconds
6
mutate took 0.09 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.12 seconds
evaluate_mse took 1.20 seconds
7
mutate took 0.07 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.24 seconds
8
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.20 seconds
9
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.13 seconds
10
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.59 seconds
evaluate_mse took 0.74 seconds
11
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.19 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.15 seconds
13
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.23 seconds
14
mutate took 0.07 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.14 seconds
evaluate_mse took 1.23 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.26 seconds
16
mutate took 0.08 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.11 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.02 seconds
Train took 0.59 seconds
evaluate_mse took 0.72 seconds
18
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.27 seconds
19
mutate took 0.08 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.62 seconds
evaluate_mse took 0.78 seconds
here in mutations after all complete
change (mutation) took 99.39 seconds
the_best took 0.04 seconds
13 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
13 generation repeat cross over 19 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.05 seconds
deleting took 0.01 seconds
Train took 0.96 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
cross_over took 51.64 seconds
self.num is 20
0
1
mutate took 1.17 seconds
evaluate_mse took 0.16 seconds
deleting took 0.02 seconds
Train took 0.68 seconds
evaluate_mse took 1.93 seconds
2
mutate took 0.15 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.20 seconds
3
mutate took 0.19 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.09 seconds
4
mutate took 0.18 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.15 seconds
5
mutate took 0.15 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.18 seconds
6
mutate took 0.16 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.14 seconds
7
mutate took 0.15 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.09 seconds
8
mutate took 0.18 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.09 seconds
9
mutate took 0.14 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.07 seconds
10
mutate took 0.14 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 0.56 seconds
evaluate_mse took 0.71 seconds
11
mutate took 0.14 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.13 seconds
12
mutate took 0.18 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.61 seconds
evaluate_mse took 0.74 seconds
13
mutate took 0.12 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.15 seconds
14
mutate took 0.10 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.11 seconds
15
mutate took 0.17 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.13 seconds
16
mutate took 0.11 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.08 seconds
17
mutate took 0.15 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.08 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 0.97 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 1.02 seconds
here in mutations after all complete
change (mutation) took 94.27 seconds
the_best took 0.03 seconds
14 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
14 generation repeat cross over 17 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 1.00 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.04 seconds
deleting took 0.01 seconds
Train took 0.85 seconds
cross_over took 58.52 seconds
self.num is 20
0
1
mutate took 0.97 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 1.30 seconds
evaluate_mse took 1.54 seconds
2
mutate took 0.63 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.57 seconds
evaluate_mse took 1.66 seconds
3
mutate took 0.18 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.13 seconds
evaluate_mse took 1.17 seconds
4
mutate took 0.24 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.12 seconds
5
mutate took 0.20 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.11 seconds
6
mutate took 0.16 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.09 seconds
7
mutate took 0.13 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.11 seconds
8
mutate took 0.16 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.13 seconds
evaluate_mse took 1.21 seconds
9
mutate took 0.16 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.24 seconds
10
mutate took 0.15 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.58 seconds
evaluate_mse took 0.70 seconds
11
mutate took 0.13 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.12 seconds
evaluate_mse took 1.31 seconds
12
mutate took 0.11 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.26 seconds
13
mutate took 0.18 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.51 seconds
evaluate_mse took 0.62 seconds
14
mutate took 0.17 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.19 seconds
15
mutate took 0.16 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.20 seconds
16
mutate took 0.10 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.17 seconds
17
mutate took 0.15 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.09 seconds
18
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.00 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.04 seconds
here in mutations after all complete
change (mutation) took 114.25 seconds
the_best took 0.02 seconds
15 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
15 generation repeat cross over 17 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.02 seconds
Train took 1.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
cross_over took 69.84 seconds
self.num is 20
0
1
mutate took 1.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.02 seconds
Train took 0.69 seconds
evaluate_mse took 0.94 seconds
2
mutate took 0.21 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.16 seconds
3
mutate took 0.16 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.16 seconds
4
mutate took 0.31 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 2.03 seconds
5
mutate took 0.15 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.17 seconds
6
mutate took 0.11 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.15 seconds
7
mutate took 0.13 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.11 seconds
8
mutate took 0.15 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.10 seconds
9
mutate took 0.18 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.12 seconds
10
mutate took 0.15 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.15 seconds
11
mutate took 0.15 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.56 seconds
evaluate_mse took 0.72 seconds
12
mutate took 0.16 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.10 seconds
13
mutate took 0.21 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.12 seconds
14
mutate took 0.14 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.07 seconds
15
mutate took 0.14 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
Train took 0.60 seconds
evaluate_mse took 0.80 seconds
16
mutate took 0.15 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.11 seconds
17
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 1.00 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.08 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.17 seconds
here in mutations after all complete
change (mutation) took 122.77 seconds
the_best took 0.01 seconds
16 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
16 generation repeat cross over 15 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.16 seconds
deleting took 0.01 seconds
Train took 1.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.85 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
cross_over took 76.92 seconds
self.num is 20
0
1
mutate took 0.33 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 1.11 seconds
evaluate_mse took 2.47 seconds
2
mutate took 0.67 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.56 seconds
evaluate_mse took 0.69 seconds
3
mutate took 0.47 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.61 seconds
evaluate_mse took 0.73 seconds
4
mutate took 0.15 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.12 seconds
5
mutate took 0.18 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.56 seconds
evaluate_mse took 0.75 seconds
6
mutate took 0.20 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.59 seconds
evaluate_mse took 0.72 seconds
7
mutate took 0.19 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.14 seconds
8
mutate took 0.20 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.13 seconds
9
mutate took 0.17 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.15 seconds
10
mutate took 0.10 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.07 seconds
11
mutate took 0.17 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.12 seconds
12
mutate took 0.11 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.57 seconds
evaluate_mse took 0.69 seconds
13
mutate took 0.09 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.13 seconds
14
mutate took 0.12 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.18 seconds
15
mutate took 0.12 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.00 seconds
evaluate_mse took 0.18 seconds
16
mutate took 0.15 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 0.55 seconds
evaluate_mse took 0.69 seconds
17
mutate took 0.20 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.12 seconds
18
mutate took 0.20 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.07 seconds
19
mutate took 0.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.06 seconds
here in mutations after all complete
change (mutation) took 140.40 seconds
the_best took 0.04 seconds
17 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
17 generation repeat cross over 12 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.08 seconds
deleting took 0.03 seconds
Train took 1.23 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
cross_over took 83.07 seconds
self.num is 20
0
1
mutate took 1.84 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.20 seconds
evaluate_mse took 1.37 seconds
2
mutate took 0.13 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.08 seconds
3
mutate took 0.17 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.13 seconds
4
mutate took 0.30 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.11 seconds
5
mutate took 0.20 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.08 seconds
6
mutate took 0.18 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.64 seconds
7
mutate took 0.14 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.15 seconds
8
mutate took 0.13 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.55 seconds
evaluate_mse took 0.68 seconds
9
mutate took 0.17 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.58 seconds
evaluate_mse took 0.71 seconds
10
mutate took 0.13 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.19 seconds
11
mutate took 0.11 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.11 seconds
13
mutate took 0.14 seconds
evaluate_mse took 0.07 seconds
deleting took 0.01 seconds
Train took 1.10 seconds
evaluate_mse took 1.20 seconds
14
mutate took 0.13 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.15 seconds
15
mutate took 0.14 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.10 seconds
16
mutate took 0.15 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.66 seconds
17
mutate took 0.17 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.06 seconds
18
mutate took 0.17 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.13 seconds
19
mutate took 0.13 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.04 seconds
here in mutations after all complete
change (mutation) took 146.18 seconds
the_best took 0.04 seconds
18 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
18 generation repeat cross over 18 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.05 seconds
deleting took 0.01 seconds
Train took 0.90 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
cross_over took 87.78 seconds
self.num is 20
0
1
mutate took 0.40 seconds
evaluate_mse took 0.28 seconds
deleting took 0.04 seconds
Train took 1.41 seconds
evaluate_mse took 2.01 seconds
2
mutate took 0.37 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.26 seconds
3
mutate took 0.13 seconds
evaluate_mse took 0.06 seconds
deleting took 0.01 seconds
Train took 1.07 seconds
evaluate_mse took 1.57 seconds
4
mutate took 1.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.18 seconds
5
mutate took 0.16 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.11 seconds
6
mutate took 0.08 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.18 seconds
7
mutate took 0.20 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.13 seconds
8
mutate took 0.13 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.16 seconds
9
mutate took 0.15 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.13 seconds
10
mutate took 0.10 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.59 seconds
evaluate_mse took 0.70 seconds
11
mutate took 0.11 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.10 seconds
12
mutate took 0.13 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.08 seconds
13
mutate took 0.12 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.07 seconds
14
mutate took 0.11 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.11 seconds
15
mutate took 0.16 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.11 seconds
16
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.90 seconds
evaluate_mse took 1.07 seconds
17
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.06 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
evaluate_mse took 0.64 seconds
19
mutate took 0.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.03 seconds
here in mutations after all complete
change (mutation) took 172.24 seconds
the_best took 0.02 seconds
19 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
19 generation repeat cross over 13 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.02 seconds
Train took 0.98 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.90 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
cross_over took 90.50 seconds
self.num is 20
0
1
mutate took 1.38 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.17 seconds
evaluate_mse took 1.29 seconds
2
mutate took 0.22 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.59 seconds
3
mutate took 0.17 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.10 seconds
4
mutate took 0.17 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.13 seconds
5
mutate took 0.10 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.07 seconds
6
mutate took 0.15 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.06 seconds
7
mutate took 0.13 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.17 seconds
8
mutate took 0.17 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.11 seconds
9
mutate took 0.13 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.14 seconds
10
mutate took 0.22 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.14 seconds
11
mutate took 0.12 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.16 seconds
12
mutate took 0.15 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.17 seconds
13
mutate took 0.15 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.17 seconds
14
mutate took 0.16 seconds
evaluate_mse took 0.08 seconds
deleting took 0.01 seconds
Train took 0.56 seconds
evaluate_mse took 0.67 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.15 seconds
16
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.09 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.13 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.10 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.02 seconds
here in mutations after all complete
change (mutation) took 148.47 seconds
the_best took 0.01 seconds
20 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
20 generation repeat cross over 15 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.02 seconds
Train took 1.07 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.83 seconds
cross_over took 95.88 seconds
self.num is 20
0
1
mutate took 2.20 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 0.67 seconds
evaluate_mse took 0.99 seconds
2
mutate took 0.13 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.60 seconds
evaluate_mse took 1.19 seconds
3
mutate took 0.16 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 1.01 seconds
4
mutate took 0.14 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.16 seconds
5
mutate took 0.19 seconds
evaluate_mse took 0.02 seconds
deleting took 0.01 seconds
Train took 1.09 seconds
evaluate_mse took 1.16 seconds
6
mutate took 0.19 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.60 seconds
evaluate_mse took 0.72 seconds
7
mutate took 0.15 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.10 seconds
8
mutate took 0.15 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.24 seconds
9
mutate took 0.14 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.02 seconds
10
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
evaluate_mse took 0.65 seconds
11
mutate took 0.10 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.08 seconds
12
mutate took 0.12 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.08 seconds
13
mutate took 0.20 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.15 seconds
14
mutate took 0.17 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.21 seconds
15
mutate took 0.16 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.17 seconds
16
mutate took 0.17 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.15 seconds
17
mutate took 0.10 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.15 seconds
18
mutate took 0.12 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 1.13 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.10 seconds
here in mutations after all complete
change (mutation) took 183.55 seconds
the_best took 0.03 seconds
21 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
21 generation repeat cross over 15 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.09 seconds
deleting took 0.02 seconds
Train took 1.13 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
cross_over took 113.51 seconds
self.num is 20
0
1
mutate took 0.60 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 1.13 seconds
evaluate_mse took 3.52 seconds
2
mutate took 0.21 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.08 seconds
3
mutate took 0.14 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.17 seconds
4
mutate took 0.16 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.13 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.22 seconds
6
mutate took 0.07 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.12 seconds
7
mutate took 0.14 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.16 seconds
8
mutate took 0.10 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.13 seconds
evaluate_mse took 1.30 seconds
9
mutate took 0.12 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.19 seconds
10
mutate took 0.18 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.17 seconds
11
mutate took 0.15 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.13 seconds
12
mutate took 0.13 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.17 seconds
13
mutate took 0.11 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.08 seconds
14
mutate took 0.13 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.14 seconds
15
mutate took 0.14 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.12 seconds
evaluate_mse took 1.20 seconds
16
mutate took 0.18 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.17 seconds
17
mutate took 0.05 seconds
18
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 1.07 seconds
evaluate_mse took 1.24 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
evaluate_mse took 1.04 seconds
here in mutations after all complete
change (mutation) took 180.09 seconds
the_best took 0.02 seconds
22 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
22 generation repeat cross over 13 times and mutation 1 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.02 seconds
Train took 0.99 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
cross_over took 114.48 seconds
self.num is 20
0
1
mutate took 1.42 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.21 seconds
evaluate_mse took 1.78 seconds
2
mutate took 0.18 seconds
evaluate_mse took 0.06 seconds
deleting took 0.01 seconds
Train took 0.57 seconds
evaluate_mse took 0.69 seconds
3
mutate took 0.13 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 0.53 seconds
evaluate_mse took 0.65 seconds
4
mutate took 0.17 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.15 seconds
5
mutate took 0.14 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.09 seconds
6
mutate took 0.11 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 1.12 seconds
7
mutate took 0.12 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 1.16 seconds
evaluate_mse took 1.30 seconds
8
mutate took 0.19 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.13 seconds
evaluate_mse took 1.20 seconds
9
mutate took 0.13 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.15 seconds
10
mutate took 0.16 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.19 seconds
evaluate_mse took 1.23 seconds
11
mutate took 0.17 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.12 seconds
12
mutate took 0.19 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.16 seconds
evaluate_mse took 1.22 seconds
13
mutate took 0.12 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.16 seconds
evaluate_mse took 1.29 seconds
14
mutate took 0.15 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.17 seconds
evaluate_mse took 1.26 seconds
15
mutate took 0.16 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.15 seconds
evaluate_mse took 1.22 seconds
16
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 1.14 seconds
17
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
evaluate_mse took 0.65 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.13 seconds
evaluate_mse took 1.26 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.17 seconds
evaluate_mse took 1.31 seconds
here in mutations after all complete
change (mutation) took 204.35 seconds
the_best took 0.03 seconds
23 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.15 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
23 generation repeat cross over 16 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.09 seconds
deleting took 0.02 seconds
Train took 1.39 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.18 seconds
cross_over took 132.39 seconds
self.num is 20
0
1
mutate took 1.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.20 seconds
evaluate_mse took 1.33 seconds
2
mutate took 0.15 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 0.59 seconds
evaluate_mse took 0.89 seconds
3
mutate took 0.17 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.88 seconds
4
mutate took 0.16 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.09 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.17 seconds
6
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.14 seconds
evaluate_mse took 1.26 seconds
7
mutate took 0.20 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.18 seconds
8
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.19 seconds
9
mutate took 0.08 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 1.15 seconds
10
mutate took 0.09 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.10 seconds
11
mutate took 0.08 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.13 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.50 seconds
evaluate_mse took 0.66 seconds
13
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.56 seconds
evaluate_mse took 0.69 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.05 seconds
15
mutate took 0.07 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.15 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.18 seconds
evaluate_mse took 1.31 seconds
17
mutate took 0.08 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.17 seconds
18
mutate took 0.08 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.13 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.55 seconds
evaluate_mse took 0.70 seconds
here in mutations after all complete
change (mutation) took 127.26 seconds
the_best took 0.01 seconds
24 generation best_aic & best Eq: 2.162322271660789, ((u d^2 x) * (uy * (uy d x)))+((ux d^2 y) d x)
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
best concise Eq: -27.0048((ux d^2 y) d x)
24 generation repeat cross over 18 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
cross_over took 100.10 seconds
self.num is 20
0
1
mutate took 1.74 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.25 seconds
evaluate_mse took 1.93 seconds
2
mutate took 0.12 seconds
evaluate_mse took 0.07 seconds
deleting took 0.01 seconds
Train took 0.56 seconds
evaluate_mse took 0.65 seconds
3
mutate took 0.13 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.53 seconds
evaluate_mse took 0.67 seconds
4
mutate took 0.13 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.11 seconds
5
mutate took 0.18 seconds
6
mutate took 0.12 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.64 seconds
7
mutate took 0.16 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.16 seconds
8
mutate took 0.20 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.05 seconds
9
mutate took 0.08 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.09 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.02 seconds
11
mutate took 0.13 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 1.21 seconds
12
mutate took 0.16 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.46 seconds
evaluate_mse took 0.59 seconds
13
mutate took 0.12 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.20 seconds
14
mutate took 0.11 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 1.09 seconds
15
mutate took 0.16 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 213, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 42, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 174, in evaluate_mse
    w, loss, mse, aic = Train(terms_values, ut.reshape(u.size, 1), 0, 1, aic_ratio)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 156, in Train
    data_err = np.linalg.norm(TestY - TestR.dot(w), 2)
                                      ^^^^^^^^^^^^
ValueError: shapes (1000000,5) and (1,5) not aligned: 5 (dim 1) != 1 (dim 0)
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.25 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - uy) / (u * u)))+( ^2 uy)+(ux * ux)+( ^2 ux)+((( ^2 uy) + (u - uy)) * (u d^2 y))
evaluate_aic: 2.340124435573917
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.45 seconds
Creating the ith pde, i= 1
a_pde.visualize(): (uy d^2 x)+(ux * (u d y))+(u d^2 y)+(ux d y)
evaluate_aic: 7.010860171941292
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.08 seconds
Creating the ith pde, i= 2
a_pde.visualize(): (uy d^2 y)+( ^3 uy)+( ^2 ( ^2 u))+((ux d y) / u)
evaluate_aic: 7.104160240385628
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.66 seconds
Creating the ith pde, i= 3
a_pde.visualize(): ((( ^2 u) / uy) d x)
evaluate_aic: 2.3401245256615417
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.15 seconds
Creating the ith pde, i= 4
a_pde.visualize(): (((ux - uy) * uy) * (uy + uy))+(((u * uy) / (u - u)) / ((uy d x) / (uy / uy)))+((u d y) d^2 x)
evaluate_aic: 5.540114176448141
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.10 seconds
Creating the ith pde, i= 5
a_pde.visualize(): ((( ^3 u) / (u * ux)) / ((u / uy) + ( ^2 ux)))+(u d x)+(uy * ((ux d^2 x) d y))
evaluate_aic: 5.54012361120041
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.72 seconds
Creating the ith pde, i= 6
a_pde.visualize(): ( ^2 (ux - u))
evaluate_aic: 2.3208211886347128
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.07 seconds
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 (uy + uy)) d x)
evaluate_aic: 3.939991243139845
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.40 seconds
Creating the ith pde, i= 8
a_pde.visualize(): ((u d^2 x) / ((u / uy) / (ux d y)))+( ^3 (ux d y))+(uy d x)+(( ^3 (ux d^2 y)) d^2 y)+(uy d x)
evaluate_aic: 8.739541580288195
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.11 seconds
Creating the ith pde, i= 9
a_pde.visualize(): ( ^3 u)+(((u + u) d^2 y) * ( ^2 u))
evaluate_aic: 3.854326964814328
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.29 seconds
Creating the ith pde, i= 10
a_pde.visualize(): ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 8.74012039490042
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.62 seconds
Creating the ith pde, i= 11
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+((( ^3 u) / uy) * (u + u))+(uy d x)
evaluate_aic: 8.610776428620328
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 1.43 seconds
Creating the ith pde, i= 12
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 7.139786291941243
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.12 seconds
Creating the ith pde, i= 13
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((( ^3 ux) d^2 x) d^2 y)
evaluate_aic: 5.540012077644709
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
Creating the ith pde, i= 14
a_pde.visualize(): (((uy - u) + (u - u)) * u)
evaluate_aic: 2.3110284837961617
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.54 seconds
Creating the ith pde, i= 15
a_pde.visualize(): ( ^3 u)+( ^2 uy)+(((ux d^2 y) d^2 y) d y)
evaluate_aic: 5.464009805488578
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.22 seconds
Creating the ith pde, i= 16
a_pde.visualize(): (uy d x)+(ux / u)+(ux / u)+((( ^3 uy) * uy) * ( ^2 u))
evaluate_aic: 7.13168633354605
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.13 seconds
Creating the ith pde, i= 17
a_pde.visualize(): (u d^2 x)+(u d^2 y)
evaluate_aic: 3.7779250601351912
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
Creating the ith pde, i= 18
a_pde.visualize(): (ux d^2 x)
evaluate_aic: 2.340124406445905
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.32 seconds
Creating the ith pde, i= 19
a_pde.visualize(): (u d^2 y)+( ^2 u)+(ux * ux)+( ^3 ( ^2 ux))
evaluate_aic: 7.00898090679335
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.31 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.74 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.69 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.68 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.47 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.43 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.20 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.19 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.11 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.19 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.99 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.29 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.27 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.23 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.98 seconds
cross_over took 21.25 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.68 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.76 seconds
4
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.73 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.66 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.73 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.75 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.66 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.57 seconds
13
mutate took 0.06 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.21 seconds
evaluate_mse took 1.45 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.23 seconds
evaluate_mse took 1.43 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.80 seconds
evaluate_mse took 1.96 seconds
16
mutate took 0.06 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.22 seconds
evaluate_mse took 1.47 seconds
17
mutate took 0.08 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 1.26 seconds
evaluate_mse took 1.44 seconds
18
mutate took 0.03 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.10 seconds
here in mutations after all complete
change (mutation) took 17.11 seconds
the_best took 0.00 seconds
1 generation best_aic & best Eq: 2.211137585410536, (u d^2 y)
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
best concise Eq: 11.684(u d^2 y)
1 generation repeat cross over 1 times and mutation 1 times
here
begin crossover
cross_over took 0.65 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.51 seconds
evaluate_mse took 0.54 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.64 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.58 seconds
6
mutate took 0.02 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.60 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.58 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.75 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.73 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.63 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.68 seconds
evaluate_mse took 0.76 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.69 seconds
evaluate_mse took 0.79 seconds
here in mutations after all complete
change (mutation) took 11.49 seconds
the_best took 0.00 seconds
2 generation best_aic & best Eq: 2.211137585410536, (u d^2 y)
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
best concise Eq: 11.684(u d^2 y)
2 generation repeat cross over 20 times and mutation 3 times
here
begin crossover
cross_over took 0.65 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.63 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.69 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.67 seconds
7
mutate took 0.02 seconds
8
mutate took 0.01 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.71 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.70 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.68 seconds
evaluate_mse took 0.71 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.69 seconds
evaluate_mse took 0.73 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.58 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.71 seconds
evaluate_mse took 0.73 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.68 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.76 seconds
here in mutations after all complete
change (mutation) took 12.06 seconds
the_best took 0.00 seconds
3 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
3 generation repeat cross over 20 times and mutation 3 times
here
begin crossover
cross_over took 0.65 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.72 seconds
evaluate_mse took 0.78 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.70 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.67 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.68 seconds
evaluate_mse took 0.78 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.71 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.75 seconds
10
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
11
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.71 seconds
14
mutate took 0.02 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.69 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 9.14 seconds
the_best took 0.00 seconds
4 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
4 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 0.82 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.71 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.72 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.73 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
12
mutate took 0.02 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.75 seconds
evaluate_mse took 0.78 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.78 seconds
evaluate_mse took 0.88 seconds
17
mutate took 0.02 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.81 seconds
evaluate_mse took 0.91 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.83 seconds
evaluate_mse took 0.85 seconds
here in mutations after all complete
change (mutation) took 12.31 seconds
the_best took 0.00 seconds
5 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.52 seconds
best concise Eq: 
5 generation repeat cross over 20 times and mutation 4 times
here
begin crossover
cross_over took 0.75 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.68 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.67 seconds
4
mutate took 0.01 seconds
5
mutate took 0.03 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.12 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.73 seconds
11
mutate took 0.01 seconds
12
mutate took 0.02 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
17
mutate took 0.01 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.72 seconds
evaluate_mse took 0.79 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.65 seconds
here in mutations after all complete
change (mutation) took 8.29 seconds
the_best took 0.00 seconds
6 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
6 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 0.80 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.71 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.69 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.66 seconds
evaluate_mse took 0.70 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
14
mutate took 0.01 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.68 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.66 seconds
evaluate_mse took 0.75 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.66 seconds
evaluate_mse took 0.69 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.72 seconds
here in mutations after all complete
change (mutation) took 9.78 seconds
the_best took 0.00 seconds
7 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
7 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 0.87 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.66 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.71 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.79 seconds
8
mutate took 0.02 seconds
9
mutate took 0.03 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.71 seconds
evaluate_mse took 0.77 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.86 seconds
evaluate_mse took 0.90 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.76 seconds
evaluate_mse took 0.83 seconds
13
mutate took 0.01 seconds
14
mutate took 0.02 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.77 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.69 seconds
evaluate_mse took 0.76 seconds
17
mutate took 0.01 seconds
18
mutate took 0.02 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.82 seconds
evaluate_mse took 0.88 seconds
here in mutations after all complete
change (mutation) took 9.55 seconds
the_best took 0.00 seconds
8 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
8 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 0.90 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.70 seconds
evaluate_mse took 0.77 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
8
mutate took 0.02 seconds
9
mutate took 0.04 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.72 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.70 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.74 seconds
evaluate_mse took 0.81 seconds
16
mutate took 0.02 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.74 seconds
evaluate_mse took 0.79 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.74 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.63 seconds
here in mutations after all complete
change (mutation) took 10.27 seconds
the_best took 0.00 seconds
9 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
9 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 0.88 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.69 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.70 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
15
mutate took 0.02 seconds
16
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.68 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.69 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.73 seconds
19
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 7.54 seconds
the_best took 0.00 seconds
10 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.52 seconds
best concise Eq: 
10 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 0.92 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.71 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.68 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.67 seconds
evaluate_mse took 0.75 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.70 seconds
evaluate_mse took 0.80 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.70 seconds
evaluate_mse took 0.82 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.73 seconds
evaluate_mse took 0.79 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.75 seconds
evaluate_mse took 0.83 seconds
16
mutate took 0.03 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.71 seconds
evaluate_mse took 0.86 seconds
18
mutate took 0.02 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.68 seconds
evaluate_mse took 0.76 seconds
here in mutations after all complete
change (mutation) took 12.43 seconds
the_best took 0.00 seconds
11 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
best concise Eq: 
11 generation repeat cross over 20 times and mutation 4 times
here
begin crossover
cross_over took 1.07 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.02 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.69 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.01 seconds
8
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.69 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.68 seconds
evaluate_mse took 0.77 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.03 seconds
17
mutate took 0.02 seconds
18
mutate took 0.02 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
here in mutations after all complete
change (mutation) took 8.51 seconds
the_best took 0.00 seconds
12 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
12 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 0.88 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.58 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.65 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
8
mutate took 0.01 seconds
9
mutate took 0.03 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.71 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.71 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 7.68 seconds
the_best took 0.00 seconds
13 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
best concise Eq: 
13 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 0.95 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.70 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.73 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.68 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.67 seconds
18
mutate took 0.02 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.70 seconds
evaluate_mse took 0.76 seconds
here in mutations after all complete
change (mutation) took 11.93 seconds
the_best took 0.00 seconds
14 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
14 generation repeat cross over 20 times and mutation 5 times
here
begin crossover
cross_over took 1.06 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.73 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.66 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.65 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.71 seconds
11
mutate took 0.03 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.12 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
here in mutations after all complete
change (mutation) took 10.06 seconds
the_best took 0.00 seconds
15 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
15 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 0.98 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.66 seconds
2
mutate took 0.02 seconds
3
mutate took 0.03 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
11
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.62 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.72 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
17
mutate took 0.01 seconds
18
mutate took 0.02 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
here in mutations after all complete
change (mutation) took 9.94 seconds
the_best took 0.00 seconds
16 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.44 seconds
best concise Eq: 
16 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 1.22 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.65 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.68 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.68 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 9.31 seconds
the_best took 0.00 seconds
17 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
17 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 1.03 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.68 seconds
6
mutate took 0.01 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.70 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.70 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.65 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.68 seconds
here in mutations after all complete
change (mutation) took 8.48 seconds
the_best took 0.00 seconds
18 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
18 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.14 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.69 seconds
4
mutate took 0.01 seconds
5
mutate took 0.03 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.68 seconds
8
mutate took 0.02 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.69 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.68 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.71 seconds
here in mutations after all complete
change (mutation) took 10.67 seconds
the_best took 0.00 seconds
19 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
19 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 1.15 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.70 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
4
mutate took 0.01 seconds
5
mutate took 0.02 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
8
mutate took 0.02 seconds
9
mutate took 0.02 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
12
mutate took 0.02 seconds
13
mutate took 0.01 seconds
14
mutate took 0.03 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
here in mutations after all complete
change (mutation) took 7.22 seconds
the_best took 0.00 seconds
20 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.44 seconds
best concise Eq: 
20 generation repeat cross over 20 times and mutation 13 times
here
begin crossover
cross_over took 1.10 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.56 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
5
mutate took 0.02 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
7
mutate took 0.01 seconds
8
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.69 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.03 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.60 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
13
mutate took 0.02 seconds
14
mutate took 0.02 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.70 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
here in mutations after all complete
change (mutation) took 8.34 seconds
the_best took 0.00 seconds
21 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
21 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.17 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.57 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
evaluate_mse took 0.49 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.02 seconds
8
mutate took 0.02 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.64 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.68 seconds
evaluate_mse took 0.71 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.63 seconds
here in mutations after all complete
change (mutation) took 10.21 seconds
the_best took 0.00 seconds
22 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.43 seconds
best concise Eq: 
22 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 1.08 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.69 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.60 seconds
8
mutate took 0.02 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.67 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.66 seconds
16
mutate took 0.01 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
here in mutations after all complete
change (mutation) took 10.34 seconds
the_best took 0.00 seconds
23 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
23 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 1.16 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.01 seconds
3
mutate took 0.00 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.62 seconds
4
mutate took 0.02 seconds
5
mutate took 0.02 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.67 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.68 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.67 seconds
here in mutations after all complete
change (mutation) took 10.71 seconds
the_best took 0.00 seconds
24 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
24 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 1.33 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.57 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.60 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.60 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
13
mutate took 0.01 seconds
14
mutate took 0.09 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.07 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
here in mutations after all complete
change (mutation) took 10.34 seconds
the_best took 0.00 seconds
25 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
25 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 1.20 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.57 seconds
3
mutate took 0.00 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
7
mutate took 0.02 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.52 seconds
evaluate_mse took 0.57 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.71 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.60 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.70 seconds
15
mutate took 0.04 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
18
mutate took 0.04 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
here in mutations after all complete
change (mutation) took 8.44 seconds
the_best took 0.00 seconds
26 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
26 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.32 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.65 seconds
3
mutate took 0.00 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.60 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.71 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.63 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.71 seconds
13
mutate took 0.01 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
17
mutate took 0.02 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.61 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 12.03 seconds
the_best took 0.00 seconds
27 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
27 generation repeat cross over 20 times and mutation 4 times
here
begin crossover
cross_over took 1.34 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
3
mutate took 0.00 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.61 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.63 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.71 seconds
13
mutate took 0.02 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
15
mutate took 0.01 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
here in mutations after all complete
change (mutation) took 10.43 seconds
the_best took 0.00 seconds
28 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
28 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 1.43 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.03 seconds
9
mutate took 0.01 seconds
10
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.64 seconds
14
mutate took 0.01 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.64 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
here in mutations after all complete
change (mutation) took 8.19 seconds
the_best took 0.00 seconds
29 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
29 generation repeat cross over 20 times and mutation 12 times
here
begin crossover
cross_over took 1.42 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.00 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.51 seconds
evaluate_mse took 0.54 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.10 seconds
6
mutate took 0.02 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
evaluate_mse took 0.48 seconds
9
mutate took 0.01 seconds
10
mutate took 0.02 seconds
11
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
12
mutate took 0.01 seconds
13
mutate took 0.03 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.72 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.69 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.62 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
here in mutations after all complete
change (mutation) took 7.73 seconds
the_best took 0.00 seconds
30 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
30 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 1.50 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
2
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
3
mutate took 0.00 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
5
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.60 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.67 seconds
8
mutate took 0.02 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.69 seconds
18
mutate took 0.03 seconds
19
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 8.49 seconds
the_best took 0.00 seconds
31 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
31 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 1.34 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.61 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
5
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.69 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.63 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.69 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.72 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.73 seconds
evaluate_mse took 0.79 seconds
19
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 10.88 seconds
the_best took 0.00 seconds
32 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.44 seconds
best concise Eq: 
32 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 1.34 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.00 seconds
4
mutate took 0.00 seconds
5
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.57 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.12 seconds
12
mutate took 0.02 seconds
13
mutate took 0.02 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.63 seconds
15
mutate took 0.02 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.76 seconds
18
mutate took 0.02 seconds
19
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 6.54 seconds
the_best took 0.00 seconds
33 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
33 generation repeat cross over 20 times and mutation 14 times
here
begin crossover
cross_over took 1.35 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.56 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.67 seconds
3
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
12
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.68 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.66 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.71 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.67 seconds
17
mutate took 0.01 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
here in mutations after all complete
change (mutation) took 11.45 seconds
the_best took 0.00 seconds
34 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
34 generation repeat cross over 20 times and mutation 5 times
here
begin crossover
cross_over took 1.39 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.58 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.66 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
here in mutations after all complete
change (mutation) took 8.19 seconds
the_best took 0.00 seconds
35 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
35 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.40 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
5
mutate took 0.00 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.64 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.76 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
10
mutate took 0.02 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.70 seconds
13
mutate took 0.03 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.41 seconds
evaluate_mse took 0.44 seconds
15
mutate took 0.02 seconds
16
mutate took 0.01 seconds
17
mutate took 0.03 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.69 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 9.32 seconds
the_best took 0.00 seconds
36 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
36 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 1.36 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
5
mutate took 0.00 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.70 seconds
8
mutate took 0.01 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.75 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
13
mutate took 0.01 seconds
14
mutate took 0.03 seconds
15
mutate took 0.03 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.68 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 9.28 seconds
the_best took 0.00 seconds
37 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
37 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.52 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
2
mutate took 0.00 seconds
3
mutate took 0.01 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.69 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.10 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.70 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.63 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.62 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 9.44 seconds
the_best took 0.00 seconds
38 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
38 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 1.41 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.02 seconds
3
mutate took 0.00 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.61 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.12 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.74 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
10
mutate took 0.02 seconds
11
mutate took 0.02 seconds
12
mutate took 0.02 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
14
mutate took 0.01 seconds
15
mutate took 0.03 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 7.33 seconds
the_best took 0.00 seconds
39 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
39 generation repeat cross over 20 times and mutation 12 times
here
begin crossover
cross_over took 1.48 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.70 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.02 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.68 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.69 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.70 seconds
evaluate_mse took 0.78 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.66 seconds
evaluate_mse took 0.79 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.76 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.67 seconds
evaluate_mse took 0.87 seconds
here in mutations after all complete
change (mutation) took 10.32 seconds
the_best took 0.00 seconds
40 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
40 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 1.30 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
2
mutate took 0.00 seconds
3
mutate took 0.02 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.64 seconds
6
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.63 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
11
mutate took 0.02 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
14
mutate took 0.01 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.67 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
19
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 9.49 seconds
the_best took 0.00 seconds
41 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
41 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 1.46 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.51 seconds
evaluate_mse took 0.57 seconds
2
mutate took 0.00 seconds
3
mutate took 0.01 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
5
mutate took 0.01 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.57 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.01 seconds
10
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
12
mutate took 0.02 seconds
13
mutate took 0.02 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
19
mutate took 0.03 seconds
here in mutations after all complete
change (mutation) took 10.36 seconds
the_best took 0.00 seconds
42 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
42 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 1.63 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
2
mutate took 0.01 seconds
3
mutate took 0.00 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.62 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.71 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.01 seconds
17
mutate took 0.09 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.44 seconds
evaluate_mse took 0.47 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
here in mutations after all complete
change (mutation) took 10.63 seconds
the_best took 0.00 seconds
43 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
43 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 1.55 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
3
mutate took 0.00 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
5
mutate took 0.01 seconds
6
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
8
mutate took 0.00 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.73 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.69 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.65 seconds
14
mutate took 0.01 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.73 seconds
16
mutate took 0.02 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.71 seconds
here in mutations after all complete
change (mutation) took 12.36 seconds
the_best took 0.00 seconds
44 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
44 generation repeat cross over 20 times and mutation 4 times
here
begin crossover
cross_over took 1.56 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.42 seconds
evaluate_mse took 0.44 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.69 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.56 seconds
8
mutate took 0.00 seconds
9
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.64 seconds
15
mutate took 0.01 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.72 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.69 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.65 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
here in mutations after all complete
change (mutation) took 10.85 seconds
the_best took 0.00 seconds
45 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.44 seconds
best concise Eq: 
45 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 1.52 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.70 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.52 seconds
evaluate_mse took 0.59 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.72 seconds
5
mutate took 0.00 seconds
6
mutate took 0.00 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.10 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.00 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.60 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.07 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.69 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 8.74 seconds
the_best took 0.00 seconds
46 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
46 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 1.60 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.69 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.10 seconds
3
mutate took 0.01 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.72 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
7
mutate took 0.02 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.03 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.69 seconds
evaluate_mse took 0.76 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
15
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.68 seconds
evaluate_mse took 0.73 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
18
mutate took 0.02 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.73 seconds
here in mutations after all complete
change (mutation) took 7.72 seconds
the_best took 0.00 seconds
47 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
47 generation repeat cross over 20 times and mutation 13 times
here
begin crossover
cross_over took 1.88 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
4
mutate took 0.00 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
6
mutate took 0.01 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
8
mutate took 0.00 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
10
mutate took 0.02 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.68 seconds
12
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.66 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.71 seconds
here in mutations after all complete
change (mutation) took 10.58 seconds
the_best took 0.00 seconds
48 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
48 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 1.83 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.00 seconds
3
mutate took 0.00 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
5
mutate took 0.00 seconds
6
mutate took 0.02 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.57 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
evaluate_mse took 0.49 seconds
10
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.72 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.62 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.71 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 8.57 seconds
the_best took 0.00 seconds
49 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
49 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.85 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
2
mutate took 0.00 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
5
mutate took 0.01 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
9
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
10
mutate took 0.00 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.69 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
18
mutate took 0.01 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.73 seconds
here in mutations after all complete
change (mutation) took 11.35 seconds
the_best took 0.00 seconds
50 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
50 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 1.73 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.02 seconds
3
mutate took 0.00 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.61 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.69 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.70 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.10 seconds
10
mutate took 0.00 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.62 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.71 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.67 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 10.81 seconds
the_best took 0.00 seconds
51 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
51 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 1.77 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.57 seconds
3
mutate took 0.01 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
6
mutate took 0.01 seconds
7
mutate took 0.00 seconds
8
mutate took 0.01 seconds
9
mutate took 0.02 seconds
10
mutate took 0.02 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.70 seconds
12
mutate took 0.00 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
14
mutate took 0.02 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.69 seconds
here in mutations after all complete
change (mutation) took 11.60 seconds
the_best took 0.00 seconds
52 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.51 seconds
best concise Eq: 
52 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.74 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.51 seconds
evaluate_mse took 0.54 seconds
3
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
7
mutate took 0.01 seconds
8
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.60 seconds
9
mutate took 0.01 seconds
10
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.70 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
17
mutate took 0.03 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 10.37 seconds
the_best took 0.00 seconds
53 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
53 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 1.91 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.59 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.70 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
10
mutate took 0.00 seconds
11
mutate took 0.00 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.69 seconds
evaluate_mse took 0.72 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 13.32 seconds
the_best took 0.00 seconds
54 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
54 generation repeat cross over 20 times and mutation 5 times
here
begin crossover
cross_over took 1.80 seconds
self.num is 20
0
1
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
2
mutate took 0.02 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
8
mutate took 0.02 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.71 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
11
mutate took 0.01 seconds
12
mutate took 0.00 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.69 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.60 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 11.78 seconds
the_best took 0.00 seconds
55 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
55 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 1.84 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.64 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.62 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.57 seconds
8
mutate took 0.00 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
14
mutate took 0.02 seconds
15
mutate took 0.02 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 8.08 seconds
the_best took 0.00 seconds
56 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
56 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 1.91 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.74 seconds
3
mutate took 0.02 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.00 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
9
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.01 seconds
11
mutate took 0.00 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.71 seconds
here in mutations after all complete
change (mutation) took 8.41 seconds
the_best took 0.00 seconds
57 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
57 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.93 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.02 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.70 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
9
mutate took 0.00 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.12 seconds
10
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
11
mutate took 0.00 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 8.90 seconds
the_best took 0.00 seconds
58 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
58 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 2.01 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.66 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
6
mutate took 0.01 seconds
7
mutate took 0.02 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
9
mutate took 0.00 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
11
mutate took 0.02 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
14
mutate took 0.01 seconds
15
mutate took 0.02 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.69 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.57 seconds
here in mutations after all complete
change (mutation) took 11.19 seconds
the_best took 0.01 seconds
59 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
59 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 2.00 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
2
mutate took 0.02 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.73 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.73 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.67 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.74 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.74 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.57 seconds
here in mutations after all complete
change (mutation) took 12.47 seconds
the_best took 0.00 seconds
60 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
60 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 2.07 seconds
self.num is 20
0
1
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.73 seconds
2
mutate took 0.02 seconds
3
mutate took 0.00 seconds
4
mutate took 0.00 seconds
5
mutate took 0.01 seconds
6
mutate took 0.00 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
10
mutate took 0.02 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
12
mutate took 0.02 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
15
mutate took 0.01 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
17
mutate took 0.02 seconds
18
mutate took 0.03 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.72 seconds
here in mutations after all complete
change (mutation) took 8.42 seconds
the_best took 0.00 seconds
61 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
61 generation repeat cross over 20 times and mutation 14 times
here
begin crossover
cross_over took 2.02 seconds
self.num is 20
0
1
mutate took 0.02 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
3
mutate took 0.02 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.68 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 9.24 seconds
the_best took 0.00 seconds
62 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
62 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 1.99 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.08 seconds
3
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.60 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.63 seconds
6
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
7
mutate took 0.00 seconds
8
mutate took 0.02 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
10
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.71 seconds
13
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.65 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 9.97 seconds
the_best took 0.00 seconds
63 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
63 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 2.06 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.39 seconds
evaluate_mse took 0.44 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
7
mutate took 0.00 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.63 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
16
mutate took 0.02 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
18
mutate took 0.08 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 10.52 seconds
the_best took 0.00 seconds
64 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
64 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 2.03 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
3
mutate took 0.02 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
8
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
14
mutate took 0.00 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.12 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.72 seconds
here in mutations after all complete
change (mutation) took 10.88 seconds
the_best took 0.00 seconds
65 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
65 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 2.06 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.63 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.75 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
8
mutate took 0.01 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.62 seconds
11
mutate took 0.01 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
14
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.66 seconds
evaluate_mse took 0.72 seconds
15
mutate took 0.01 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.62 seconds
here in mutations after all complete
change (mutation) took 12.54 seconds
the_best took 0.00 seconds
66 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
66 generation repeat cross over 20 times and mutation 5 times
here
begin crossover
cross_over took 2.10 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.57 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.67 seconds
5
mutate took 0.00 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.58 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.61 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.67 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.62 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 8.33 seconds
the_best took 0.00 seconds
67 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.44 seconds
best concise Eq: 
67 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 2.21 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.02 seconds
5
mutate took 0.00 seconds
6
mutate took 0.00 seconds
7
mutate took 0.00 seconds
8
mutate took 0.02 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.63 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
19
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 7.73 seconds
the_best took 0.00 seconds
68 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
68 generation repeat cross over 20 times and mutation 14 times
here
begin crossover
cross_over took 2.22 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
2
mutate took 0.00 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
5
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
6
mutate took 0.02 seconds
7
mutate took 0.01 seconds
8
mutate took 0.02 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
14
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.63 seconds
here in mutations after all complete
change (mutation) took 8.59 seconds
the_best took 0.00 seconds
69 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
69 generation repeat cross over 20 times and mutation 12 times
here
begin crossover
cross_over took 2.15 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.00 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
5
mutate took 0.01 seconds
6
mutate took 0.02 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.50 seconds
evaluate_mse took 0.52 seconds
8
mutate took 0.01 seconds
9
mutate took 0.00 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
11
mutate took 0.01 seconds
12
mutate took 0.00 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.69 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.63 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.71 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
19
mutate took 0.08 seconds
here in mutations after all complete
change (mutation) took 10.63 seconds
the_best took 0.00 seconds
70 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.44 seconds
best concise Eq: 
70 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 2.18 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.00 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.63 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.70 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
18
mutate took 0.01 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
here in mutations after all complete
change (mutation) took 11.43 seconds
the_best took 0.00 seconds
71 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
71 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 2.14 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
2
mutate took 0.02 seconds
3
mutate took 0.01 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.69 seconds
9
mutate took 0.00 seconds
10
mutate took 0.02 seconds
11
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.00 seconds
13
mutate took 0.02 seconds
14
mutate took 0.00 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
15
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
here in mutations after all complete
change (mutation) took 10.82 seconds
the_best took 0.00 seconds
72 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
72 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 2.45 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.58 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.51 seconds
evaluate_mse took 0.59 seconds
5
mutate took 0.00 seconds
6
mutate took 0.00 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.62 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
12
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
13
mutate took 0.03 seconds
14
mutate took 0.00 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.02 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.14 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.60 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 11.54 seconds
the_best took 0.01 seconds
73 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
73 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 2.72 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.00 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.59 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.69 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.00 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
15
mutate took 0.01 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
here in mutations after all complete
change (mutation) took 8.96 seconds
the_best took 0.00 seconds
74 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
74 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 2.27 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
2
mutate took 0.01 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
5
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
8
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.68 seconds
11
mutate took 0.00 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
13
mutate took 0.01 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.69 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.68 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.02 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 15.14 seconds
the_best took 0.00 seconds
75 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
75 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 2.30 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.70 seconds
2
mutate took 0.02 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.64 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.08 seconds
5
mutate took 0.00 seconds
6
mutate took 0.00 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.51 seconds
evaluate_mse took 0.56 seconds
9
mutate took 0.00 seconds
10
mutate took 0.02 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.00 seconds
13
mutate took 0.02 seconds
14
mutate took 0.00 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.68 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
here in mutations after all complete
change (mutation) took 12.11 seconds
the_best took 0.00 seconds
76 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
76 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 2.72 seconds
self.num is 20
0
1
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.70 seconds
2
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.58 seconds
3
mutate took 0.02 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.60 seconds
5
mutate took 0.01 seconds
6
mutate took 0.00 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.70 seconds
11
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.60 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.69 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.61 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 14.62 seconds
the_best took 0.00 seconds
77 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
77 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 2.29 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.64 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.09 seconds
4
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
7
mutate took 0.00 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
13
mutate took 0.02 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.60 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.70 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.73 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.58 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
here in mutations after all complete
change (mutation) took 13.00 seconds
the_best took 0.00 seconds
78 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
78 generation repeat cross over 20 times and mutation 5 times
here
begin crossover
cross_over took 2.39 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.57 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
6
mutate took 0.00 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
10
mutate took 0.01 seconds
11
mutate took 0.00 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.63 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 14.82 seconds
the_best took 0.00 seconds
79 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
79 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 2.58 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.58 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.00 seconds
5
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.59 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.64 seconds
8
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
9
mutate took 0.02 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
12
mutate took 0.00 seconds
13
mutate took 0.00 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.74 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
18
mutate took 0.01 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.16 seconds
here in mutations after all complete
change (mutation) took 15.66 seconds
the_best took 0.01 seconds
80 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
best concise Eq: 
80 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 2.90 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.00 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.52 seconds
evaluate_mse took 0.57 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.53 seconds
evaluate_mse took 0.57 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.69 seconds
8
mutate took 0.01 seconds
9
mutate took 0.02 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.73 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.17 seconds
12
mutate took 0.01 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.68 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.60 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.57 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.66 seconds
evaluate_mse took 0.71 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
here in mutations after all complete
change (mutation) took 12.78 seconds
the_best took 0.00 seconds
81 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
81 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 2.34 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.02 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.60 seconds
5
mutate took 0.01 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.61 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
8
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.01 seconds
10
mutate took 0.02 seconds
11
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.63 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 13.32 seconds
the_best took 0.00 seconds
82 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
82 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 2.72 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
5
mutate took 0.02 seconds
6
mutate took 0.02 seconds
7
mutate took 0.01 seconds
8
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.01 seconds
10
mutate took 0.00 seconds
11
mutate took 0.01 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.51 seconds
evaluate_mse took 0.56 seconds
13
mutate took 0.00 seconds
14
mutate took 0.00 seconds
15
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
17
mutate took 0.02 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.12 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 13.98 seconds
the_best took 0.00 seconds
83 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.51 seconds
best concise Eq: 
83 generation repeat cross over 20 times and mutation 14 times
here
begin crossover
cross_over took 2.75 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.00 seconds
3
mutate took 0.02 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.62 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.58 seconds
6
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
7
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.41 seconds
evaluate_mse took 0.43 seconds
10
mutate took 0.00 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
13
mutate took 0.00 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
here in mutations after all complete
change (mutation) took 10.75 seconds
the_best took 0.00 seconds
84 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
best concise Eq: 
84 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 3.05 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.66 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
11
mutate took 0.00 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.64 seconds
14
mutate took 0.01 seconds
15
mutate took 0.02 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.63 seconds
17
mutate took 0.02 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
here in mutations after all complete
change (mutation) took 10.07 seconds
the_best took 0.00 seconds
85 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
85 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 2.74 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
3
mutate took 0.01 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.11 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.64 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.00 seconds
11
mutate took 0.01 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
13
mutate took 0.01 seconds
14
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.59 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.65 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 14.16 seconds
the_best took 0.00 seconds
86 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.48 seconds
best concise Eq: 
86 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 2.64 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
3
mutate took 0.00 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.56 seconds
5
mutate took 0.00 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.66 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
8
mutate took 0.02 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.58 seconds
10
mutate took 0.02 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.70 seconds
14
mutate took 0.00 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.62 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.18 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.54 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
here in mutations after all complete
change (mutation) took 11.86 seconds
the_best took 0.00 seconds
87 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
87 generation repeat cross over 20 times and mutation 8 times
here
begin crossover
cross_over took 2.74 seconds
self.num is 20
0
1
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.41 seconds
evaluate_mse took 0.44 seconds
2
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.64 seconds
3
mutate took 0.00 seconds
4
mutate took 0.02 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.65 seconds
6
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
7
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.63 seconds
8
mutate took 0.00 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.64 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.72 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.73 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.64 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.61 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.60 seconds
here in mutations after all complete
change (mutation) took 12.69 seconds
the_best took 0.00 seconds
88 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.51 seconds
best concise Eq: 
88 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 2.67 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.63 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.56 seconds
5
mutate took 0.00 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.65 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.66 seconds
12
mutate took 0.02 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.59 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.70 seconds
15
mutate took 0.00 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.70 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
19
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 11.15 seconds
the_best took 0.00 seconds
89 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.51 seconds
best concise Eq: 
89 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 3.11 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.67 seconds
evaluate_mse took 0.75 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.68 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.73 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
6
mutate took 0.02 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.70 seconds
8
mutate took 0.02 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.69 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.64 seconds
11
mutate took 0.02 seconds
12
mutate took 0.02 seconds
13
mutate took 0.01 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.66 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
16
mutate took 0.01 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.73 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
here in mutations after all complete
change (mutation) took 15.01 seconds
the_best took 0.00 seconds
90 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.52 seconds
best concise Eq: 
90 generation repeat cross over 20 times and mutation 6 times
here
begin crossover
cross_over took 2.99 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.71 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.65 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.67 seconds
4
mutate took 0.01 seconds
5
mutate took 0.02 seconds
6
mutate took 0.02 seconds
7
mutate took 0.03 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.59 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.68 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.62 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.62 seconds
14
mutate took 0.01 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.68 seconds
17
mutate took 0.00 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
19
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 11.46 seconds
the_best took 0.01 seconds
91 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
91 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 3.25 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.65 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.68 seconds
evaluate_mse took 0.74 seconds
3
mutate took 0.05 seconds
4
mutate took 0.01 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.71 seconds
6
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.63 seconds
7
mutate took 0.01 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.68 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.73 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.51 seconds
evaluate_mse took 0.55 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.71 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.65 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
14
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.75 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.62 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.69 seconds
17
mutate took 0.01 seconds
18
mutate took 0.00 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
here in mutations after all complete
change (mutation) took 14.37 seconds
the_best took 0.00 seconds
92 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
92 generation repeat cross over 20 times and mutation 5 times
here
begin crossover
cross_over took 2.82 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.65 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.60 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.59 seconds
evaluate_mse took 0.69 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.69 seconds
7
mutate took 0.02 seconds
8
mutate took 0.01 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.61 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.63 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.72 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
16
mutate took 0.01 seconds
17
mutate took 0.02 seconds
18
mutate took 0.01 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
here in mutations after all complete
change (mutation) took 10.69 seconds
the_best took 0.00 seconds
93 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
best concise Eq: 
93 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 3.24 seconds
self.num is 20
0
1
mutate took 0.00 seconds
2
mutate took 0.00 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.57 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.71 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
6
mutate took 0.02 seconds
7
mutate took 0.02 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.58 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.70 seconds
10
mutate took 0.02 seconds
11
mutate took 0.01 seconds
12
mutate took 0.03 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.00 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.66 seconds
here in mutations after all complete
change (mutation) took 11.03 seconds
the_best took 0.00 seconds
94 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
94 generation repeat cross over 20 times and mutation 11 times
here
begin crossover
cross_over took 2.86 seconds
self.num is 20
0
1
mutate took 0.00 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.74 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.42 seconds
evaluate_mse took 0.47 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.73 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.72 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.66 seconds
evaluate_mse took 0.72 seconds
7
mutate took 0.03 seconds
8
mutate took 0.01 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.68 seconds
evaluate_mse took 0.72 seconds
10
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.64 seconds
evaluate_mse took 0.72 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.66 seconds
evaluate_mse took 0.73 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.65 seconds
13
mutate took 0.00 seconds
14
mutate took 0.00 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.65 seconds
evaluate_mse took 0.76 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.73 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.11 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
here in mutations after all complete
change (mutation) took 14.57 seconds
the_best took 0.00 seconds
95 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.50 seconds
best concise Eq: 
95 generation repeat cross over 20 times and mutation 5 times
here
begin crossover
cross_over took 3.56 seconds
self.num is 20
0
1
mutate took 0.01 seconds
2
mutate took 0.01 seconds
3
mutate took 0.01 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.70 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.71 seconds
7
mutate took 0.01 seconds
8
mutate took 0.02 seconds
9
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.70 seconds
10
mutate took 0.01 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
12
mutate took 0.02 seconds
13
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.56 seconds
evaluate_mse took 0.60 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.68 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.57 seconds
evaluate_mse took 0.69 seconds
18
mutate took 0.00 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.68 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.65 seconds
here in mutations after all complete
change (mutation) took 13.59 seconds
the_best took 0.00 seconds
96 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.47 seconds
best concise Eq: 
96 generation repeat cross over 20 times and mutation 7 times
here
begin crossover
cross_over took 3.05 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.63 seconds
evaluate_mse took 0.72 seconds
2
mutate took 0.02 seconds
3
mutate took 0.01 seconds
4
mutate took 0.02 seconds
5
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.71 seconds
6
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.57 seconds
evaluate_mse took 0.62 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.68 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.63 seconds
evaluate_mse took 0.68 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
12
mutate took 0.01 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.45 seconds
evaluate_mse took 0.48 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.63 seconds
15
mutate took 0.02 seconds
16
mutate took 0.03 seconds
17
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.56 seconds
evaluate_mse took 0.65 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
here in mutations after all complete
change (mutation) took 12.35 seconds
the_best took 0.00 seconds
97 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.46 seconds
best concise Eq: 
97 generation repeat cross over 20 times and mutation 9 times
here
begin crossover
cross_over took 3.54 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.66 seconds
2
mutate took 0.00 seconds
3
mutate took 0.02 seconds
4
mutate took 0.01 seconds
5
mutate took 0.00 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.64 seconds
evaluate_mse took 0.70 seconds
8
mutate took 0.01 seconds
9
mutate took 0.01 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.60 seconds
evaluate_mse took 0.70 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.64 seconds
12
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.67 seconds
13
mutate took 0.01 seconds
14
mutate took 0.00 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
15
mutate took 0.02 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.55 seconds
evaluate_mse took 0.59 seconds
17
mutate took 0.00 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.64 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.11 seconds
here in mutations after all complete
change (mutation) took 11.23 seconds
the_best took 0.00 seconds
98 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.51 seconds
best concise Eq: 
98 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 3.45 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
2
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
3
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.68 seconds
evaluate_mse took 0.74 seconds
4
mutate took 0.02 seconds
5
mutate took 0.02 seconds
6
mutate took 0.01 seconds
7
mutate took 0.01 seconds
8
mutate took 0.04 seconds
9
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.54 seconds
evaluate_mse took 0.60 seconds
10
mutate took 0.01 seconds
11
mutate took 0.02 seconds
12
mutate took 0.01 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.59 seconds
evaluate_mse took 0.71 seconds
13
mutate took 0.01 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.67 seconds
15
mutate took 0.02 seconds
16
mutate took 0.00 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.54 seconds
evaluate_mse took 0.59 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.62 seconds
evaluate_mse took 0.69 seconds
19
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.60 seconds
evaluate_mse took 0.69 seconds
here in mutations after all complete
change (mutation) took 11.07 seconds
the_best took 0.00 seconds
99 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
99 generation repeat cross over 20 times and mutation 10 times
here
begin crossover
cross_over took 3.02 seconds
self.num is 20
0
1
mutate took 0.01 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
2
mutate took 0.01 seconds
3
mutate took 0.02 seconds
4
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.53 seconds
evaluate_mse took 0.55 seconds
5
mutate took 0.01 seconds
6
mutate took 0.02 seconds
7
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.65 seconds
evaluate_mse took 0.75 seconds
8
mutate took 0.01 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.62 seconds
evaluate_mse took 0.66 seconds
10
mutate took 0.02 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.61 seconds
evaluate_mse took 0.74 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.55 seconds
evaluate_mse took 0.60 seconds
13
mutate took 0.01 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.58 seconds
evaluate_mse took 0.61 seconds
15
mutate took 0.00 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.61 seconds
evaluate_mse took 0.67 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.52 seconds
evaluate_mse took 0.60 seconds
17
mutate took 0.01 seconds
18
mutate took 0.01 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 0.2
tol for STR at iter 2 - 0.044444444444444446
tol for STR at iter 3 - 0.011111111111111112
tol for STR at iter 4 - 0.0031746031746031746
tol for STR at iter 5 - 0.0010582010582010583
tol for STR at iter 6 - 0.0004232804232804233
tol for STR at iter 7 - 0.00021164021164021165
tol for STR at iter 8 - 0.00014109347442680778
tol for STR at iter 9 - 0.00014109347442680778
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
here in mutations after all complete
change (mutation) took 12.12 seconds
the_best took 0.00 seconds
100 generation best_aic & best Eq: 0.7401245399872791, (u / u)
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
tol for STR at iter 0 - 1.0
tol for STR at iter 1 - 2.0
tol for STR at iter 2 - 3.0
tol for STR at iter 3 - 4.0
tol for STR at iter 4 - 5.0
tol for STR at iter 5 - 6.0
tol for STR at iter 6 - 7.0
tol for STR at iter 7 - 8.0
tol for STR at iter 8 - 9.0
tol for STR at iter 9 - 10.0
Train took 0.49 seconds
best concise Eq: 
100 generation repeat cross over 20 times and mutation 9 times
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.5
sga_p_mute =  0.3
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.38 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 ((u - uy) / (u * u)))+( ^2 uy)+(ux * ux)+( ^2 ux)+((( ^2 uy) + (u - uy)) * (u d^2 y))
evaluate_aic: 2.340124435573917
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.07 seconds
Creating the ith pde, i= 1
a_pde.visualize(): (uy d^2 x)+(ux * (u d y))+(u d^2 y)+(ux d y)
evaluate_aic: 3.810910925218941
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.95 seconds
Creating the ith pde, i= 2
a_pde.visualize(): (uy d^2 y)+( ^3 uy)+( ^2 ( ^2 u))+((ux d y) / u)
evaluate_aic: 2.3041794923662327
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.09 seconds
Creating the ith pde, i= 3
a_pde.visualize(): ((( ^2 u) / uy) d x)
evaluate_aic: 2.3401245256615417
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.44 seconds
Creating the ith pde, i= 4
a_pde.visualize(): (((ux - uy) * uy) * (uy + uy))+(((u * uy) / (u - u)) / ((uy d x) / (uy / uy)))+((u d y) d^2 x)
evaluate_aic: 2.340115137012309
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
Creating the ith pde, i= 5
a_pde.visualize(): ((( ^3 u) / (u * ux)) / ((u / uy) + ( ^2 ux)))+(u d x)+(uy * ((ux d^2 x) d y))
evaluate_aic: 5.54012361120041
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
Creating the ith pde, i= 6
a_pde.visualize(): ( ^2 (ux - u))
evaluate_aic: 2.3208211886347128
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 (uy + uy)) d x)
evaluate_aic: 2.340054613014963
evaluate_mse took 0.27 seconds
deleting took 0.00 seconds
Train took 2.51 seconds
Creating the ith pde, i= 8
a_pde.visualize(): ((u d^2 x) / ((u / uy) / (ux d y)))+( ^3 (ux d y))+(uy d x)+(( ^3 (ux d^2 y)) d^2 y)+(uy d x)
evaluate_aic: 3.9395601567852876
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
Creating the ith pde, i= 9
a_pde.visualize(): ( ^3 u)+(((u + u) d^2 y) * ( ^2 u))
evaluate_aic: 3.854326964814328
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 2.34 seconds
Creating the ith pde, i= 10
a_pde.visualize(): ( ^2 ((ux / ux) / (uy d^2 y)))+( ^3 uy)+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 2.268246583631459
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.80 seconds
Creating the ith pde, i= 11
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+((( ^3 u) / uy) * (u + u))+(uy d x)
evaluate_aic: 3.810910925218941
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.81 seconds
Creating the ith pde, i= 12
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 5.428496382448589
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 1.24 seconds
Creating the ith pde, i= 13
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((( ^3 ux) d^2 x) d^2 y)
evaluate_aic: 2.3400315644199043
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
Creating the ith pde, i= 14
a_pde.visualize(): (((uy - u) + (u - u)) * u)
evaluate_aic: 2.3110284837961617
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.41 seconds
Creating the ith pde, i= 15
a_pde.visualize(): ( ^3 u)+( ^2 uy)+(((ux d^2 y) d^2 y) d y)
evaluate_aic: 5.464009805488578
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.81 seconds
Creating the ith pde, i= 16
a_pde.visualize(): (uy d x)+(ux / u)+(ux / u)+((( ^3 uy) * uy) * ( ^2 u))
evaluate_aic: 2.3317308068125864
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.95 seconds
Creating the ith pde, i= 17
a_pde.visualize(): (u d^2 x)+(u d^2 y)
evaluate_aic: 3.7779250601351912
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.08 seconds
Creating the ith pde, i= 18
a_pde.visualize(): (ux d^2 x)
evaluate_aic: 2.340124406445905
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.97 seconds
Creating the ith pde, i= 19
a_pde.visualize(): (u d^2 y)+( ^2 u)+(ux * ux)+( ^3 ( ^2 ux))
evaluate_aic: 7.00898090679335
here
begin crossover
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.41 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.40 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.91 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.84 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.56 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.40 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.21 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 2.55 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 1.29 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.70 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.69 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.17 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.45 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.08 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.55 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.37 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.23 seconds
cross_over took 23.45 seconds
self.num is 20
0
1
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.96 seconds
evaluate_mse took 2.08 seconds
2
mutate took 0.04 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.50 seconds
evaluate_mse took 1.65 seconds
3
mutate took 0.04 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.30 seconds
evaluate_mse took 1.45 seconds
4
mutate took 0.04 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.09 seconds
evaluate_mse took 2.29 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.83 seconds
evaluate_mse took 1.01 seconds
6
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.14 seconds
7
mutate took 0.03 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
evaluate_mse took 0.65 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.58 seconds
evaluate_mse took 0.64 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.20 seconds
10
mutate took 0.01 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.23 seconds
evaluate_mse took 0.34 seconds
11
mutate took 0.01 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.09 seconds
evaluate_mse took 0.13 seconds
12
mutate took 0.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.12 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.76 seconds
evaluate_mse took 0.87 seconds
14
mutate took 0.07 seconds
evaluate_mse took 0.21 seconds
deleting took 0.02 seconds
Train took 1.44 seconds
evaluate_mse took 1.69 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.22 seconds
evaluate_mse took 2.37 seconds
16
mutate took 0.07 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 0.76 seconds
evaluate_mse took 0.94 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.23 seconds
evaluate_mse took 1.36 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.43 seconds
evaluate_mse took 1.52 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 0.79 seconds
evaluate_mse took 1.01 seconds
here in mutations after all complete
change (mutation) took 23.03 seconds
the_best took 0.00 seconds
1 generation best_aic & best Eq: 2.211137585410536, ((uy d y) / ( ^3 (uy / uy)))+( ^2 ux)+((uy * uy) / ux)
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.35 seconds
best concise Eq: 11.684((uy d y) / ( ^3 (uy / uy)))
1 generation repeat cross over 1 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.31 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.28 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.52 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.75 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.21 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.68 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.72 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.69 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.36 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.58 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.80 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 1.93 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.13 seconds
cross_over took 31.78 seconds
self.num is 20
0
1
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 1.19 seconds
2
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.26 seconds
evaluate_mse took 0.47 seconds
3
mutate took 0.10 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
evaluate_mse took 1.46 seconds
4
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.42 seconds
evaluate_mse took 1.55 seconds
5
mutate took 0.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.17 seconds
evaluate_mse took 1.28 seconds
6
mutate took 0.08 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.84 seconds
evaluate_mse took 0.97 seconds
7
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.27 seconds
8
mutate took 0.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.20 seconds
evaluate_mse took 1.34 seconds
9
mutate took 0.04 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.27 seconds
10
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.03 seconds
11
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.76 seconds
evaluate_mse took 0.91 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
evaluate_mse took 1.07 seconds
13
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.12 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.36 seconds
evaluate_mse took 1.58 seconds
15
mutate took 0.07 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.37 seconds
evaluate_mse took 2.54 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 1.99 seconds
evaluate_mse took 2.18 seconds
17
mutate took 0.07 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.19 seconds
evaluate_mse took 2.40 seconds
18
mutate took 0.07 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.65 seconds
evaluate_mse took 2.88 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.22 seconds
here in mutations after all complete
change (mutation) took 33.01 seconds
the_best took 0.01 seconds
2 generation best_aic & best Eq: 2.211137585410536, ((uy d y) / ( ^3 (uy / uy)))+( ^2 ux)+((uy * uy) / ux)
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.65 seconds
best concise Eq: 11.684((uy d y) / ( ^3 (uy / uy)))
2 generation repeat cross over 3 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.76 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.24 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.48 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
cross_over took 11.73 seconds
self.num is 20
0
1
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.98 seconds
2
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.18 seconds
3
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.16 seconds
evaluate_mse took 1.26 seconds
4
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.31 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
evaluate_mse took 1.42 seconds
6
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.63 seconds
evaluate_mse took 0.70 seconds
7
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.16 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
evaluate_mse took 0.40 seconds
9
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.78 seconds
evaluate_mse took 0.98 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.09 seconds
evaluate_mse took 0.23 seconds
11
mutate took 0.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.18 seconds
evaluate_mse took 1.31 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.44 seconds
evaluate_mse took 1.52 seconds
13
mutate took 0.07 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.56 seconds
evaluate_mse took 1.65 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.10 seconds
15
mutate took 0.03 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.26 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.29 seconds
evaluate_mse took 0.43 seconds
17
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.05 seconds
18
mutate took 0.07 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.64 seconds
evaluate_mse took 2.83 seconds
19
mutate took 0.08 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.61 seconds
evaluate_mse took 2.77 seconds
here in mutations after all complete
change (mutation) took 32.36 seconds
the_best took 0.01 seconds
3 generation best_aic & best Eq: 2.211137585410536, ((uy d y) / ( ^3 (uy / uy)))+( ^2 ux)+((uy * uy) / ux)
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.62 seconds
best concise Eq: 11.684((uy d y) / ( ^3 (uy / uy)))
3 generation repeat cross over 12 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.59 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.59 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.23 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.65 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.79 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.35 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.37 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.63 seconds
cross_over took 17.60 seconds
self.num is 20
0
1
mutate took 0.07 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.59 seconds
evaluate_mse took 1.67 seconds
2
mutate took 0.08 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.88 seconds
evaluate_mse took 2.04 seconds
3
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 1.11 seconds
4
mutate took 0.04 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.61 seconds
evaluate_mse took 0.79 seconds
5
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.75 seconds
evaluate_mse took 0.88 seconds
6
mutate took 0.06 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.58 seconds
evaluate_mse took 1.70 seconds
7
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.58 seconds
evaluate_mse took 1.71 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.29 seconds
evaluate_mse took 1.37 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.01 seconds
Train took 0.09 seconds
evaluate_mse took 0.21 seconds
10
mutate took 0.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.15 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.75 seconds
evaluate_mse took 0.84 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.88 seconds
evaluate_mse took 1.06 seconds
13
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 1.56 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.19 seconds
15
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.84 seconds
evaluate_mse took 0.97 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.22 seconds
evaluate_mse took 0.28 seconds
17
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.31 seconds
evaluate_mse took 0.42 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.27 seconds
evaluate_mse took 1.39 seconds
19
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.18 seconds
here in mutations after all complete
change (mutation) took 31.22 seconds
the_best took 0.00 seconds
4 generation best_aic & best Eq: 2.211137585410536, ((uy d y) / ( ^3 (uy / uy)))+( ^2 ux)+((uy * uy) / ux)
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
best concise Eq: 11.684((uy d y) / ( ^3 (uy / uy)))
4 generation repeat cross over 7 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.62 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.99 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.24 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.56 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.57 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.41 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.56 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.23 seconds
cross_over took 15.21 seconds
self.num is 20
0
1
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.54 seconds
evaluate_mse took 1.65 seconds
2
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.60 seconds
evaluate_mse took 1.70 seconds
3
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.59 seconds
evaluate_mse took 1.69 seconds
4
mutate took 0.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.40 seconds
evaluate_mse took 1.53 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.13 seconds
6
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.57 seconds
evaluate_mse took 1.75 seconds
7
mutate took 0.08 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.31 seconds
evaluate_mse took 0.44 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.39 seconds
evaluate_mse took 0.50 seconds
9
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
evaluate_mse took 1.64 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 0.96 seconds
11
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.26 seconds
evaluate_mse took 0.36 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.09 seconds
evaluate_mse took 0.26 seconds
13
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.48 seconds
evaluate_mse took 1.65 seconds
14
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.10 seconds
15
mutate took 0.04 seconds
evaluate_mse took 0.20 seconds
deleting took 0.01 seconds
Train took 0.93 seconds
evaluate_mse took 1.17 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.37 seconds
evaluate_mse took 1.54 seconds
17
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.31 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.70 seconds
evaluate_mse took 0.81 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.23 seconds
evaluate_mse took 0.33 seconds
here in mutations after all complete
change (mutation) took 41.09 seconds
the_best took 0.01 seconds
5 generation best_aic & best Eq: 2.211137585410536, ((uy d y) / ( ^3 (uy / uy)))+( ^2 ux)+((uy * uy) / ux)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.74 seconds
best concise Eq: 11.684((uy d y) / ( ^3 (uy / uy)))
5 generation repeat cross over 10 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.55 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.05 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.74 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.39 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.25 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.74 seconds
cross_over took 23.31 seconds
self.num is 20
0
1
mutate took 0.68 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.96 seconds
evaluate_mse took 2.08 seconds
2
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.24 seconds
evaluate_mse took 0.37 seconds
3
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.66 seconds
evaluate_mse took 1.79 seconds
4
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.14 seconds
5
mutate took 0.09 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.39 seconds
evaluate_mse took 1.53 seconds
6
mutate took 0.07 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
evaluate_mse took 1.44 seconds
7
mutate took 0.07 seconds
evaluate_mse took 0.20 seconds
deleting took 0.01 seconds
Train took 0.93 seconds
evaluate_mse took 1.17 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 1.54 seconds
9
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.28 seconds
evaluate_mse took 1.37 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.54 seconds
evaluate_mse took 0.67 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
evaluate_mse took 1.14 seconds
12
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.26 seconds
13
mutate took 0.08 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
evaluate_mse took 1.46 seconds
14
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
evaluate_mse took 1.46 seconds
15
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
evaluate_mse took 1.10 seconds
16
mutate took 0.09 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.73 seconds
evaluate_mse took 0.91 seconds
17
mutate took 0.14 seconds
evaluate_mse took 0.14 seconds
deleting took 0.02 seconds
Train took 0.39 seconds
evaluate_mse took 0.60 seconds
18
mutate took 0.08 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 1.37 seconds
evaluate_mse took 1.52 seconds
19
mutate took 0.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.60 seconds
evaluate_mse took 0.70 seconds
here in mutations after all complete
change (mutation) took 56.23 seconds
the_best took 0.01 seconds
6 generation best_aic & best Eq: 2.211137585410536, ((uy d y) / ( ^3 (uy / uy)))+( ^2 ux)+((uy * uy) / ux)
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.72 seconds
best concise Eq: 11.684((uy d y) / ( ^3 (uy / uy)))
6 generation repeat cross over 12 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.01 seconds
Train took 1.49 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.63 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.33 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.77 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.76 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.56 seconds
cross_over took 41.59 seconds
self.num is 20
0
1
mutate took 1.04 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 0.26 seconds
evaluate_mse took 0.54 seconds
2
mutate took 0.24 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.66 seconds
evaluate_mse took 1.73 seconds
3
mutate took 0.13 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.10 seconds
evaluate_mse took 1.18 seconds
4
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 1.16 seconds
evaluate_mse took 1.33 seconds
5
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.24 seconds
evaluate_mse took 0.40 seconds
6
mutate took 0.07 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.08 seconds
7
mutate took 0.08 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.76 seconds
evaluate_mse took 0.82 seconds
8
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 0.12 seconds
evaluate_mse took 0.30 seconds
9
mutate took 0.44 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.25 seconds
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.5
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.98 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 (ux / (u * uy)))+((ux * (ux + u)) * uy)+(ux / ( ^3 (u / ux)))+(uy / (u - u))+(uy / uy)
evaluate_aic: 1.5399087676603225
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
Creating the ith pde, i= 1
a_pde.visualize(): (ux * (u d y))
evaluate_aic: 1.540100678798005
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.40 seconds
Creating the ith pde, i= 2
a_pde.visualize(): ((ux - ( ^3 uy)) d^2 y)+(uy d^2 y)+( ^3 uy)
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 2.47 seconds
Creating the ith pde, i= 3
a_pde.visualize(): ((u d x) / (u d y))+(ux d^2 y)+( ^3 ux)+(( ^3 ux) d y)+(((ux * ux) + ( ^3 u)) d^2 y)
evaluate_aic: 1.5317558157918003
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.14 seconds
Creating the ith pde, i= 4
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 uy) d^2 y)+(((u d y) * (uy / u)) / ux)
evaluate_aic: 1.5400629712985123
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.56 seconds
Creating the ith pde, i= 5
a_pde.visualize(): (uy * u)
evaluate_aic: 1.5399220851153608
evaluate_mse took 0.23 seconds
deleting took 0.00 seconds
Train took 3.37 seconds
Creating the ith pde, i= 6
a_pde.visualize(): (u * ((u / u) / (uy + uy)))+(u * ((ux d^2 y) + uy))+( ^3 (ux + (u + ux)))+( ^3 (u - (uy - ux)))+( ^3 u)
evaluate_aic: 3.839178557849916
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.75 seconds
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(uy d x)
evaluate_aic: 1.5400629712985123
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.32 seconds
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 uy)
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.61 seconds
Creating the ith pde, i= 9
a_pde.visualize(): (uy d^2 x)+( ^3 u)+((u * ux) / ux)+( ^3 (ux d y))
evaluate_aic: 3.0356255198923776
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.71 seconds
Creating the ith pde, i= 10
a_pde.visualize(): (uy / ( ^3 ux))+( ^3 (u d y))
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 uy)
evaluate_aic: 1.5401228432526712
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
Creating the ith pde, i= 12
a_pde.visualize(): (ux * u)
evaluate_aic: 1.540049956188426
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.54 seconds
Creating the ith pde, i= 13
a_pde.visualize(): (((ux * u) + ux) * ( ^3 (ux - uy)))+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 1.4682465836314589
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.73 seconds
Creating the ith pde, i= 14
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_aic: 1.4111375854105357
evaluate_mse took 0.23 seconds
deleting took 0.00 seconds
Train took 4.43 seconds
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 3.0284963824485893
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.98 seconds
Creating the ith pde, i= 16
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((u d^2 y) d^2 y)
evaluate_aic: 1.4182039341881252
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.82 seconds
Creating the ith pde, i= 17
a_pde.visualize(): ((ux + (uy - u)) * u)
evaluate_aic: 1.5133569703049345
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.35 seconds
Creating the ith pde, i= 18
a_pde.visualize(): (( ^3 uy) * (u d y))
evaluate_aic: 1.5401018249678278
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
Creating the ith pde, i= 19
a_pde.visualize(): ((ux / uy) / uy)+(u * (uy d^2 x))
evaluate_aic: 1.5398694007182192
here
begin crossover
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.27 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.80 seconds
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 2.78 seconds
evaluate_mse took 0.34 seconds
deleting took 0.00 seconds
Train took 3.00 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.65 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 3.36 seconds
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 3.15 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.87 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.42 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.39 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.50 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.27 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 1.36 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.72 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.09 seconds
cross_over took 38.38 seconds
self.num is 20
0
1
mutate took 0.09 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.79 seconds
evaluate_mse took 2.91 seconds
2
mutate took 0.08 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.29 seconds
evaluate_mse took 0.44 seconds
3
mutate took 0.14 seconds
evaluate_mse took 0.19 seconds
deleting took 0.02 seconds
Train took 3.02 seconds
evaluate_mse took 3.26 seconds
4
mutate took 0.07 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.02 seconds
evaluate_mse took 1.19 seconds
5
mutate took 0.07 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 1.18 seconds
evaluate_mse took 1.35 seconds
6
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.58 seconds
evaluate_mse took 1.69 seconds
7
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.61 seconds
evaluate_mse took 1.74 seconds
8
mutate took 0.05 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.94 seconds
evaluate_mse took 2.10 seconds
9
mutate took 0.07 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.25 seconds
evaluate_mse took 0.44 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.02 seconds
Train took 1.28 seconds
evaluate_mse took 1.47 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.35 seconds
evaluate_mse took 2.48 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.96 seconds
evaluate_mse took 2.09 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.58 seconds
evaluate_mse took 0.66 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.13 seconds
15
mutate took 0.03 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.58 seconds
evaluate_mse took 0.69 seconds
16
mutate took 0.11 seconds
evaluate_mse took 0.25 seconds
deleting took 0.01 seconds
Train took 2.25 seconds
evaluate_mse took 2.54 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.58 seconds
evaluate_mse took 0.60 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.67 seconds
evaluate_mse took 0.82 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 0.15 seconds
evaluate_mse took 0.33 seconds
here in mutations after all complete
change (mutation) took 29.05 seconds
the_best took 0.00 seconds
1 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.65 seconds
best concise Eq: 11.684(uy d y)
1 generation repeat cross over 1 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.46 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 3.03 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.79 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.33 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.23 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.57 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.66 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.33 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.37 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.56 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.65 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.57 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.61 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.45 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.45 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.57 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.55 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.52 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.53 seconds
cross_over took 37.70 seconds
self.num is 20
0
1
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.40 seconds
evaluate_mse took 1.46 seconds
2
mutate took 0.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 0.61 seconds
evaluate_mse took 0.80 seconds
3
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.32 seconds
evaluate_mse took 0.49 seconds
4
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.65 seconds
evaluate_mse took 2.78 seconds
5
mutate took 0.07 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.11 seconds
evaluate_mse took 0.25 seconds
6
mutate took 0.11 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 3.97 seconds
evaluate_mse took 4.06 seconds
7
mutate took 0.10 seconds
evaluate_mse took 0.21 seconds
deleting took 0.03 seconds
Train took 0.96 seconds
evaluate_mse took 1.23 seconds
8
mutate took 0.08 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.65 seconds
evaluate_mse took 0.82 seconds
9
mutate took 0.11 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 3.75 seconds
evaluate_mse took 3.99 seconds
10
mutate took 0.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 1.57 seconds
11
mutate took 0.08 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 1.09 seconds
evaluate_mse took 1.27 seconds
12
mutate took 0.09 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.98 seconds
evaluate_mse took 1.06 seconds
13
mutate took 0.09 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.63 seconds
evaluate_mse took 1.78 seconds
14
mutate took 0.06 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.04 seconds
evaluate_mse took 3.22 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.52 seconds
evaluate_mse took 1.62 seconds
16
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.38 seconds
17
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.03 seconds
18
mutate took 0.11 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
evaluate_mse took 0.42 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.18 seconds
deleting took 0.01 seconds
Train took 1.04 seconds
evaluate_mse took 1.25 seconds
here in mutations after all complete
change (mutation) took 38.19 seconds
the_best took 0.00 seconds
2 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.54 seconds
best concise Eq: 11.684(uy d y)
2 generation repeat cross over 1 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.30 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.31 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.67 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.16 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.42 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.96 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.34 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.68 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.41 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 3.13 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.14 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.62 seconds
cross_over took 40.34 seconds
self.num is 20
0
1
mutate took 0.94 seconds
evaluate_mse took 0.14 seconds
deleting took 0.03 seconds
Train took 2.46 seconds
evaluate_mse took 2.65 seconds
2
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.94 seconds
evaluate_mse took 1.04 seconds
3
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 0.40 seconds
evaluate_mse took 0.59 seconds
4
mutate took 0.13 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.72 seconds
evaluate_mse took 2.84 seconds
5
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.01 seconds
Train took 1.55 seconds
evaluate_mse took 1.73 seconds
6
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 0.72 seconds
evaluate_mse took 0.92 seconds
7
mutate took 0.12 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.71 seconds
evaluate_mse took 1.85 seconds
8
mutate took 0.11 seconds
evaluate_mse took 0.20 seconds
deleting took 0.02 seconds
Train took 1.85 seconds
evaluate_mse took 2.10 seconds
9
mutate took 0.08 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.57 seconds
evaluate_mse took 1.71 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
Train took 0.31 seconds
evaluate_mse took 0.51 seconds
11
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.51 seconds
evaluate_mse took 1.67 seconds
12
mutate took 0.08 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.55 seconds
evaluate_mse took 0.69 seconds
13
mutate took 0.10 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.87 seconds
evaluate_mse took 2.97 seconds
14
mutate took 0.07 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.64 seconds
evaluate_mse took 2.84 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.95 seconds
evaluate_mse took 1.08 seconds
16
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.33 seconds
17
mutate took 0.08 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.83 seconds
evaluate_mse took 0.91 seconds
18
mutate took 0.05 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 1.13 seconds
evaluate_mse took 1.29 seconds
19
mutate took 0.11 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.44 seconds
evaluate_mse took 2.58 seconds
here in mutations after all complete
change (mutation) took 47.46 seconds
the_best took 0.01 seconds
3 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.74 seconds
best concise Eq: 11.684(uy d y)
3 generation repeat cross over 4 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.66 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.23 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.57 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.19 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.58 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.07 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.42 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.44 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.11 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.44 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.48 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.46 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
cross_over took 38.44 seconds
self.num is 20
0
1
mutate took 0.42 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 3.00 seconds
evaluate_mse took 3.12 seconds
2
mutate took 0.08 seconds
evaluate_mse took 0.16 seconds
deleting took 0.02 seconds
Train took 0.61 seconds
evaluate_mse took 0.80 seconds
3
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.02 seconds
Train took 0.96 seconds
evaluate_mse took 1.11 seconds
4
mutate took 0.08 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.15 seconds
evaluate_mse took 0.29 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
Train took 0.94 seconds
evaluate_mse took 1.14 seconds
6
mutate took 0.11 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.24 seconds
evaluate_mse took 2.36 seconds
7
mutate took 0.07 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.65 seconds
evaluate_mse took 2.80 seconds
8
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 1.61 seconds
9
mutate took 0.13 seconds
evaluate_mse took 0.18 seconds
deleting took 0.02 seconds
Train took 1.91 seconds
evaluate_mse took 2.14 seconds
10
mutate took 0.10 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.37 seconds
evaluate_mse took 2.51 seconds
11
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.92 seconds
evaluate_mse took 1.01 seconds
12
mutate took 0.13 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.04 seconds
evaluate_mse took 2.14 seconds
13
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.11 seconds
evaluate_mse took 0.26 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 0.20 seconds
evaluate_mse took 0.38 seconds
15
mutate took 0.04 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.54 seconds
evaluate_mse took 1.69 seconds
16
mutate took 0.08 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
17
mutate took 0.11 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.06 seconds
evaluate_mse took 2.16 seconds
18
mutate took 0.09 seconds
evaluate_mse took 0.18 seconds
deleting took 0.02 seconds
Train took 1.76 seconds
evaluate_mse took 1.98 seconds
19
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.39 seconds
evaluate_mse took 2.49 seconds
here in mutations after all complete
change (mutation) took 51.17 seconds
the_best took 0.01 seconds
4 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.61 seconds
best concise Eq: 11.684(uy d y)
4 generation repeat cross over 6 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.54 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.37 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.21 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.24 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.51 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.23 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.16 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.63 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.32 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.40 seconds
cross_over took 30.71 seconds
self.num is 20
0
1
mutate took 0.80 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 2.16 seconds
evaluate_mse took 2.48 seconds
2
mutate took 0.13 seconds
evaluate_mse took 0.17 seconds
deleting took 0.03 seconds
Train took 1.90 seconds
evaluate_mse took 2.15 seconds
3
mutate took 0.21 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.79 seconds
evaluate_mse took 2.90 seconds
4
mutate took 0.14 seconds
evaluate_mse took 0.14 seconds
deleting took 0.02 seconds
Train took 2.03 seconds
evaluate_mse took 2.21 seconds
5
mutate took 0.12 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.44 seconds
evaluate_mse took 2.55 seconds
6
mutate took 0.13 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.21 seconds
evaluate_mse took 3.35 seconds
7
mutate took 0.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.71 seconds
evaluate_mse took 1.80 seconds
8
mutate took 0.17 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.97 seconds
evaluate_mse took 3.08 seconds
9
mutate took 0.18 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.02 seconds
evaluate_mse took 3.16 seconds
10
mutate took 0.19 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 3.15 seconds
evaluate_mse took 3.26 seconds
11
mutate took 0.19 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 3.27 seconds
evaluate_mse took 3.36 seconds
12
mutate took 0.38 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.80 seconds
evaluate_mse took 1.97 seconds
13
mutate took 0.32 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.67 seconds
evaluate_mse took 1.81 seconds
14
mutate took 0.12 seconds
evaluate_mse took 0.11 seconds
deleting took 0.02 seconds
Train took 1.28 seconds
evaluate_mse took 1.43 seconds
15
mutate took 0.21 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.13 seconds
evaluate_mse took 3.26 seconds
16
mutate took 0.19 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 1.27 seconds
evaluate_mse took 1.47 seconds
17
mutate took 0.20 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 2.07 seconds
evaluate_mse took 2.29 seconds
18
mutate took 0.13 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
Train took 0.55 seconds
evaluate_mse took 0.75 seconds
19
mutate took 0.10 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.16 seconds
evaluate_mse took 0.31 seconds
here in mutations after all complete
change (mutation) took 76.08 seconds
the_best took 0.02 seconds
5 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.83 seconds
best concise Eq: 11.684(uy d y)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 219, in <module>
    sga.run(sga_run)
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 82, in run
    if best_eq.visualize() == self.prevbesteq[-5]:
                              ~~~~~~~~~~~~~~~^^^^
IndexError: list index out of range
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.5
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.34 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 (ux / (u * uy)))+((ux * (ux + u)) * uy)+(ux / ( ^3 (u / ux)))+(uy / (u - u))+(uy / uy)
evaluate_aic: 1.5399087676603225
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.31 seconds
Creating the ith pde, i= 1
a_pde.visualize(): (ux * (u d y))
evaluate_aic: 1.540100678798005
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.27 seconds
Creating the ith pde, i= 2
a_pde.visualize(): ((ux - ( ^3 uy)) d^2 y)+(uy d^2 y)+( ^3 uy)
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.29 seconds
deleting took 0.00 seconds
Train took 2.69 seconds
Creating the ith pde, i= 3
a_pde.visualize(): ((u d x) / (u d y))+(ux d^2 y)+( ^3 ux)+(( ^3 ux) d y)+(((ux * ux) + ( ^3 u)) d^2 y)
evaluate_aic: 1.5317558157918003
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.03 seconds
Creating the ith pde, i= 4
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 uy) d^2 y)+(((u d y) * (uy / u)) / ux)
evaluate_aic: 1.5400629712985123
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
Creating the ith pde, i= 5
a_pde.visualize(): (uy * u)
evaluate_aic: 1.5399220851153608
evaluate_mse took 0.28 seconds
deleting took 0.00 seconds
Train took 3.30 seconds
Creating the ith pde, i= 6
a_pde.visualize(): (u * ((u / u) / (uy + uy)))+(u * ((ux d^2 y) + uy))+( ^3 (ux + (u + ux)))+( ^3 (u - (uy - ux)))+( ^3 u)
evaluate_aic: 3.839178557849916
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.84 seconds
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(uy d x)
evaluate_aic: 1.5400629712985123
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 uy)
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 3.25 seconds
Creating the ith pde, i= 9
a_pde.visualize(): (uy d^2 x)+( ^3 u)+((u * ux) / ux)+( ^3 (ux d y))
evaluate_aic: 3.0356255198923776
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.08 seconds
Creating the ith pde, i= 10
a_pde.visualize(): (uy / ( ^3 ux))+( ^3 (u d y))
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.22 seconds
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 uy)
evaluate_aic: 1.5401228432526712
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.73 seconds
Creating the ith pde, i= 12
a_pde.visualize(): (ux * u)
evaluate_aic: 1.540049956188426
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 2.54 seconds
Creating the ith pde, i= 13
a_pde.visualize(): (((ux * u) + ux) * ( ^3 (ux - uy)))+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 1.4682465836314589
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.56 seconds
Creating the ith pde, i= 14
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_aic: 1.4111375854105357
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.84 seconds
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 3.0284963824485893
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.41 seconds
Creating the ith pde, i= 16
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((u d^2 y) d^2 y)
evaluate_aic: 1.4182039341881252
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.57 seconds
Creating the ith pde, i= 17
a_pde.visualize(): ((ux + (uy - u)) * u)
evaluate_aic: 1.5133569703049345
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
Creating the ith pde, i= 18
a_pde.visualize(): (( ^3 uy) * (u d y))
evaluate_aic: 1.5401018249678278
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.23 seconds
Creating the ith pde, i= 19
a_pde.visualize(): ((ux / uy) / uy)+(u * (uy d^2 x))
evaluate_aic: 1.5398694007182192
here
begin crossover
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 3.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 1.64 seconds
evaluate_mse took 0.25 seconds
deleting took 0.00 seconds
Train took 2.23 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.09 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 3.12 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 2.69 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.35 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.30 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.60 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.99 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
Train took 0.43 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.29 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
cross_over took 31.18 seconds
self.num is 20
0
1
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.38 seconds
evaluate_mse took 2.47 seconds
2
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.28 seconds
3
mutate took 0.09 seconds
evaluate_mse took 0.16 seconds
deleting took 0.02 seconds
Train took 1.63 seconds
evaluate_mse took 1.83 seconds
4
mutate took 0.08 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.97 seconds
evaluate_mse took 1.13 seconds
5
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.94 seconds
evaluate_mse took 1.10 seconds
6
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.43 seconds
evaluate_mse took 1.54 seconds
7
mutate took 0.08 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.80 seconds
evaluate_mse took 1.95 seconds
8
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.90 seconds
evaluate_mse took 2.07 seconds
9
mutate took 0.09 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.47 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 1.23 seconds
evaluate_mse took 1.40 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.27 seconds
evaluate_mse took 2.40 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.85 seconds
evaluate_mse took 1.98 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
evaluate_mse took 0.61 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.07 seconds
evaluate_mse took 0.10 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.55 seconds
evaluate_mse took 0.65 seconds
16
mutate took 0.08 seconds
evaluate_mse took 0.24 seconds
deleting took 0.01 seconds
Train took 2.19 seconds
evaluate_mse took 2.46 seconds
17
mutate took 0.05 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.50 seconds
evaluate_mse took 0.53 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.55 seconds
evaluate_mse took 0.68 seconds
19
mutate took 0.04 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.30 seconds
here in mutations after all complete
change (mutation) took 25.80 seconds
the_best took 0.00 seconds
1 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.40 seconds
best concise Eq: 11.684(uy d y)
1 generation repeat cross over 1 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.27 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.98 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.84 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.43 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.39 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.14 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.24 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.79 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.59 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.95 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 1.97 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.86 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.40 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.57 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.49 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.66 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.68 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.50 seconds
cross_over took 41.33 seconds
self.num is 20
0
1
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.45 seconds
evaluate_mse took 1.51 seconds
2
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.61 seconds
evaluate_mse took 0.78 seconds
3
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.33 seconds
evaluate_mse took 0.51 seconds
4
mutate took 0.07 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.66 seconds
evaluate_mse took 2.77 seconds
5
mutate took 0.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 0.14 seconds
evaluate_mse took 0.26 seconds
6
mutate took 0.11 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.80 seconds
evaluate_mse took 2.91 seconds
7
mutate took 0.10 seconds
evaluate_mse took 0.18 seconds
deleting took 0.03 seconds
Train took 0.76 seconds
evaluate_mse took 1.00 seconds
8
mutate took 0.07 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.64 seconds
evaluate_mse took 0.82 seconds
9
mutate took 0.13 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.74 seconds
evaluate_mse took 2.94 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.31 seconds
evaluate_mse took 1.40 seconds
11
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 1.02 seconds
evaluate_mse took 1.19 seconds
12
mutate took 0.08 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.91 seconds
evaluate_mse took 0.98 seconds
13
mutate took 0.08 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.73 seconds
evaluate_mse took 1.89 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.98 seconds
evaluate_mse took 3.16 seconds
15
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.34 seconds
evaluate_mse took 1.45 seconds
16
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.38 seconds
17
mutate took 0.08 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.82 seconds
evaluate_mse took 0.93 seconds
18
mutate took 0.10 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.29 seconds
evaluate_mse took 0.40 seconds
19
mutate took 0.08 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
Train took 0.98 seconds
evaluate_mse took 1.17 seconds
here in mutations after all complete
change (mutation) took 31.43 seconds
the_best took 0.00 seconds
2 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.59 seconds
best concise Eq: 11.684(uy d y)
2 generation repeat cross over 1 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.50 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.28 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.45 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.10 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.74 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.35 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.58 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.44 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.13 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.14 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.85 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.09 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.44 seconds
cross_over took 30.84 seconds
self.num is 20
0
1
mutate took 0.18 seconds
evaluate_mse took 0.13 seconds
deleting took 0.03 seconds
Train took 3.72 seconds
evaluate_mse took 3.90 seconds
2
mutate took 0.06 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.20 seconds
evaluate_mse took 1.31 seconds
3
mutate took 0.05 seconds
evaluate_mse took 0.19 seconds
deleting took 0.01 seconds
Train took 0.71 seconds
evaluate_mse took 0.97 seconds
4
mutate took 0.19 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 3.66 seconds
evaluate_mse took 3.78 seconds
5
mutate took 0.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 1.98 seconds
evaluate_mse took 2.17 seconds
6
mutate took 0.14 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 1.04 seconds
evaluate_mse took 1.25 seconds
7
mutate took 0.12 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.10 seconds
evaluate_mse took 2.26 seconds
8
mutate took 0.12 seconds
evaluate_mse took 0.20 seconds
deleting took 0.02 seconds
Train took 1.88 seconds
evaluate_mse took 2.13 seconds
9
mutate took 0.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.80 seconds
evaluate_mse took 1.93 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
Train took 0.33 seconds
evaluate_mse took 0.52 seconds
11
mutate took 0.08 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.89 seconds
evaluate_mse took 2.07 seconds
12
mutate took 0.12 seconds
evaluate_mse took 0.14 seconds
deleting took 0.02 seconds
Train took 0.72 seconds
evaluate_mse took 0.92 seconds
13
mutate took 0.12 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 3.66 seconds
evaluate_mse took 3.77 seconds
14
mutate took 0.06 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 3.16 seconds
evaluate_mse took 3.36 seconds
15
mutate took 0.09 seconds
evaluate_mse took 0.14 seconds
deleting took 0.07 seconds
Train took 1.33 seconds
evaluate_mse took 1.57 seconds
16
mutate took 0.08 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.29 seconds
evaluate_mse took 0.44 seconds
17
mutate took 0.09 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.02 seconds
evaluate_mse took 2.12 seconds
18
mutate took 0.07 seconds
evaluate_mse took 0.23 seconds
deleting took 0.03 seconds
Train took 1.49 seconds
evaluate_mse took 1.76 seconds
19
mutate took 0.14 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.72 seconds
evaluate_mse took 2.85 seconds
here in mutations after all complete
change (mutation) took 60.44 seconds
the_best took 0.00 seconds
3 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.61 seconds
best concise Eq: 11.684(uy d y)
3 generation repeat cross over 4 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.91 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.27 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.75 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.19 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.19 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.52 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.55 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.50 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.12 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.51 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.57 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.45 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.25 seconds
cross_over took 43.21 seconds
self.num is 20
0
1
mutate took 0.35 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.01 seconds
evaluate_mse took 3.14 seconds
2
mutate took 0.07 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 0.58 seconds
evaluate_mse took 0.80 seconds
3
mutate took 0.07 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 1.02 seconds
evaluate_mse took 1.15 seconds
4
mutate took 0.09 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 0.16 seconds
evaluate_mse took 0.29 seconds
5
mutate took 0.07 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 1.12 seconds
evaluate_mse took 1.30 seconds
6
mutate took 0.12 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.09 seconds
evaluate_mse took 2.25 seconds
7
mutate took 0.09 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.66 seconds
evaluate_mse took 2.82 seconds
8
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 1.62 seconds
9
mutate took 0.14 seconds
evaluate_mse took 0.18 seconds
deleting took 0.03 seconds
Train took 2.03 seconds
evaluate_mse took 2.26 seconds
10
mutate took 0.10 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.39 seconds
evaluate_mse took 2.52 seconds
11
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.89 seconds
evaluate_mse took 0.97 seconds
12
mutate took 0.12 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.17 seconds
evaluate_mse took 2.28 seconds
13
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.12 seconds
evaluate_mse took 0.27 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.01 seconds
Train took 0.24 seconds
evaluate_mse took 0.44 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.50 seconds
evaluate_mse took 1.68 seconds
16
mutate took 0.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.25 seconds
17
mutate took 0.11 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.07 seconds
evaluate_mse took 2.17 seconds
18
mutate took 0.08 seconds
evaluate_mse took 0.19 seconds
deleting took 0.02 seconds
Train took 1.72 seconds
evaluate_mse took 1.95 seconds
19
mutate took 0.09 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.48 seconds
evaluate_mse took 2.59 seconds
here in mutations after all complete
change (mutation) took 51.05 seconds
the_best took 0.04 seconds
4 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 3.73 seconds
best concise Eq: 11.684(uy d y)
4 generation repeat cross over 6 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.48 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.36 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.54 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.68 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.95 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.20 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.85 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.41 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.09 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.58 seconds
cross_over took 34.73 seconds
self.num is 20
0
1
mutate took 1.05 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.60 seconds
evaluate_mse took 2.82 seconds
2
mutate took 0.34 seconds
evaluate_mse took 0.15 seconds
deleting took 0.03 seconds
Train took 2.38 seconds
evaluate_mse took 2.60 seconds
3
mutate took 0.21 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 3.41 seconds
evaluate_mse took 3.55 seconds
4
mutate took 0.21 seconds
evaluate_mse took 0.20 seconds
deleting took 0.02 seconds
Train took 2.14 seconds
evaluate_mse took 2.38 seconds
5
mutate took 0.13 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.69 seconds
evaluate_mse took 2.80 seconds
6
mutate took 0.16 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 3.14 seconds
evaluate_mse took 3.29 seconds
7
mutate took 0.07 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.56 seconds
evaluate_mse took 1.64 seconds
8
mutate took 0.12 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.66 seconds
evaluate_mse took 2.76 seconds
9
mutate took 0.15 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.88 seconds
evaluate_mse took 3.03 seconds
10
mutate took 0.19 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.95 seconds
evaluate_mse took 3.07 seconds
11
mutate took 0.14 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.85 seconds
evaluate_mse took 2.95 seconds
12
mutate took 0.08 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 1.65 seconds
13
mutate took 0.12 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
evaluate_mse took 1.44 seconds
14
mutate took 0.09 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 1.03 seconds
evaluate_mse took 1.18 seconds
15
mutate took 0.16 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.58 seconds
evaluate_mse took 2.72 seconds
16
mutate took 0.15 seconds
evaluate_mse took 0.14 seconds
deleting took 0.02 seconds
Train took 1.07 seconds
evaluate_mse took 1.24 seconds
17
mutate took 0.14 seconds
evaluate_mse took 0.18 seconds
deleting took 0.02 seconds
Train took 1.76 seconds
evaluate_mse took 1.98 seconds
18
mutate took 0.07 seconds
evaluate_mse took 0.16 seconds
deleting took 0.01 seconds
Train took 0.61 seconds
evaluate_mse took 0.80 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 0.16 seconds
evaluate_mse took 0.34 seconds
here in mutations after all complete
change (mutation) took 79.46 seconds
the_best took 0.01 seconds
5 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.87 seconds
best concise Eq: 11.684(uy d y)
5 generation repeat cross over 7 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 2.64 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.50 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.65 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.25 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.65 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 3.16 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.55 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.57 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.58 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.45 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.53 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.44 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.38 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.35 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.63 seconds
cross_over took 64.06 seconds
self.num is 20
0
1
mutate took 1.29 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.91 seconds
evaluate_mse took 3.07 seconds
2
mutate took 0.35 seconds
evaluate_mse took 0.20 seconds
deleting took 0.05 seconds
Train took 0.78 seconds
evaluate_mse took 1.05 seconds
3
mutate took 0.23 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.78 seconds
evaluate_mse took 1.86 seconds
4
mutate took 0.25 seconds
evaluate_mse took 0.16 seconds
deleting took 0.01 seconds
Train took 1.15 seconds
evaluate_mse took 1.35 seconds
5
mutate took 0.58 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 3.27 seconds
evaluate_mse took 3.37 seconds
6
mutate took 0.15 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.22 seconds
evaluate_mse took 2.34 seconds
7
mutate took 0.22 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.71 seconds
evaluate_mse took 2.88 seconds
8
mutate took 0.08 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.55 seconds
evaluate_mse took 0.67 seconds
9
mutate took 0.09 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.56 seconds
evaluate_mse took 1.66 seconds
10
mutate took 0.15 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.76 seconds
evaluate_mse took 2.86 seconds
11
mutate took 0.33 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.83 seconds
evaluate_mse took 2.98 seconds
12
mutate took 0.11 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.42 seconds
evaluate_mse took 0.54 seconds
13
mutate took 0.12 seconds
evaluate_mse took 0.19 seconds
deleting took 0.01 seconds
Train took 0.62 seconds
evaluate_mse took 0.87 seconds
14
mutate took 0.17 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.73 seconds
evaluate_mse took 2.88 seconds
15
mutate took 0.11 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.53 seconds
evaluate_mse took 1.61 seconds
16
mutate took 0.11 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.63 seconds
evaluate_mse took 0.79 seconds
17
mutate took 0.12 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.51 seconds
evaluate_mse took 1.67 seconds
18
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.58 seconds
evaluate_mse took 1.74 seconds
19
mutate took 0.15 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 1.55 seconds
here in mutations after all complete
change (mutation) took 114.95 seconds
the_best took 0.03 seconds
6 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.81 seconds
best concise Eq: 11.684(uy d y)
The best equation has not changed for 5 generations, stop the iteration
sga_num =  20
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.5
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.07 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 (ux / (u * uy)))+((ux * (ux + u)) * uy)+(ux / ( ^3 (u / ux)))+(uy / (u - u))+(uy / uy)
evaluate_aic: 1.5399087676603225
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.26 seconds
Creating the ith pde, i= 1
a_pde.visualize(): (ux * (u d y))
evaluate_aic: 1.540100678798005
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.09 seconds
Creating the ith pde, i= 2
a_pde.visualize(): ((ux - ( ^3 uy)) d^2 y)+(uy d^2 y)+( ^3 uy)
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 2.29 seconds
Creating the ith pde, i= 3
a_pde.visualize(): ((u d x) / (u d y))+(ux d^2 y)+( ^3 ux)+(( ^3 ux) d y)+(((ux * ux) + ( ^3 u)) d^2 y)
evaluate_aic: 1.5317558157918003
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.87 seconds
Creating the ith pde, i= 4
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 uy) d^2 y)+(((u d y) * (uy / u)) / ux)
evaluate_aic: 1.5400629712985123
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.48 seconds
Creating the ith pde, i= 5
a_pde.visualize(): (uy * u)
evaluate_aic: 1.5399220851153608
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 3.25 seconds
Creating the ith pde, i= 6
a_pde.visualize(): (u * ((u / u) / (uy + uy)))+(u * ((ux d^2 y) + uy))+( ^3 (ux + (u + ux)))+( ^3 (u - (uy - ux)))+( ^3 u)
evaluate_aic: 3.839178557849916
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.61 seconds
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(uy d x)
evaluate_aic: 1.5400629712985123
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 uy)
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.63 seconds
Creating the ith pde, i= 9
a_pde.visualize(): (uy d^2 x)+( ^3 u)+((u * ux) / ux)+( ^3 (ux d y))
evaluate_aic: 3.0356255198923776
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.56 seconds
Creating the ith pde, i= 10
a_pde.visualize(): (uy / ( ^3 ux))+( ^3 (u d y))
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 uy)
evaluate_aic: 1.5401228432526712
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.40 seconds
Creating the ith pde, i= 12
a_pde.visualize(): (ux * u)
evaluate_aic: 1.540049956188426
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 1.85 seconds
Creating the ith pde, i= 13
a_pde.visualize(): (((ux * u) + ux) * ( ^3 (ux - uy)))+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 1.4682465836314589
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.70 seconds
Creating the ith pde, i= 14
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_aic: 1.4111375854105357
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.65 seconds
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 3.0284963824485893
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.42 seconds
Creating the ith pde, i= 16
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((u d^2 y) d^2 y)
evaluate_aic: 1.4182039341881252
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
Creating the ith pde, i= 17
a_pde.visualize(): ((ux + (uy - u)) * u)
evaluate_aic: 1.5133569703049345
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
Creating the ith pde, i= 18
a_pde.visualize(): (( ^3 uy) * (u d y))
evaluate_aic: 1.5401018249678278
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.96 seconds
Creating the ith pde, i= 19
a_pde.visualize(): ((ux / uy) / uy)+(u * (uy d^2 x))
evaluate_aic: 1.5398694007182192
here
begin crossover
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.45 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.45 seconds
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 2.11 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.76 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.51 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.77 seconds
evaluate_mse took 0.23 seconds
deleting took 0.00 seconds
Train took 2.40 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.24 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.85 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.26 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.98 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.87 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.66 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.48 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.27 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.84 seconds
cross_over took 28.03 seconds
self.num is 20
0
1
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.70 seconds
evaluate_mse took 2.84 seconds
2
mutate took 0.08 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.22 seconds
evaluate_mse took 0.34 seconds
3
mutate took 0.10 seconds
evaluate_mse took 0.18 seconds
deleting took 0.02 seconds
Train took 1.31 seconds
evaluate_mse took 1.53 seconds
4
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.93 seconds
evaluate_mse took 1.09 seconds
5
mutate took 0.08 seconds
evaluate_mse took 0.16 seconds
deleting took 0.01 seconds
Train took 1.08 seconds
evaluate_mse took 1.26 seconds
6
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.46 seconds
evaluate_mse took 1.55 seconds
7
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.34 seconds
evaluate_mse took 1.46 seconds
8
mutate took 0.11 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.64 seconds
evaluate_mse took 1.78 seconds
9
mutate took 0.07 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.36 seconds
evaluate_mse took 0.53 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.19 seconds
deleting took 0.03 seconds
Train took 1.22 seconds
evaluate_mse took 1.49 seconds
11
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.99 seconds
evaluate_mse took 2.10 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.79 seconds
evaluate_mse took 1.92 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.54 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.08 seconds
evaluate_mse took 0.11 seconds
15
mutate took 0.03 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.47 seconds
evaluate_mse took 0.59 seconds
16
mutate took 0.08 seconds
evaluate_mse took 0.23 seconds
deleting took 0.01 seconds
Train took 1.84 seconds
evaluate_mse took 2.09 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.48 seconds
evaluate_mse took 0.50 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
evaluate_mse took 0.64 seconds
19
mutate took 0.04 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.29 seconds
here in mutations after all complete
change (mutation) took 24.57 seconds
the_best took 0.00 seconds
1 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.50 seconds
best concise Eq: 11.684(uy d y)
1 generation repeat cross over 1 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.39 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.47 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.45 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.81 seconds
evaluate_mse took 0.32 seconds
deleting took 0.00 seconds
Train took 2.35 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 3.28 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.61 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.51 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.99 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.94 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 1.93 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.87 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.67 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 1.87 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.78 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.75 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.95 seconds
cross_over took 43.23 seconds
self.num is 20
0
1
mutate took 0.07 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.85 seconds
evaluate_mse took 1.95 seconds
2
mutate took 0.10 seconds
evaluate_mse took 0.18 seconds
deleting took 0.02 seconds
Train took 0.77 seconds
evaluate_mse took 1.01 seconds
3
mutate took 0.10 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 0.43 seconds
evaluate_mse took 0.67 seconds
4
mutate took 0.09 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 3.40 seconds
evaluate_mse took 3.56 seconds
5
mutate took 0.12 seconds
evaluate_mse took 0.12 seconds
deleting took 0.02 seconds
Train took 0.19 seconds
evaluate_mse took 0.37 seconds
6
mutate took 0.18 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 3.52 seconds
evaluate_mse took 3.64 seconds
7
mutate took 0.15 seconds
evaluate_mse took 0.29 seconds
deleting took 0.06 seconds
Train took 1.02 seconds
evaluate_mse took 1.42 seconds
8
mutate took 0.10 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.68 seconds
evaluate_mse took 0.87 seconds
9
mutate took 0.15 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 3.40 seconds
evaluate_mse took 3.64 seconds
10
mutate took 0.12 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.72 seconds
evaluate_mse took 1.82 seconds
11
mutate took 0.10 seconds
evaluate_mse took 0.16 seconds
deleting took 0.01 seconds
Train took 1.30 seconds
evaluate_mse took 1.53 seconds
12
mutate took 0.13 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.12 seconds
evaluate_mse took 1.21 seconds
13
mutate took 0.10 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.82 seconds
evaluate_mse took 1.98 seconds
14
mutate took 0.08 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 3.52 seconds
evaluate_mse took 3.74 seconds
15
mutate took 0.08 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.66 seconds
evaluate_mse took 1.82 seconds
16
mutate took 0.10 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.40 seconds
evaluate_mse took 0.53 seconds
17
mutate took 0.08 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.04 seconds
evaluate_mse took 1.15 seconds
18
mutate took 0.16 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.34 seconds
evaluate_mse took 0.49 seconds
19
mutate took 0.08 seconds
evaluate_mse took 0.22 seconds
deleting took 0.02 seconds
Train took 1.27 seconds
evaluate_mse took 1.53 seconds
here in mutations after all complete
change (mutation) took 38.71 seconds
the_best took 0.00 seconds
2 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.92 seconds
best concise Eq: 11.684(uy d y)
2 generation repeat cross over 1 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.80 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.91 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.24 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.26 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.83 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.27 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.05 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 0.49 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 3.67 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.37 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.76 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.82 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 3.64 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.63 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.20 seconds
cross_over took 43.35 seconds
self.num is 20
0
1
mutate took 0.34 seconds
evaluate_mse took 0.31 seconds
deleting took 0.05 seconds
Train took 4.26 seconds
evaluate_mse took 4.72 seconds
2
mutate took 0.10 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.55 seconds
evaluate_mse took 1.72 seconds
3
mutate took 0.09 seconds
evaluate_mse took 0.23 seconds
deleting took 0.01 seconds
Train took 0.64 seconds
evaluate_mse took 0.93 seconds
4
mutate took 0.22 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.96 seconds
evaluate_mse took 4.15 seconds
5
mutate took 0.08 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.07 seconds
evaluate_mse took 2.29 seconds
6
mutate took 0.11 seconds
evaluate_mse took 0.36 seconds
deleting took 0.04 seconds
Train took 1.35 seconds
evaluate_mse took 1.81 seconds
7
mutate took 0.23 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 2.80 seconds
evaluate_mse took 3.08 seconds
8
mutate took 0.19 seconds
evaluate_mse took 0.40 seconds
deleting took 0.04 seconds
Train took 2.67 seconds
evaluate_mse took 3.16 seconds
9
mutate took 0.09 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.50 seconds
evaluate_mse took 2.67 seconds
10
mutate took 0.13 seconds
evaluate_mse took 0.29 seconds
deleting took 0.03 seconds
Train took 0.42 seconds
evaluate_mse took 0.76 seconds
11
mutate took 0.10 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.05 seconds
evaluate_mse took 2.30 seconds
12
mutate took 0.14 seconds
evaluate_mse took 0.18 seconds
deleting took 0.02 seconds
Train took 0.90 seconds
evaluate_mse took 1.15 seconds
13
mutate took 0.22 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 4.25 seconds
evaluate_mse took 4.38 seconds
14
mutate took 0.11 seconds
evaluate_mse took 0.29 seconds
deleting took 0.00 seconds
Train took 4.35 seconds
evaluate_mse took 4.68 seconds
15
mutate took 0.11 seconds
evaluate_mse took 0.15 seconds
deleting took 0.02 seconds
Train took 1.34 seconds
evaluate_mse took 1.53 seconds
16
mutate took 0.13 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.47 seconds
17
mutate took 0.12 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.21 seconds
evaluate_mse took 1.34 seconds
18
mutate took 0.08 seconds
evaluate_mse took 0.18 seconds
deleting took 0.01 seconds
Train took 1.40 seconds
evaluate_mse took 1.62 seconds
19
mutate took 0.16 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 3.28 seconds
evaluate_mse took 3.45 seconds
here in mutations after all complete
change (mutation) took 70.03 seconds
the_best took 0.01 seconds
3 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 3.26 seconds
best concise Eq: 11.684(uy d y)
3 generation repeat cross over 4 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 3.45 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.68 seconds
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 3.47 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.83 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.99 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.54 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.98 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.93 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.54 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.18 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 3.13 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.95 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.67 seconds
cross_over took 51.81 seconds
self.num is 20
0
1
mutate took 0.89 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 4.12 seconds
evaluate_mse took 4.28 seconds
2
mutate took 0.11 seconds
evaluate_mse took 0.28 seconds
deleting took 0.02 seconds
Train took 0.87 seconds
evaluate_mse took 1.19 seconds
3
mutate took 0.14 seconds
evaluate_mse took 0.15 seconds
deleting took 0.02 seconds
Train took 1.38 seconds
evaluate_mse took 1.59 seconds
4
mutate took 0.14 seconds
evaluate_mse took 0.13 seconds
deleting took 0.02 seconds
Train took 0.20 seconds
evaluate_mse took 0.41 seconds
5
mutate took 0.09 seconds
evaluate_mse took 0.26 seconds
deleting took 0.02 seconds
Train took 1.40 seconds
evaluate_mse took 1.70 seconds
6
mutate took 0.19 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.83 seconds
evaluate_mse took 3.00 seconds
7
mutate took 0.11 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 3.24 seconds
evaluate_mse took 3.46 seconds
8
mutate took 0.12 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 1.82 seconds
evaluate_mse took 2.03 seconds
9
mutate took 0.20 seconds
evaluate_mse took 0.22 seconds
deleting took 0.03 seconds
Train took 2.34 seconds
evaluate_mse took 2.62 seconds
10
mutate took 0.16 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.98 seconds
evaluate_mse took 3.15 seconds
11
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.13 seconds
evaluate_mse took 1.23 seconds
12
mutate took 0.19 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.63 seconds
evaluate_mse took 2.77 seconds
13
mutate took 0.10 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 0.17 seconds
evaluate_mse took 0.36 seconds
14
mutate took 0.08 seconds
evaluate_mse took 0.22 seconds
deleting took 0.01 seconds
Train took 0.26 seconds
evaluate_mse took 0.51 seconds
15
mutate took 0.07 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 2.12 seconds
16
mutate took 0.12 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.22 seconds
evaluate_mse took 0.34 seconds
17
mutate took 0.16 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.50 seconds
evaluate_mse took 2.60 seconds
18
mutate took 0.13 seconds
evaluate_mse took 0.28 seconds
deleting took 0.02 seconds
Train took 2.34 seconds
evaluate_mse took 2.67 seconds
19
mutate took 0.14 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 3.00 seconds
evaluate_mse took 3.13 seconds
here in mutations after all complete
change (mutation) took 77.20 seconds
the_best took 0.05 seconds
4 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 3.23 seconds
best concise Eq: 11.684(uy d y)
4 generation repeat cross over 6 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.97 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 0.45 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.71 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.63 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.68 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 3.20 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.63 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.47 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 3.20 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.44 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.66 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.80 seconds
cross_over took 53.59 seconds
self.num is 20
0
1
mutate took 1.43 seconds
evaluate_mse took 0.23 seconds
deleting took 0.00 seconds
Train took 2.11 seconds
evaluate_mse took 2.43 seconds
2
sga_num =  30
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.75
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 2.71 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 (ux / (u * uy)))+((ux * (ux + u)) * uy)+(ux / ( ^3 (u / ux)))+(uy / (u - u))+(uy / uy)
evaluate_aic: 1.5399087676603225
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.34 seconds
Creating the ith pde, i= 1
a_pde.visualize(): (ux * (u d y))
evaluate_aic: 1.540100678798005
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 1.56 seconds
Creating the ith pde, i= 2
a_pde.visualize(): ((ux - ( ^3 uy)) d^2 y)+(uy d^2 y)+( ^3 uy)
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.30 seconds
deleting took 0.00 seconds
Train took 2.78 seconds
Creating the ith pde, i= 3
a_pde.visualize(): ((u d x) / (u d y))+(ux d^2 y)+( ^3 ux)+(( ^3 ux) d y)+(((ux * ux) + ( ^3 u)) d^2 y)
evaluate_aic: 1.5317558157918003
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.20 seconds
Creating the ith pde, i= 4
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 uy) d^2 y)+(((u d y) * (uy / u)) / ux)
evaluate_aic: 1.5400629712985123
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.68 seconds
Creating the ith pde, i= 5
a_pde.visualize(): (uy * u)
evaluate_aic: 1.5399220851153608
evaluate_mse took 0.29 seconds
deleting took 0.00 seconds
Train took 3.53 seconds
Creating the ith pde, i= 6
a_pde.visualize(): (u * ((u / u) / (uy + uy)))+(u * ((ux d^2 y) + uy))+( ^3 (ux + (u + ux)))+( ^3 (u - (uy - ux)))+( ^3 u)
evaluate_aic: 3.839178557849916
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.82 seconds
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(uy d x)
evaluate_aic: 1.5400629712985123
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.41 seconds
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 uy)
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.67 seconds
Creating the ith pde, i= 9
a_pde.visualize(): (uy d^2 x)+( ^3 u)+((u * ux) / ux)+( ^3 (ux d y))
evaluate_aic: 3.0356255198923776
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 0.81 seconds
Creating the ith pde, i= 10
a_pde.visualize(): (uy / ( ^3 ux))+( ^3 (u d y))
evaluate_aic: 1.5400883324541401
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 uy)
evaluate_aic: 1.5401228432526712
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
Creating the ith pde, i= 12
a_pde.visualize(): (ux * u)
evaluate_aic: 1.540049956188426
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 2.54 seconds
Creating the ith pde, i= 13
a_pde.visualize(): (((ux * u) + ux) * ( ^3 (ux - uy)))+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 1.4682465836314589
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.97 seconds
Creating the ith pde, i= 14
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_aic: 1.4111375854105357
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 3.33 seconds
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 3.0284963824485893
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 1.94 seconds
Creating the ith pde, i= 16
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((u d^2 y) d^2 y)
evaluate_aic: 1.4182039341881252
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.77 seconds
Creating the ith pde, i= 17
a_pde.visualize(): ((ux + (uy - u)) * u)
evaluate_aic: 1.5133569703049345
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.34 seconds
Creating the ith pde, i= 18
a_pde.visualize(): (( ^3 uy) * (u d y))
evaluate_aic: 1.5401018249678278
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.34 seconds
Creating the ith pde, i= 19
a_pde.visualize(): ((ux / uy) / uy)+(u * (uy d^2 x))
evaluate_aic: 1.5398694007182192
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 1.28 seconds
Creating the ith pde, i= 20
a_pde.visualize(): ( ^2 u)+(ux * (u / u))
evaluate_aic: 1.5052985595784145
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.82 seconds
Creating the ith pde, i= 21
a_pde.visualize(): (uy / (u * (ux - u)))+(ux * uy)+((u - ux) d x)+( ^3 ux)
evaluate_aic: 2.2691970605014244
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.72 seconds
Creating the ith pde, i= 22
a_pde.visualize(): ( ^2 ux)
evaluate_aic: 1.5400315644199043
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.43 seconds
Creating the ith pde, i= 23
a_pde.visualize(): ( ^2 u)+((ux d^2 y) / ( ^2 (uy / u)))+((u - uy) * (uy * (ux / uy)))+( ^3 ux)
evaluate_aic: 1.5052985595784145
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.07 seconds
Creating the ith pde, i= 24
a_pde.visualize(): (u d y)+(u d y)+( ^2 ux)+( ^3 (( ^3 u) / uy))
evaluate_aic: 1.5400315644199043
evaluate_mse took 0.27 seconds
deleting took 0.00 seconds
Train took 1.00 seconds
Creating the ith pde, i= 25
a_pde.visualize(): (uy d^2 x)+( ^3 ((uy * uy) * ( ^3 ux)))+( ^3 (uy - ux))
evaluate_aic: 2.3400723401166728
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.37 seconds
Creating the ith pde, i= 26
a_pde.visualize(): (( ^2 u) d^2 y)+( ^3 uy)
evaluate_aic: 1.4939235726961466
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.71 seconds
Creating the ith pde, i= 27
a_pde.visualize(): (((uy / u) - u) d x)+(ux * ( ^3 ( ^2 ux)))+(uy / u)
evaluate_aic: 1.539930916022084
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.31 seconds
Creating the ith pde, i= 28
a_pde.visualize(): (uy d^2 y)+(ux / ux)+( ^3 ux)+(uy / ux)
evaluate_aic: 1.5400778309560876
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.42 seconds
Creating the ith pde, i= 29
a_pde.visualize(): ((( ^2 uy) d^2 x) d y)
evaluate_aic: 1.5400664990548574
here
begin crossover
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.90 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 1.36 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.61 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.76 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.44 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.40 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.33 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.76 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.53 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 1.23 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 1.36 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 3.00 seconds
evaluate_mse took 0.30 seconds
deleting took 0.00 seconds
Train took 3.58 seconds
evaluate_mse took 0.29 seconds
deleting took 0.00 seconds
Train took 2.94 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 1.98 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.36 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 2.00 seconds
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 2.90 seconds
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 0.32 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.62 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 1.88 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 1.92 seconds
evaluate_mse took 0.00 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 0.24 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.55 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.63 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 1.19 seconds
cross_over took 50.66 seconds
self.num is 30
0
1
mutate took 0.16 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.91 seconds
evaluate_mse took 3.00 seconds
2
mutate took 0.15 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.76 seconds
evaluate_mse took 2.95 seconds
3
mutate took 0.15 seconds
evaluate_mse took 0.21 seconds
deleting took 0.02 seconds
Train took 1.98 seconds
evaluate_mse took 2.25 seconds
4
mutate took 0.17 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.99 seconds
evaluate_mse took 2.10 seconds
5
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.34 seconds
evaluate_mse took 0.45 seconds
6
mutate took 0.08 seconds
evaluate_mse took 0.24 seconds
deleting took 0.02 seconds
Train took 0.60 seconds
evaluate_mse took 0.87 seconds
7
mutate took 0.10 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.27 seconds
evaluate_mse took 0.42 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.25 seconds
9
mutate took 0.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.25 seconds
evaluate_mse took 0.35 seconds
10
mutate took 0.12 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.38 seconds
evaluate_mse took 2.46 seconds
11
mutate took 0.12 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.27 seconds
evaluate_mse took 0.48 seconds
12
mutate took 0.10 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 2.45 seconds
evaluate_mse took 2.68 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.40 seconds
14
mutate took 0.01 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.24 seconds
evaluate_mse took 0.38 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.42 seconds
evaluate_mse took 0.52 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.53 seconds
evaluate_mse took 0.57 seconds
17
mutate took 0.08 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.21 seconds
18
mutate took 0.05 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.27 seconds
19
mutate took 0.12 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.46 seconds
evaluate_mse took 2.67 seconds
20
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.75 seconds
evaluate_mse took 0.85 seconds
21
mutate took 0.14 seconds
evaluate_mse took 0.28 seconds
deleting took 0.04 seconds
Train took 1.01 seconds
evaluate_mse took 1.38 seconds
22
mutate took 0.15 seconds
evaluate_mse took 0.23 seconds
deleting took 0.03 seconds
Train took 0.43 seconds
evaluate_mse took 0.71 seconds
23
mutate took 0.11 seconds
evaluate_mse took 0.21 seconds
deleting took 0.02 seconds
Train took 0.35 seconds
evaluate_mse took 0.60 seconds
24
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.21 seconds
25
mutate took 0.06 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.27 seconds
evaluate_mse took 1.40 seconds
26
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.72 seconds
evaluate_mse took 0.80 seconds
27
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.65 seconds
evaluate_mse took 0.70 seconds
28
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.48 seconds
evaluate_mse took 0.63 seconds
29
mutate took 0.15 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.85 seconds
evaluate_mse took 2.97 seconds
here in mutations after all complete
change (mutation) took 37.54 seconds
the_best took 0.00 seconds
1 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.75 seconds
best concise Eq: 11.684(uy d y)
1 generation repeat cross over 2 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.86 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 1.26 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.97 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 3.15 seconds
evaluate_mse took 0.18 seconds
deleting took 0.01 seconds
Train took 3.32 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.77 seconds
evaluate_mse took 0.27 seconds
deleting took 0.00 seconds
Train took 2.83 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.88 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.88 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.88 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.62 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 1.92 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 3.19 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.61 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.75 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.99 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 1.94 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 1.75 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.80 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 1.65 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.24 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.62 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.29 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 1.83 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.20 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 3.23 seconds
cross_over took 68.62 seconds
self.num is 30
0
1
mutate took 0.17 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 3.24 seconds
evaluate_mse took 3.48 seconds
2
mutate took 0.16 seconds
evaluate_mse took 0.18 seconds
deleting took 0.03 seconds
Train took 2.23 seconds
evaluate_mse took 2.46 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.17 seconds
4
mutate took 0.14 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.35 seconds
evaluate_mse took 0.54 seconds
5
mutate took 0.14 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.39 seconds
evaluate_mse took 1.53 seconds
6
mutate took 0.17 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.65 seconds
evaluate_mse took 2.80 seconds
7
mutate took 0.16 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.85 seconds
evaluate_mse took 2.99 seconds
8
mutate took 0.15 seconds
evaluate_mse took 0.13 seconds
deleting took 0.03 seconds
Train took 1.85 seconds
evaluate_mse took 2.04 seconds
9
mutate took 0.14 seconds
evaluate_mse took 0.18 seconds
deleting took 0.03 seconds
Train took 2.03 seconds
evaluate_mse took 2.27 seconds
10
mutate took 0.15 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.89 seconds
evaluate_mse took 3.01 seconds
11
mutate took 0.14 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 3.39 seconds
evaluate_mse took 3.47 seconds
12
mutate took 0.18 seconds
evaluate_mse took 0.14 seconds
deleting took 0.02 seconds
Train took 2.34 seconds
evaluate_mse took 2.53 seconds
13
mutate took 0.14 seconds
evaluate_mse took 0.15 seconds
deleting took 0.03 seconds
Train took 0.33 seconds
evaluate_mse took 0.54 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
evaluate_mse took 0.56 seconds
15
mutate took 0.14 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.32 seconds
evaluate_mse took 3.52 seconds
16
mutate took 0.18 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 3.19 seconds
evaluate_mse took 3.34 seconds
17
mutate took 0.11 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.03 seconds
evaluate_mse took 2.16 seconds
18
mutate took 0.10 seconds
evaluate_mse took 0.23 seconds
deleting took 0.02 seconds
Train took 1.22 seconds
evaluate_mse took 1.49 seconds
19
mutate took 0.17 seconds
evaluate_mse took 0.16 seconds
deleting took 0.04 seconds
Train took 0.32 seconds
evaluate_mse took 0.55 seconds
20
mutate took 0.13 seconds
evaluate_mse took 0.19 seconds
deleting took 0.02 seconds
Train took 1.21 seconds
evaluate_mse took 1.44 seconds
21
mutate took 0.13 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.50 seconds
evaluate_mse took 1.60 seconds
22
mutate took 0.07 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.26 seconds
evaluate_mse took 0.34 seconds
23
mutate took 0.02 seconds
24
mutate took 0.04 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.16 seconds
25
mutate took 0.11 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.04 seconds
evaluate_mse took 2.18 seconds
26
mutate took 0.10 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.86 seconds
evaluate_mse took 0.95 seconds
27
mutate took 0.10 seconds
evaluate_mse took 0.25 seconds
deleting took 0.02 seconds
Train took 0.25 seconds
evaluate_mse took 0.55 seconds
28
mutate took 0.12 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.94 seconds
evaluate_mse took 3.02 seconds
29
mutate took 0.10 seconds
evaluate_mse took 0.23 seconds
deleting took 0.01 seconds
Train took 1.26 seconds
evaluate_mse took 1.53 seconds
here in mutations after all complete
change (mutation) took 64.94 seconds
the_best took 0.01 seconds
2 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.88 seconds
best concise Eq: 11.684(uy d y)
2 generation repeat cross over 3 times and mutation 1 times
here
begin crossover
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.66 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 3.16 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 3.25 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.33 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 2.87 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.75 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.81 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.89 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 3.01 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 3.12 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.89 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 0.37 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 3.08 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 3.17 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.49 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.50 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.85 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 3.34 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 3.05 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 3.32 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.81 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.94 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 3.54 seconds
cross_over took 7053.82 seconds
self.num is 30
0
1
mutate took 2.72 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.31 seconds
evaluate_mse took 1.10 seconds
2
mutate took 0.75 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.15 seconds
evaluate_mse took 2.39 seconds
3
mutate took 0.17 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.59 seconds
evaluate_mse took 2.72 seconds
4
mutate took 0.14 seconds
evaluate_mse took 0.18 seconds
deleting took 0.03 seconds
Train took 1.08 seconds
evaluate_mse took 1.31 seconds
5
mutate took 0.13 seconds
evaluate_mse took 0.23 seconds
deleting took 0.02 seconds
Train took 2.00 seconds
evaluate_mse took 2.27 seconds
6
mutate took 0.16 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.26 seconds
evaluate_mse took 2.44 seconds
7
mutate took 0.14 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.34 seconds
evaluate_mse took 0.45 seconds
8
mutate took 0.13 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.79 seconds
evaluate_mse took 2.88 seconds
9
mutate took 0.13 seconds
evaluate_mse took 0.13 seconds
deleting took 0.02 seconds
Train took 2.26 seconds
evaluate_mse took 2.43 seconds
10
mutate took 0.16 seconds
evaluate_mse took 0.16 seconds
deleting took 0.02 seconds
Train took 1.85 seconds
evaluate_mse took 2.05 seconds
11
mutate took 0.12 seconds
evaluate_mse took 0.11 seconds
deleting took 0.03 seconds
Train took 43.42 seconds
evaluate_mse took 43.59 seconds
12
mutate took 0.15 seconds
evaluate_mse took 0.14 seconds
deleting took 0.03 seconds
Train took 2.40 seconds
evaluate_mse took 2.59 seconds
13
mutate took 0.12 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 1.69 seconds
evaluate_mse took 1.87 seconds
14
mutate took 0.13 seconds
evaluate_mse took 0.15 seconds
deleting took 0.03 seconds
Train took 1.88 seconds
evaluate_mse took 2.07 seconds
15
mutate took 0.14 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 1.32 seconds
evaluate_mse took 1.47 seconds
16
mutate took 0.13 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.39 seconds
evaluate_mse took 2.47 seconds
17
mutate took 0.10 seconds
evaluate_mse took 0.16 seconds
deleting took 0.05 seconds
Train took 0.21 seconds
evaluate_mse took 0.45 seconds
18
mutate took 0.09 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.35 seconds
evaluate_mse took 2.50 seconds
19
mutate took 0.12 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 1.98 seconds
evaluate_mse took 2.10 seconds
20
mutate took 0.09 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.06 seconds
evaluate_mse took 1.16 seconds
21
mutate took 0.11 seconds
evaluate_mse took 0.06 seconds
deleting took 0.01 seconds
Train took 2.28 seconds
evaluate_mse took 2.38 seconds
22
mutate took 0.09 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.88 seconds
evaluate_mse took 2.99 seconds
23
mutate took 0.13 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 2.27 seconds
evaluate_mse took 2.48 seconds
24
mutate took 0.10 seconds
evaluate_mse took 0.13 seconds
deleting took 0.02 seconds
Train took 0.21 seconds
evaluate_mse took 0.39 seconds
25
mutate took 0.11 seconds
evaluate_mse took 0.12 seconds
deleting took 0.02 seconds
Train took 1.70 seconds
evaluate_mse took 1.86 seconds
26
mutate took 0.09 seconds
evaluate_mse took 0.18 seconds
deleting took 0.02 seconds
Train took 1.56 seconds
evaluate_mse took 1.77 seconds
27
mutate took 0.08 seconds
evaluate_mse took 0.10 seconds
deleting took 0.02 seconds
Train took 1.70 seconds
evaluate_mse took 1.83 seconds
28
mutate took 0.12 seconds
evaluate_mse took 0.15 seconds
deleting took 0.03 seconds
Train took 1.66 seconds
evaluate_mse took 1.86 seconds
29
mutate took 0.12 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.25 seconds
evaluate_mse took 0.40 seconds
here in mutations after all complete
change (mutation) took 130.80 seconds
the_best took 0.02 seconds
3 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.32 seconds
best concise Eq: 11.684(uy d y)
3 generation repeat cross over 6 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.62 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.16 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.64 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.28 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.20 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.46 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.37 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.24 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.23 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.31 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.63 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.23 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.30 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.36 seconds
evaluate_mse took 0.06 seconds
deleting took 0.01 seconds
Train took 2.61 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 1.55 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.08 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.54 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 2.47 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.46 seconds
cross_over took 60.99 seconds
self.num is 30
0
1
mutate took 0.77 seconds
evaluate_mse took 0.16 seconds
deleting took 0.04 seconds
Train took 1.26 seconds
evaluate_mse took 1.50 seconds
2
mutate took 0.27 seconds
evaluate_mse took 0.15 seconds
deleting took 0.03 seconds
Train took 2.23 seconds
evaluate_mse took 2.43 seconds
3
mutate took 0.20 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.24 seconds
evaluate_mse took 2.33 seconds
4
mutate took 0.25 seconds
evaluate_mse took 0.10 seconds
deleting took 0.03 seconds
Train took 1.85 seconds
evaluate_mse took 2.00 seconds
5
mutate took 0.17 seconds
evaluate_mse took 0.11 seconds
deleting took 0.02 seconds
Train took 1.27 seconds
evaluate_mse took 1.43 seconds
6
mutate took 0.17 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 1.31 seconds
evaluate_mse took 1.44 seconds
7
mutate took 0.16 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.40 seconds
8
mutate took 0.17 seconds
evaluate_mse took 0.13 seconds
deleting took 0.02 seconds
Train took 1.56 seconds
evaluate_mse took 1.72 seconds
9
mutate took 0.02 seconds
10
mutate took 0.14 seconds
evaluate_mse took 0.17 seconds
deleting took 0.04 seconds
Train took 1.38 seconds
evaluate_mse took 1.62 seconds
11
mutate took 0.16 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.58 seconds
evaluate_mse took 2.68 seconds
12
mutate took 0.16 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 1.71 seconds
evaluate_mse took 1.92 seconds
13
mutate took 0.15 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.68 seconds
evaluate_mse took 0.79 seconds
14
mutate took 0.16 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.10 seconds
evaluate_mse took 2.20 seconds
15
mutate took 0.13 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.30 seconds
evaluate_mse took 2.45 seconds
16
mutate took 0.14 seconds
evaluate_mse took 0.14 seconds
deleting took 0.03 seconds
Train took 1.51 seconds
evaluate_mse took 1.70 seconds
17
mutate took 0.14 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.28 seconds
evaluate_mse took 2.43 seconds
18
mutate took 0.15 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.28 seconds
evaluate_mse took 2.41 seconds
19
mutate took 0.14 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.75 seconds
evaluate_mse took 2.89 seconds
20
mutate took 0.14 seconds
evaluate_mse took 0.16 seconds
deleting took 0.03 seconds
Train took 0.82 seconds
evaluate_mse took 1.02 seconds
21
mutate took 0.14 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.85 seconds
evaluate_mse took 2.95 seconds
22
mutate took 0.15 seconds
evaluate_mse took 0.25 seconds
deleting took 0.03 seconds
Train took 1.27 seconds
evaluate_mse took 1.58 seconds
23
mutate took 0.12 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.42 seconds
evaluate_mse took 2.51 seconds
24
mutate took 0.12 seconds
evaluate_mse took 0.17 seconds
deleting took 0.02 seconds
Train took 1.44 seconds
evaluate_mse took 1.66 seconds
25
mutate took 0.12 seconds
evaluate_mse took 0.10 seconds
deleting took 0.03 seconds
Train took 1.13 seconds
evaluate_mse took 1.30 seconds
26
mutate took 0.13 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.26 seconds
evaluate_mse took 2.41 seconds
27
mutate took 0.12 seconds
evaluate_mse took 0.12 seconds
deleting took 0.02 seconds
Train took 1.97 seconds
evaluate_mse took 2.13 seconds
28
mutate took 0.08 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.05 seconds
evaluate_mse took 2.13 seconds
29
mutate took 0.13 seconds
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 2.66 seconds
evaluate_mse took 2.80 seconds
here in mutations after all complete
change (mutation) took 96.01 seconds
the_best took 0.01 seconds
4 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.38 seconds
best concise Eq: 11.684(uy d y)
4 generation repeat cross over 8 times and mutation 1 times
here
begin crossover
evaluate_mse took 0.06 seconds
deleting took 0.01 seconds
Train took 1.11 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 2.23 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.20 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.30 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.22 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.52 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 1.77 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.28 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.22 seconds
evaluate_mse took 0.01 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.66 seconds
evaluate_mse took 0.18 seconds
deleting took 0.01 seconds
Train took 2.40 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.18 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.42 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.25 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.99 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.28 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.77 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.60 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.33 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 2.74 seconds
cross_over took 86.23 seconds
self.num is 30
0
1
mutate took 0.19 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.38 seconds
evaluate_mse took 0.62 seconds
2
mutate took 1.17 seconds
evaluate_mse took 0.25 seconds
deleting took 0.04 seconds
Train took 1.80 seconds
evaluate_mse took 2.14 seconds
3
mutate took 0.22 seconds
evaluate_mse took 0.13 seconds
deleting took 0.04 seconds
Train took 2.19 seconds
evaluate_mse took 2.39 seconds
4
mutate took 0.26 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.54 seconds
evaluate_mse took 2.66 seconds
5
mutate took 0.25 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.33 seconds
evaluate_mse took 2.44 seconds
6
mutate took 0.26 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.09 seconds
evaluate_mse took 2.18 seconds
7
mutate took 0.29 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 1.23 seconds
evaluate_mse took 1.32 seconds
8
mutate took 0.23 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.37 seconds
evaluate_mse took 0.47 seconds
9
mutate took 0.26 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.37 seconds
evaluate_mse took 0.46 seconds
10
mutate took 0.29 seconds
evaluate_mse took 0.20 seconds
deleting took 0.03 seconds
Train took 2.09 seconds
evaluate_mse took 2.35 seconds
11
mutate took 0.17 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.37 seconds
evaluate_mse took 2.56 seconds
12
mutate took 0.18 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.65 seconds
evaluate_mse took 2.77 seconds
13
mutate took 0.20 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.26 seconds
evaluate_mse took 2.35 seconds
14
mutate took 0.18 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.59 seconds
evaluate_mse took 2.72 seconds
15
mutate took 0.18 seconds
evaluate_mse took 0.14 seconds
deleting took 0.02 seconds
Train took 2.08 seconds
evaluate_mse took 2.26 seconds
16
mutate took 0.16 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.48 seconds
evaluate_mse took 2.61 seconds
17
mutate took 0.17 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 2.67 seconds
evaluate_mse took 2.81 seconds
18
mutate took 0.18 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 2.53 seconds
evaluate_mse took 2.61 seconds
19
mutate took 0.17 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 1.40 seconds
evaluate_mse took 1.57 seconds
20
mutate took 0.19 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.64 seconds
evaluate_mse took 2.75 seconds
21
mutate took 0.20 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 2.31 seconds
evaluate_mse took 2.42 seconds
22
mutate took 0.20 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 2.56 seconds
evaluate_mse took 2.71 seconds
23
mutate took 0.21 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.57 seconds
evaluate_mse took 2.66 seconds
24
mutate took 0.17 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 2.42 seconds
evaluate_mse took 2.61 seconds
25
mutate took 0.17 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.60 seconds
evaluate_mse took 2.70 seconds
26
mutate took 0.17 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 2.71 seconds
evaluate_mse took 2.88 seconds
27
mutate took 0.19 seconds
evaluate_mse took 0.10 seconds
deleting took 0.01 seconds
Train took 1.93 seconds
evaluate_mse took 2.07 seconds
28
mutate took 0.16 seconds
evaluate_mse took 0.09 seconds
deleting took 0.01 seconds
Train took 1.87 seconds
evaluate_mse took 2.01 seconds
29
mutate took 0.18 seconds
evaluate_mse took 0.12 seconds
deleting took 0.03 seconds
Train took 1.10 seconds
evaluate_mse took 1.27 seconds
here in mutations after all complete
change (mutation) took 146.27 seconds
the_best took 0.02 seconds
5 generation best_aic & best Eq: 1.4111375854105357, (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.37 seconds
best concise Eq: 11.684(uy d y)
5 generation repeat cross over 9 times and mutation 0 times
here
begin crossover
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 2.29 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 2.24 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 2.20 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 2.59 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 2.36 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 2.12 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 2.16 seconds
sga_num =  30
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.75
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
cache shape - (100, 100, 100)
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 218, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 42, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 146, in evaluate_mse
    terms_values[:, ix:ix+1] = tree_list[0][0].cache.flatten() # Record that term grouped together
    ~~~~~~~~~~~~^^^^^^^^^^^^
ValueError: could not broadcast input array from shape (1000000,) into shape (1000000,1)
sga_num =  30
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.75
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.33 seconds
deleting took 0.00 seconds
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 218, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 42, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 176, in evaluate_mse
    w, loss, mse, aic = Train(terms_values, ut.flatten().reshape(-1, 1), 0, 1, aic_ratio, sparse='Lasso')
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 178, in Train
    w = Lasso(R, Ut, lam, w=np.array([0]), maxit=maxit*10, normalize=normalize)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 274, in Lasso
    w[j] = np.multiply(np.sign(z[j]), np.max([abs(z[j]) - lam / L, 0]))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\fromnumeric.py", line 2810, in max
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\fromnumeric.py", line 88, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.
sga_num =  30
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.75
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.32 seconds
deleting took 0.00 seconds
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 218, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 42, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 176, in evaluate_mse
    w, loss, mse, aic = Train(terms_values, ut.reshape(-1, 1), 0, 1, aic_ratio, sparse='Lasso')
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 179, in Train
    w = Lasso(R, Ut, lam, w=np.array([0]), maxit=maxit*10, normalize=normalize)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 275, in Lasso
    w[j] = np.multiply(np.sign(z[j]), np.max([abs(z[j]) - lam / L, 0]))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\fromnumeric.py", line 2810, in max
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arvni\anaconda3\envs\sindy\Lib\site-packages\numpy\core\fromnumeric.py", line 88, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.
sga_num =  30
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.75
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.37 seconds
deleting took 0.00 seconds
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 218, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 42, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 176, in evaluate_mse
    w, loss, mse, aic = Train(terms_values, ut.reshape(-1, 1), 0, 1, aic_ratio, sparse='Lasso')
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 179, in Train
    w = Lasso(R, Ut, lam, w=np.array([0]), maxit=maxit*10, normalize=normalize)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 280, in Lasso
    if biginds != []: w[biginds] = np.linalg.lstsq(X[:, biginds], Y)[0]
       ^^^^^^^^^^^^^
ValueError: operands could not be broadcast together with shapes (5,) (0,) 
sga_num =  30
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.75
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.50 seconds
deleting took 0.00 seconds
Train took 4.35 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 (ux / (u * uy)))+((ux * (ux + u)) * uy)+(ux / ( ^3 (u / ux)))+(uy / (u - u))+(uy / uy)
evaluate_aic: 3.956302769707332
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Traceback (most recent call last):
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 218, in <module>
    sga = SGA(num=sga_num, depth=sga_depth, width=sga_width, p_var=sga_p_var, p_rep=1, p_mute=sga_p_mute, p_cro=sga_p_cro)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\sga.py", line 42, in __init__
    a_err, a_w = evaluate_mse(a_pde)
                 ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\pde.py", line 176, in evaluate_mse
    w, loss, mse, aic = Train(terms_values, ut.reshape(-1, 1), 0, 1, aic_ratio, sparse='Lasso')
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 179, in Train
    w = Lasso(R, Ut, lam, w=np.array([0]), maxit=maxit*10, normalize=normalize)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arvni\OneDrive\Desktop\College Sem 7\EP498P — Major Technical Project-I\SGA-PDE\codes\PDE_find.py", line 273, in Lasso
    z = z - X.T.dot(X.dot(z) - Y) / L
                    ~~~~~~~~~^~~
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 16.4 TiB for an array with shape (1500000, 1500000) and data type float64
sga_num =  30
sga_depth =  4
sga_width =  5
sga_p_var =  0.6
sga_p_mute =  0.75
sga_p_cro =  0.5
sga_run =  100
Creating the original pdes in the pool ...
evaluate_mse took 0.33 seconds
deleting took 0.00 seconds
Train took 0.61 seconds
Creating the ith pde, i= 0
a_pde.visualize(): ( ^3 (ux / (u * uy)))+((ux * (ux + u)) * uy)+(ux / ( ^3 (u / ux)))+(uy / (u - u))+(uy / uy)
evaluate_aic: 3.9564896648353014
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
Creating the ith pde, i= 1
a_pde.visualize(): (ux * (u d y))
evaluate_aic: 0.7564750454534123
evaluate_mse took 0.34 seconds
deleting took 0.00 seconds
Train took 0.41 seconds
Creating the ith pde, i= 2
a_pde.visualize(): ((ux - ( ^3 uy)) d^2 y)+(uy d^2 y)+( ^3 uy)
evaluate_aic: 2.3564286568027395
evaluate_mse took 0.53 seconds
deleting took 0.00 seconds
Train took 0.67 seconds
Creating the ith pde, i= 3
a_pde.visualize(): ((u d x) / (u d y))+(ux d^2 y)+( ^3 ux)+(( ^3 ux) d y)+(((ux * ux) + ( ^3 u)) d^2 y)
evaluate_aic: 3.952710452803308
evaluate_mse took 0.28 seconds
deleting took 0.00 seconds
Train took 0.39 seconds
Creating the ith pde, i= 4
a_pde.visualize(): (( ^3 ux) d^2 y)+(( ^2 uy) d^2 y)+(((u d y) * (uy / u)) / ux)
evaluate_aic: 2.356443626488469
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
Creating the ith pde, i= 5
a_pde.visualize(): (uy * u)
evaluate_aic: 0.7563363116572007
evaluate_mse took 0.49 seconds
deleting took 0.00 seconds
Train took 0.70 seconds
Creating the ith pde, i= 6
a_pde.visualize(): (u * ((u / u) / (uy + uy)))+(u * ((ux d^2 y) + uy))+( ^3 (ux + (u + ux)))+( ^3 (u - (uy - ux)))+( ^3 u)
evaluate_aic: 3.9213225124732958
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
Creating the ith pde, i= 7
a_pde.visualize(): (( ^3 ux) d^2 y)+(uy d x)
evaluate_aic: 1.5564064604061933
evaluate_mse took 0.11 seconds
deleting took 0.01 seconds
Train took 0.17 seconds
Creating the ith pde, i= 8
a_pde.visualize(): ( ^3 uy)
evaluate_aic: 0.7564601780691269
evaluate_mse took 0.33 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
Creating the ith pde, i= 9
a_pde.visualize(): (uy d^2 x)+( ^3 u)+((u * ux) / ux)+( ^3 (ux d y))
evaluate_aic: 3.121405947424076
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 0.29 seconds
Creating the ith pde, i= 10
a_pde.visualize(): (uy / ( ^3 ux))+( ^3 (u d y))
evaluate_aic: 1.5564912295366875
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
Creating the ith pde, i= 11
a_pde.visualize(): ( ^2 uy)
evaluate_aic: 0.7564898528469798
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
Creating the ith pde, i= 12
a_pde.visualize(): (ux * u)
evaluate_aic: 0.7564469566270667
evaluate_mse took 0.37 seconds
deleting took 0.00 seconds
Train took 0.56 seconds
Creating the ith pde, i= 13
a_pde.visualize(): (((ux * u) + ux) * ( ^3 (ux - uy)))+( ^3 u)+( ^3 ux)+(ux / uy)
evaluate_aic: 3.1397571278430227
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.63 seconds
Creating the ith pde, i= 14
a_pde.visualize(): (((u * ux) - ux) / ux)+(uy d y)+(uy * u)+(uy * (ux / (u + u)))+(ux / uy)
evaluate_aic: 3.8991713756636215
evaluate_mse took 0.33 seconds
deleting took 0.00 seconds
Train took 0.70 seconds
Creating the ith pde, i= 15
a_pde.visualize(): ( ^2 ( ^2 u))+( ^3 u)+(ux * ( ^3 uy))+(ux d^2 y)+(uy / uy)
evaluate_aic: 3.930126123429821
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 0.43 seconds
Creating the ith pde, i= 16
a_pde.visualize(): ((uy d y) / ( ^3 (u / uy)))+( ^2 ux)+((u d^2 y) d^2 y)
evaluate_aic: 2.29263241200022
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
Creating the ith pde, i= 17
a_pde.visualize(): ((ux + (uy - u)) * u)
evaluate_aic: 0.7485318560011752
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
Creating the ith pde, i= 18
a_pde.visualize(): (( ^3 uy) * (u d y))
evaluate_aic: 0.7564725389766273
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
Creating the ith pde, i= 19
a_pde.visualize(): ((ux / uy) / uy)+(u * (uy d^2 x))
evaluate_aic: 1.5562238453630912
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
Creating the ith pde, i= 20
a_pde.visualize(): ( ^2 u)+(ux * (u / u))
evaluate_aic: 1.5461259073349836
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
Creating the ith pde, i= 21
a_pde.visualize(): (uy / (u * (ux - u)))+(ux * uy)+((u - ux) d x)+( ^3 ux)
evaluate_aic: 3.125586385302324
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
Creating the ith pde, i= 22
a_pde.visualize(): ( ^2 ux)
evaluate_aic: 0.7564211847253822
evaluate_mse took 0.25 seconds
deleting took 0.00 seconds
Train took 0.54 seconds
Creating the ith pde, i= 23
a_pde.visualize(): ( ^2 u)+((ux d^2 y) / ( ^2 (uy / u)))+((u - uy) * (uy * (ux / uy)))+( ^3 ux)
evaluate_aic: 3.1460858553039803
evaluate_mse took 0.32 seconds
deleting took 0.00 seconds
Train took 0.42 seconds
Creating the ith pde, i= 24
a_pde.visualize(): (u d y)+(u d y)+( ^2 ux)+( ^3 (( ^3 u) / uy))
evaluate_aic: 3.156419662358642
evaluate_mse took 0.40 seconds
deleting took 0.00 seconds
Train took 0.43 seconds
Creating the ith pde, i= 25
a_pde.visualize(): (uy d^2 x)+( ^3 ((uy * uy) * ( ^3 ux)))+( ^3 (uy - ux))
evaluate_aic: 2.356452041354891
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 0.27 seconds
Creating the ith pde, i= 26
a_pde.visualize(): (( ^2 u) d^2 y)+( ^3 uy)
evaluate_aic: 1.5387943040630947
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 0.36 seconds
Creating the ith pde, i= 27
a_pde.visualize(): (((uy / u) - u) d x)+(ux * ( ^3 ( ^2 ux)))+(uy / u)
evaluate_aic: 2.3563000177139615
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 0.43 seconds
Creating the ith pde, i= 28
a_pde.visualize(): (uy d^2 y)+(ux / ux)+( ^3 ux)+(uy / ux)
evaluate_aic: 3.1564586269676687
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
Creating the ith pde, i= 29
a_pde.visualize(): ((( ^2 uy) d^2 x) d y)
evaluate_aic: 0.756453213585456
here
begin crossover
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 0.40 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.29 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.30 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.27 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.27 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.29 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 0.28 seconds
evaluate_mse took 0.30 seconds
deleting took 0.00 seconds
Train took 0.27 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.27 seconds
evaluate_mse took 0.15 seconds
deleting took 0.01 seconds
Train took 0.18 seconds
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 0.42 seconds
cross_over took 9.15 seconds
self.num is 30
0
1
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.27 seconds
2
mutate took 0.08 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
3
mutate took 0.09 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
4
mutate took 0.09 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.23 seconds
5
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
6
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.27 seconds
7
mutate took 0.04 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.21 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.27 seconds
9
mutate took 0.04 seconds
10
mutate took 0.06 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.31 seconds
12
mutate took 0.06 seconds
13
mutate took 0.06 seconds
14
mutate took 0.04 seconds
15
mutate took 0.02 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.39 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.36 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.46 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.33 seconds
20
mutate took 0.01 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.42 seconds
21
mutate took 0.01 seconds
22
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
23
mutate took 0.04 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.26 seconds
24
mutate took 0.05 seconds
25
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.26 seconds
26
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
27
mutate took 0.07 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.30 seconds
28
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.30 seconds
29
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.31 seconds
evaluate_mse took 0.46 seconds
here in mutations after all complete
change (mutation) took 8.79 seconds
the_best took 0.00 seconds
1 generation best_aic & best Eq: 0.6926786057404483, ((u d^2 y) d^2 y)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
best concise Eq: -8.5443((u d^2 y) d^2 y)
1 generation repeat cross over 7 times and mutation 8 times
here
begin crossover
cross_over took 1.38 seconds
self.num is 30
0
1
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.25 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.37 seconds
3
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.28 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.18 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
evaluate_mse took 0.38 seconds
6
mutate took 0.03 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.36 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
8
mutate took 0.08 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.23 seconds
9
mutate took 0.07 seconds
10
mutate took 0.08 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.32 seconds
11
mutate took 0.09 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.33 seconds
12
mutate took 0.08 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.27 seconds
13
mutate took 0.03 seconds
14
mutate took 0.05 seconds
15
mutate took 0.04 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.33 seconds
16
mutate took 0.05 seconds
17
mutate took 0.07 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.34 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.27 seconds
19
mutate took 0.02 seconds
20
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.23 seconds
evaluate_mse took 0.33 seconds
21
mutate took 0.01 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.27 seconds
22
mutate took 0.03 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.36 seconds
23
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.22 seconds
24
mutate took 0.03 seconds
25
mutate took 0.06 seconds
26
mutate took 0.05 seconds
27
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.29 seconds
28
mutate took 0.03 seconds
29
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.27 seconds
here in mutations after all complete
change (mutation) took 8.84 seconds
the_best took 0.01 seconds
2 generation best_aic & best Eq: 0.6926786057404483, ((u d^2 y) d^2 y)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
best concise Eq: -8.5443((u d^2 y) d^2 y)
2 generation repeat cross over 30 times and mutation 9 times
here
begin crossover
cross_over took 1.32 seconds
self.num is 30
0
1
mutate took 0.05 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.30 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.28 seconds
4
mutate took 0.03 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.32 seconds
6
mutate took 0.03 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.34 seconds
8
mutate took 0.06 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.36 seconds
9
mutate took 0.09 seconds
10
mutate took 0.03 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.34 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.35 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.28 seconds
13
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.01 seconds
Train took 0.14 seconds
evaluate_mse took 0.23 seconds
14
mutate took 0.08 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
15
mutate took 0.07 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.25 seconds
16
mutate took 0.07 seconds
17
mutate took 0.06 seconds
18
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.32 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.29 seconds
20
mutate took 0.03 seconds
21
mutate took 0.06 seconds
22
mutate took 0.07 seconds
23
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.32 seconds
24
mutate took 0.05 seconds
25
mutate took 0.04 seconds
26
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
27
mutate took 0.02 seconds
28
mutate took 0.05 seconds
29
mutate took 0.06 seconds
here in mutations after all complete
change (mutation) took 7.89 seconds
the_best took 0.00 seconds
3 generation best_aic & best Eq: 0.6926786057404483, ((u d^2 y) d^2 y)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
best concise Eq: -8.5443((u d^2 y) d^2 y)
3 generation repeat cross over 30 times and mutation 14 times
here
begin crossover
cross_over took 1.65 seconds
self.num is 30
0
1
mutate took 0.04 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.18 seconds
2
mutate took 0.02 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.41 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.25 seconds
5
mutate took 0.02 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.39 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.01 seconds
Train took 0.18 seconds
evaluate_mse took 0.27 seconds
8
mutate took 0.04 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.36 seconds
9
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.30 seconds
10
mutate took 0.02 seconds
11
mutate took 0.03 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.38 seconds
12
mutate took 0.08 seconds
13
mutate took 0.08 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.25 seconds
14
mutate took 0.09 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.29 seconds
15
mutate took 0.07 seconds
16
mutate took 0.01 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.38 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
18
mutate took 0.05 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
20
mutate took 0.07 seconds
21
mutate took 0.08 seconds
22
mutate took 0.05 seconds
23
mutate took 0.13 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.29 seconds
24
mutate took 0.06 seconds
25
mutate took 0.06 seconds
26
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
27
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.21 seconds
28
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.26 seconds
29
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.21 seconds
here in mutations after all complete
change (mutation) took 8.75 seconds
the_best took 0.00 seconds
4 generation best_aic & best Eq: 0.6926786057404483, ((u d^2 y) d^2 y)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
best concise Eq: -8.5443((u d^2 y) d^2 y)
4 generation repeat cross over 30 times and mutation 11 times
here
begin crossover
cross_over took 1.71 seconds
self.num is 30
0
1
mutate took 0.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.30 seconds
2
mutate took 0.02 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.21 seconds
3
mutate took 0.02 seconds
4
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.25 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.27 seconds
6
mutate took 0.02 seconds
7
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.29 seconds
8
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.27 seconds
9
mutate took 0.06 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.35 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.21 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.22 seconds
12
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
13
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.29 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.31 seconds
15
mutate took 0.01 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.33 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.37 seconds
17
mutate took 0.05 seconds
18
mutate took 0.10 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.25 seconds
19
mutate took 0.09 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.22 seconds
20
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.28 seconds
21
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.26 seconds
22
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.25 seconds
23
mutate took 0.02 seconds
24
mutate took 0.06 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.24 seconds
25
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.17 seconds
26
mutate took 0.07 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.32 seconds
27
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.25 seconds
28
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.31 seconds
29
mutate took 0.06 seconds
here in mutations after all complete
change (mutation) took 10.02 seconds
the_best took 0.01 seconds
5 generation best_aic & best Eq: 0.6926786057404483, ((u d^2 y) d^2 y)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
best concise Eq: -8.5443((u d^2 y) d^2 y)
5 generation repeat cross over 30 times and mutation 5 times
here
begin crossover
cross_over took 1.90 seconds
self.num is 30
0
1
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.25 seconds
2
mutate took 0.03 seconds
3
mutate took 0.02 seconds
4
mutate took 0.02 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.20 seconds
6
mutate took 0.02 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.34 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.22 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.01 seconds
Train took 0.16 seconds
evaluate_mse took 0.27 seconds
9
mutate took 0.02 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
11
mutate took 0.05 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.01 seconds
Train took 0.18 seconds
evaluate_mse took 0.35 seconds
13
mutate took 0.04 seconds
14
mutate took 0.06 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.32 seconds
16
mutate took 0.02 seconds
17
mutate took 0.02 seconds
18
mutate took 0.05 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.16 seconds
19
mutate took 0.05 seconds
20
mutate took 0.04 seconds
21
mutate took 0.04 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.38 seconds
22
mutate took 0.07 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.29 seconds
23
mutate took 0.09 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.28 seconds
24
mutate took 0.06 seconds
25
mutate took 0.05 seconds
26
mutate took 0.07 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
27
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.14 seconds
evaluate_mse took 0.30 seconds
28
mutate took 0.02 seconds
29
mutate took 0.03 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.35 seconds
here in mutations after all complete
change (mutation) took 8.57 seconds
the_best took 0.01 seconds
6 generation best_aic & best Eq: 0.6926786057404483, ((u d^2 y) d^2 y)
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
best concise Eq: -8.5443((u d^2 y) d^2 y)
6 generation repeat cross over 30 times and mutation 14 times
here
begin crossover
cross_over took 1.99 seconds
self.num is 30
0
1
mutate took 0.04 seconds
2
mutate took 0.02 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.22 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.42 seconds
4
mutate took 0.02 seconds
5
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.21 seconds
6
mutate took 0.02 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.17 seconds
8
mutate took 0.01 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.23 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.28 seconds
10
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
11
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.23 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.19 seconds
13
mutate took 0.04 seconds
14
mutate took 0.03 seconds
15
mutate took 0.04 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.24 seconds
17
mutate took 0.07 seconds
18
mutate took 0.09 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.24 seconds
20
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.28 seconds
21
mutate took 0.03 seconds
22
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
23
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.25 seconds
24
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
25
mutate took 0.07 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.38 seconds
26
mutate took 0.05 seconds
27
mutate took 0.05 seconds
28
mutate took 0.07 seconds
29
mutate took 0.08 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.30 seconds
here in mutations after all complete
change (mutation) took 9.28 seconds
the_best took 0.00 seconds
7 generation best_aic & best Eq: 0.6926786057404483, ((u d^2 y) d^2 y)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
best concise Eq: -8.5443((u d^2 y) d^2 y)
7 generation repeat cross over 30 times and mutation 13 times
here
begin crossover
cross_over took 2.29 seconds
self.num is 30
0
1
mutate took 0.02 seconds
2
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.26 seconds
3
mutate took 0.05 seconds
4
mutate took 0.02 seconds
5
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
6
mutate took 0.02 seconds
7
mutate took 0.02 seconds
8
mutate took 0.03 seconds
9
mutate took 0.02 seconds
10
mutate took 0.02 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.22 seconds
12
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
13
mutate took 0.04 seconds
14
mutate took 0.06 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.28 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
17
mutate took 0.04 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.32 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.29 seconds
20
mutate took 0.04 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.20 seconds
21
mutate took 0.01 seconds
22
mutate took 0.02 seconds
23
mutate took 0.04 seconds
24
mutate took 0.06 seconds
25
mutate took 0.02 seconds
26
mutate took 0.06 seconds
27
mutate took 0.09 seconds
28
mutate took 0.03 seconds
29
mutate took 0.05 seconds
here in mutations after all complete
change (mutation) took 11.74 seconds
the_best took 0.00 seconds
8 generation best_aic & best Eq: 0.6913592885278272, (ux * ((ux d^2 x) * u))
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.23 seconds
best concise Eq: 2778.2707(ux * ((ux d^2 x) * u))
8 generation repeat cross over 30 times and mutation 20 times
here
begin crossover
cross_over took 2.30 seconds
self.num is 30
0
1
mutate took 0.09 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.29 seconds
2
mutate took 0.03 seconds
3
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
4
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.25 seconds
5
mutate took 0.04 seconds
6
mutate took 0.04 seconds
7
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.25 seconds
8
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.28 seconds
9
mutate took 0.02 seconds
10
mutate took 0.02 seconds
11
mutate took 0.03 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.29 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.24 seconds
14
mutate took 0.06 seconds
15
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.22 seconds
16
mutate took 0.06 seconds
17
mutate took 0.07 seconds
18
mutate took 0.03 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
20
mutate took 0.04 seconds
21
mutate took 0.06 seconds
22
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
23
mutate took 0.03 seconds
24
mutate took 0.05 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.25 seconds
25
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.25 seconds
26
mutate took 0.05 seconds
27
mutate took 0.02 seconds
28
mutate took 0.08 seconds
29
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.26 seconds
here in mutations after all complete
change (mutation) took 9.05 seconds
the_best took 0.01 seconds
9 generation best_aic & best Eq: 0.6905593614400601, (u * ( ^2 uy))
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.24 seconds
best concise Eq: -1934.7971(u * ( ^2 uy))
9 generation repeat cross over 30 times and mutation 16 times
here
begin crossover
cross_over took 2.82 seconds
self.num is 30
0
1
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.28 seconds
2
mutate took 0.06 seconds
3
mutate took 0.05 seconds
4
mutate took 0.02 seconds
5
mutate took 0.05 seconds
6
mutate took 0.03 seconds
7
mutate took 0.02 seconds
8
mutate took 0.05 seconds
9
mutate took 0.05 seconds
10
mutate took 0.02 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.36 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.23 seconds
12
mutate took 0.02 seconds
13
mutate took 0.03 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.34 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.22 seconds
17
mutate took 0.02 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.23 seconds
19
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.24 seconds
20
mutate took 0.04 seconds
21
mutate took 0.06 seconds
22
mutate took 0.04 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.35 seconds
23
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
24
mutate took 0.05 seconds
25
mutate took 0.05 seconds
26
mutate took 0.03 seconds
27
mutate took 0.04 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.22 seconds
28
mutate took 0.05 seconds
29
mutate took 0.01 seconds
here in mutations after all complete
change (mutation) took 9.36 seconds
the_best took 0.00 seconds
10 generation best_aic & best Eq: 0.6905593614400601, (u * ( ^2 uy))
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
best concise Eq: -1934.7971(u * ( ^2 uy))
10 generation repeat cross over 30 times and mutation 18 times
here
begin crossover
cross_over took 2.46 seconds
self.num is 30
0
1
mutate took 0.05 seconds
2
mutate took 0.07 seconds
3
mutate took 0.07 seconds
4
mutate took 0.04 seconds
5
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.35 seconds
6
mutate took 0.06 seconds
7
mutate took 0.02 seconds
8
mutate took 0.03 seconds
9
mutate took 0.04 seconds
10
mutate took 0.02 seconds
11
mutate took 0.02 seconds
12
mutate took 0.02 seconds
13
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.25 seconds
14
mutate took 0.02 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.37 seconds
16
mutate took 0.02 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
18
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.01 seconds
Train took 0.17 seconds
evaluate_mse took 0.29 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.21 seconds
20
mutate took 0.06 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.31 seconds
21
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.23 seconds
22
mutate took 0.04 seconds
23
mutate took 0.05 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
evaluate_mse took 0.38 seconds
24
mutate took 0.06 seconds
25
mutate took 0.06 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.30 seconds
26
mutate took 0.04 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
27
mutate took 0.06 seconds
28
mutate took 0.06 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.37 seconds
29
mutate took 0.08 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.25 seconds
here in mutations after all complete
change (mutation) took 9.27 seconds
the_best took 0.00 seconds
11 generation best_aic & best Eq: 0.6905593614400601, (u * ( ^2 uy))
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.25 seconds
best concise Eq: -1934.7971(u * ( ^2 uy))
11 generation repeat cross over 30 times and mutation 16 times
here
begin crossover
cross_over took 2.60 seconds
self.num is 30
0
1
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.26 seconds
2
mutate took 0.07 seconds
3
mutate took 0.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.40 seconds
4
mutate took 0.03 seconds
evaluate_mse took 0.16 seconds
deleting took 0.01 seconds
Train took 0.00 seconds
evaluate_mse took 0.21 seconds
5
mutate took 0.04 seconds
6
mutate took 0.04 seconds
7
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.32 seconds
8
mutate took 0.05 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.23 seconds
10
mutate took 0.02 seconds
11
mutate took 0.02 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.29 seconds
13
mutate took 0.05 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.30 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.31 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.29 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.01 seconds
Train took 0.19 seconds
evaluate_mse took 0.37 seconds
17
mutate took 0.02 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.32 seconds
18
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
19
mutate took 0.06 seconds
20
mutate took 0.04 seconds
21
mutate took 0.06 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.30 seconds
22
mutate took 0.04 seconds
23
mutate took 0.03 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.20 seconds
24
mutate took 0.06 seconds
25
mutate took 0.08 seconds
26
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.31 seconds
27
mutate took 0.06 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.35 seconds
28
mutate took 0.05 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.26 seconds
29
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.36 seconds
here in mutations after all complete
change (mutation) took 12.96 seconds
the_best took 0.00 seconds
12 generation best_aic & best Eq: 0.6905593614400601, (u * ( ^2 uy))
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.22 seconds
best concise Eq: -1934.7971(u * ( ^2 uy))
12 generation repeat cross over 30 times and mutation 11 times
here
begin crossover
cross_over took 2.66 seconds
self.num is 30
0
1
mutate took 0.04 seconds
2
mutate took 0.04 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.33 seconds
3
mutate took 0.04 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.25 seconds
4
mutate took 0.05 seconds
5
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.31 seconds
6
mutate took 0.03 seconds
7
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
8
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.23 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.34 seconds
10
mutate took 0.03 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.30 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.24 seconds
13
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.20 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.32 seconds
15
mutate took 0.02 seconds
16
mutate took 0.03 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.36 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.37 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.33 seconds
20
mutate took 0.03 seconds
21
mutate took 0.04 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
22
mutate took 0.05 seconds
23
mutate took 0.03 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.37 seconds
24
mutate took 0.06 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.30 seconds
25
mutate took 0.04 seconds
26
mutate took 0.04 seconds
27
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
28
mutate took 0.02 seconds
29
mutate took 0.06 seconds
here in mutations after all complete
change (mutation) took 11.34 seconds
the_best took 0.01 seconds
13 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
13 generation repeat cross over 30 times and mutation 12 times
here
begin crossover
cross_over took 3.14 seconds
self.num is 30
0
1
mutate took 0.02 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.30 seconds
2
mutate took 0.03 seconds
3
mutate took 0.05 seconds
4
mutate took 0.08 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.30 seconds
5
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.23 seconds
6
mutate took 0.05 seconds
7
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.20 seconds
8
mutate took 0.03 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.32 seconds
10
mutate took 0.03 seconds
11
mutate took 0.06 seconds
12
mutate took 0.02 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.30 seconds
13
mutate took 0.06 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.22 seconds
14
mutate took 0.05 seconds
evaluate_mse took 0.12 seconds
deleting took 0.01 seconds
Train took 0.18 seconds
evaluate_mse took 0.34 seconds
15
mutate took 0.03 seconds
16
mutate took 0.03 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.31 seconds
17
mutate took 0.03 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.23 seconds
19
mutate took 0.03 seconds
20
mutate took 0.02 seconds
21
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.25 seconds
22
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.28 seconds
23
mutate took 0.03 seconds
24
mutate took 0.04 seconds
25
mutate took 0.06 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.34 seconds
26
mutate took 0.07 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.38 seconds
27
mutate took 0.05 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.37 seconds
28
mutate took 0.06 seconds
29
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.28 seconds
here in mutations after all complete
change (mutation) took 10.69 seconds
the_best took 0.00 seconds
14 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
14 generation repeat cross over 30 times and mutation 13 times
here
begin crossover
cross_over took 2.68 seconds
self.num is 30
0
1
mutate took 0.02 seconds
2
mutate took 0.05 seconds
3
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.21 seconds
4
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.37 seconds
5
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.22 seconds
6
mutate took 0.05 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.20 seconds
7
mutate took 0.05 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.25 seconds
8
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.24 seconds
9
mutate took 0.02 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.29 seconds
11
mutate took 0.03 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.28 seconds
12
mutate took 0.04 seconds
13
mutate took 0.04 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.32 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
16
mutate took 0.03 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.26 seconds
18
mutate took 0.03 seconds
19
mutate took 0.06 seconds
20
mutate took 0.03 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.37 seconds
21
mutate took 0.02 seconds
22
mutate took 0.03 seconds
23
mutate took 0.03 seconds
24
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.17 seconds
25
mutate took 0.02 seconds
26
mutate took 0.06 seconds
27
mutate took 0.03 seconds
28
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.26 seconds
29
mutate took 0.07 seconds
here in mutations after all complete
change (mutation) took 10.66 seconds
the_best took 0.00 seconds
15 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
15 generation repeat cross over 30 times and mutation 14 times
here
begin crossover
cross_over took 3.03 seconds
self.num is 30
0
1
mutate took 0.03 seconds
2
mutate took 0.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.32 seconds
3
mutate took 0.05 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.36 seconds
4
mutate took 0.05 seconds
5
mutate took 0.04 seconds
6
mutate took 0.06 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.23 seconds
7
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.24 seconds
8
mutate took 0.03 seconds
9
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
10
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.25 seconds
11
mutate took 0.04 seconds
12
mutate took 0.04 seconds
evaluate_mse took 0.24 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.47 seconds
13
mutate took 0.06 seconds
14
mutate took 0.04 seconds
15
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.23 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.24 seconds
17
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.26 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.31 seconds
19
mutate took 0.02 seconds
20
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.25 seconds
21
mutate took 0.02 seconds
evaluate_mse took 0.19 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.23 seconds
22
mutate took 0.02 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.31 seconds
23
mutate took 0.02 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.35 seconds
24
mutate took 0.02 seconds
25
mutate took 0.02 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.36 seconds
26
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.29 seconds
27
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
28
mutate took 0.05 seconds
29
mutate took 0.05 seconds
here in mutations after all complete
change (mutation) took 11.71 seconds
the_best took 0.00 seconds
16 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
16 generation repeat cross over 30 times and mutation 11 times
here
begin crossover
cross_over took 2.98 seconds
self.num is 30
0
1
mutate took 0.02 seconds
2
mutate took 0.04 seconds
3
mutate took 0.03 seconds
4
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.24 seconds
5
mutate took 0.04 seconds
6
mutate took 0.07 seconds
7
mutate took 0.07 seconds
8
mutate took 0.05 seconds
9
mutate took 0.03 seconds
10
mutate took 0.05 seconds
11
mutate took 0.03 seconds
12
mutate took 0.04 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.21 seconds
13
mutate took 0.05 seconds
14
mutate took 0.03 seconds
15
mutate took 0.05 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.21 seconds
evaluate_mse took 0.30 seconds
17
mutate took 0.04 seconds
18
mutate took 0.03 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.31 seconds
20
mutate took 0.04 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.21 seconds
21
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.23 seconds
22
mutate took 0.03 seconds
23
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.21 seconds
24
mutate took 0.02 seconds
25
mutate took 0.03 seconds
26
mutate took 0.01 seconds
27
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.01 seconds
Train took 0.15 seconds
evaluate_mse took 0.27 seconds
28
mutate took 0.04 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.38 seconds
29
mutate took 0.05 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.30 seconds
here in mutations after all complete
change (mutation) took 9.47 seconds
the_best took 0.00 seconds
17 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
17 generation repeat cross over 30 times and mutation 19 times
here
begin crossover
cross_over took 3.04 seconds
self.num is 30
0
1
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.23 seconds
2
mutate took 0.06 seconds
3
mutate took 0.04 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.29 seconds
4
mutate took 0.03 seconds
5
mutate took 0.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.29 seconds
6
mutate took 0.05 seconds
7
mutate took 0.06 seconds
8
mutate took 0.05 seconds
9
mutate took 0.04 seconds
10
mutate took 0.03 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.34 seconds
11
mutate took 0.03 seconds
evaluate_mse took 0.17 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.21 seconds
12
mutate took 0.03 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.39 seconds
13
mutate took 0.05 seconds
14
mutate took 0.03 seconds
15
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
16
mutate took 0.03 seconds
17
mutate took 0.04 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
19
mutate took 0.03 seconds
20
mutate took 0.03 seconds
21
mutate took 0.02 seconds
22
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.30 seconds
23
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.23 seconds
24
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.23 seconds
25
mutate took 0.02 seconds
26
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.22 seconds
27
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.27 seconds
28
mutate took 0.06 seconds
29
mutate took 0.07 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.33 seconds
here in mutations after all complete
change (mutation) took 8.69 seconds
the_best took 0.00 seconds
18 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
18 generation repeat cross over 30 times and mutation 15 times
here
begin crossover
cross_over took 2.97 seconds
self.num is 30
0
1
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.29 seconds
2
mutate took 0.05 seconds
evaluate_mse took 0.21 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.39 seconds
3
mutate took 0.05 seconds
4
mutate took 0.03 seconds
5
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.23 seconds
6
mutate took 0.07 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
7
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
8
mutate took 0.06 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.31 seconds
10
mutate took 0.04 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.22 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.25 seconds
12
mutate took 0.04 seconds
13
mutate took 0.06 seconds
14
mutate took 0.05 seconds
15
mutate took 0.05 seconds
16
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
17
mutate took 0.02 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.26 seconds
19
mutate took 0.05 seconds
20
mutate took 0.03 seconds
21
mutate took 0.02 seconds
22
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.29 seconds
23
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.21 seconds
24
mutate took 0.02 seconds
25
mutate took 0.03 seconds
26
mutate took 0.03 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.38 seconds
27
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.24 seconds
28
mutate took 0.05 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.36 seconds
29
mutate took 0.03 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.36 seconds
here in mutations after all complete
change (mutation) took 10.37 seconds
the_best took 0.01 seconds
19 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
19 generation repeat cross over 30 times and mutation 12 times
here
begin crossover
cross_over took 2.92 seconds
self.num is 30
0
1
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.26 seconds
2
mutate took 0.06 seconds
3
mutate took 0.04 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.20 seconds
4
mutate took 0.04 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.24 seconds
5
mutate took 0.07 seconds
6
mutate took 0.04 seconds
7
mutate took 0.06 seconds
8
mutate took 0.07 seconds
9
mutate took 0.06 seconds
10
mutate took 0.05 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.21 seconds
11
mutate took 0.04 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.19 seconds
evaluate_mse took 0.34 seconds
12
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.23 seconds
13
mutate took 0.05 seconds
14
mutate took 0.04 seconds
15
mutate took 0.08 seconds
16
mutate took 0.05 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.30 seconds
17
mutate took 0.05 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.20 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.24 seconds
20
mutate took 0.02 seconds
21
mutate took 0.05 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.40 seconds
22
mutate took 0.02 seconds
23
mutate took 0.02 seconds
24
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.26 seconds
25
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.26 seconds
26
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.20 seconds
evaluate_mse took 0.29 seconds
27
mutate took 0.02 seconds
28
mutate took 0.03 seconds
29
mutate took 0.03 seconds
here in mutations after all complete
change (mutation) took 11.67 seconds
the_best took 0.00 seconds
20 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.22 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
20 generation repeat cross over 30 times and mutation 16 times
here
begin crossover
cross_over took 2.97 seconds
self.num is 30
0
1
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
2
mutate took 0.04 seconds
3
mutate took 0.04 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.14 seconds
4
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
5
mutate took 0.08 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.23 seconds
6
mutate took 0.05 seconds
7
mutate took 0.06 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.31 seconds
8
mutate took 0.06 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.25 seconds
9
mutate took 0.06 seconds
10
mutate took 0.02 seconds
11
mutate took 0.02 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.01 seconds
evaluate_mse took 0.16 seconds
12
mutate took 0.04 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.28 seconds
13
mutate took 0.05 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.30 seconds
15
mutate took 0.07 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.26 seconds
17
mutate took 0.06 seconds
18
mutate took 0.02 seconds
19
mutate took 0.03 seconds
20
mutate took 0.02 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.27 seconds
21
mutate took 0.03 seconds
22
mutate took 0.03 seconds
23
mutate took 0.08 seconds
24
mutate took 0.03 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.31 seconds
25
mutate took 0.04 seconds
26
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.26 seconds
27
mutate took 0.03 seconds
28
mutate took 0.02 seconds
29
mutate took 0.03 seconds
here in mutations after all complete
change (mutation) took 12.25 seconds
the_best took 0.01 seconds
21 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.23 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
21 generation repeat cross over 30 times and mutation 16 times
here
begin crossover
cross_over took 3.16 seconds
self.num is 30
0
1
mutate took 0.08 seconds
2
mutate took 0.03 seconds
3
mutate took 0.04 seconds
4
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.24 seconds
5
mutate took 0.07 seconds
evaluate_mse took 0.12 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.32 seconds
6
mutate took 0.03 seconds
7
mutate took 0.06 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.24 seconds
8
mutate took 0.07 seconds
evaluate_mse took 0.20 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.39 seconds
9
mutate took 0.08 seconds
10
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.25 seconds
11
mutate took 0.04 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.34 seconds
12
mutate took 0.03 seconds
13
mutate took 0.05 seconds
14
mutate took 0.04 seconds
15
mutate took 0.04 seconds
16
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.24 seconds
17
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.29 seconds
18
mutate took 0.02 seconds
evaluate_mse took 0.26 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.45 seconds
19
mutate took 0.02 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.38 seconds
20
mutate took 0.02 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.28 seconds
21
mutate took 0.02 seconds
22
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
23
mutate took 0.04 seconds
24
mutate took 0.01 seconds
25
mutate took 0.05 seconds
26
mutate took 0.02 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.32 seconds
27
mutate took 0.02 seconds
28
mutate took 0.02 seconds
29
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.24 seconds
here in mutations after all complete
change (mutation) took 13.71 seconds
the_best took 0.00 seconds
22 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
22 generation repeat cross over 30 times and mutation 15 times
here
begin crossover
cross_over took 3.05 seconds
self.num is 30
0
1
mutate took 0.02 seconds
2
mutate took 0.03 seconds
3
mutate took 0.07 seconds
4
mutate took 0.08 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.30 seconds
5
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.27 seconds
6
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.23 seconds
7
mutate took 0.03 seconds
8
mutate took 0.08 seconds
9
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.22 seconds
10
mutate took 0.06 seconds
11
mutate took 0.05 seconds
12
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.25 seconds
13
mutate took 0.02 seconds
14
mutate took 0.04 seconds
15
mutate took 0.03 seconds
16
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.15 seconds
evaluate_mse took 0.27 seconds
17
mutate took 0.06 seconds
18
mutate took 0.04 seconds
evaluate_mse took 0.16 seconds
deleting took 0.00 seconds
Train took 0.00 seconds
evaluate_mse took 0.22 seconds
19
mutate took 0.05 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.25 seconds
20
mutate took 0.02 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.35 seconds
21
mutate took 0.05 seconds
evaluate_mse took 0.14 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.36 seconds
22
mutate took 0.02 seconds
23
mutate took 0.03 seconds
24
mutate took 0.03 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.25 seconds
25
mutate took 0.03 seconds
26
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.30 seconds
27
mutate took 0.03 seconds
28
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
evaluate_mse took 0.32 seconds
29
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
evaluate_mse took 0.28 seconds
here in mutations after all complete
change (mutation) took 13.41 seconds
the_best took 0.01 seconds
23 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.26 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
23 generation repeat cross over 30 times and mutation 15 times
here
begin crossover
cross_over took 3.66 seconds
self.num is 30
0
1
mutate took 0.03 seconds
2
mutate took 0.02 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.22 seconds
4
mutate took 0.05 seconds
5
mutate took 0.02 seconds
6
mutate took 0.04 seconds
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.28 seconds
7
mutate took 0.03 seconds
8
mutate took 0.07 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.20 seconds
9
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
evaluate_mse took 0.25 seconds
10
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.20 seconds
11
mutate took 0.04 seconds
12
mutate took 0.04 seconds
13
mutate took 0.03 seconds
14
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.19 seconds
15
mutate took 0.03 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.24 seconds
16
mutate took 0.04 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.14 seconds
evaluate_mse took 0.25 seconds
17
mutate took 0.04 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.10 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.24 seconds
19
mutate took 0.03 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.19 seconds
20
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.20 seconds
21
mutate took 0.01 seconds
evaluate_mse took 0.15 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.28 seconds
22
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.18 seconds
23
mutate took 0.01 seconds
24
mutate took 0.01 seconds
25
mutate took 0.02 seconds
26
mutate took 0.03 seconds
27
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.21 seconds
28
mutate took 0.01 seconds
29
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.21 seconds
here in mutations after all complete
change (mutation) took 11.00 seconds
the_best took 0.01 seconds
24 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.17 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
24 generation repeat cross over 30 times and mutation 14 times
here
begin crossover
cross_over took 2.33 seconds
self.num is 30
0
1
mutate took 0.03 seconds
2
mutate took 0.02 seconds
3
mutate took 0.02 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.20 seconds
4
mutate took 0.03 seconds
5
mutate took 0.02 seconds
6
mutate took 0.06 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.18 seconds
7
mutate took 0.04 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.21 seconds
8
mutate took 0.04 seconds
9
mutate took 0.02 seconds
10
mutate took 0.03 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.09 seconds
evaluate_mse took 0.19 seconds
11
mutate took 0.03 seconds
12
mutate took 0.05 seconds
evaluate_mse took 0.11 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.25 seconds
13
mutate took 0.03 seconds
14
mutate took 0.02 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.22 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.13 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.27 seconds
16
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.17 seconds
17
mutate took 0.03 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.21 seconds
19
mutate took 0.04 seconds
20
mutate took 0.03 seconds
21
mutate took 0.04 seconds
22
mutate took 0.01 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.21 seconds
23
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.23 seconds
24
mutate took 0.05 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.16 seconds
25
mutate took 0.06 seconds
26
mutate took 0.03 seconds
evaluate_mse took 0.06 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.22 seconds
27
mutate took 0.03 seconds
evaluate_mse took 0.18 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.31 seconds
28
mutate took 0.02 seconds
29
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 8.83 seconds
the_best took 0.00 seconds
25 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.18 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
25 generation repeat cross over 30 times and mutation 15 times
here
begin crossover
cross_over took 2.54 seconds
self.num is 30
0
1
mutate took 0.02 seconds
2
mutate took 0.03 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.10 seconds
evaluate_mse took 0.16 seconds
3
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.18 seconds
4
mutate took 0.02 seconds
5
mutate took 0.05 seconds
6
mutate took 0.06 seconds
7
mutate took 0.04 seconds
8
mutate took 0.03 seconds
9
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.21 seconds
10
mutate took 0.04 seconds
11
mutate took 0.04 seconds
evaluate_mse took 0.07 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.22 seconds
12
mutate took 0.04 seconds
13
mutate took 0.04 seconds
evaluate_mse took 0.03 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.18 seconds
14
mutate took 0.05 seconds
15
mutate took 0.02 seconds
evaluate_mse took 0.04 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.18 seconds
16
mutate took 0.02 seconds
17
mutate took 0.03 seconds
18
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.21 seconds
19
mutate took 0.03 seconds
20
mutate took 0.03 seconds
21
mutate took 0.04 seconds
22
mutate took 0.03 seconds
23
mutate took 0.04 seconds
24
mutate took 0.06 seconds
25
mutate took 0.05 seconds
26
mutate took 0.02 seconds
evaluate_mse took 0.02 seconds
deleting took 0.00 seconds
Train took 0.13 seconds
evaluate_mse took 0.17 seconds
27
mutate took 0.03 seconds
evaluate_mse took 0.05 seconds
deleting took 0.00 seconds
Train took 0.11 seconds
evaluate_mse took 0.17 seconds
28
mutate took 0.02 seconds
evaluate_mse took 0.08 seconds
deleting took 0.00 seconds
Train took 0.12 seconds
evaluate_mse took 0.22 seconds
29
mutate took 0.02 seconds
here in mutations after all complete
change (mutation) took 6.65 seconds
the_best took 0.01 seconds
26 generation best_aic & best Eq: 0.636152241528414, ((u d^2 y) d^2 x)
evaluate_mse took 0.09 seconds
deleting took 0.00 seconds
Train took 0.16 seconds
best concise Eq: -20.1639((u d^2 y) d^2 x)
The best equation has not changed for 5 generations, stop the iteration
